<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="1350" onload="init(evt)" viewBox="0 0 1200 1350" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
		search();
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) {
				currentSearchTerm = term;
				search();
			}
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (currentSearchTerm === null) return;
		var term = currentSearchTerm;

		var re = new RegExp(term, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="1350.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >Flame Graph</text>
<text id="details" x="10.00" y="1333" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="ignorecase" x="1174.00" y="24" >ic</text>
<text id="matched" x="1090.00" y="1333" > </text>
<g id="frames">
<g >
<title>[librmw_cyclonedds_cpp.so] (1 samples, 0.05%)</title><rect x="497.5" y="1125" width="0.6" height="15.0" fill="rgb(209,222,2)" rx="2" ry="2" />
<text  x="500.49" y="1135.5" ></text>
</g>
<g >
<title>event_sched_in.isra.0 (4 samples, 0.21%)</title><rect x="277.6" y="885" width="2.5" height="15.0" fill="rgb(206,153,2)" rx="2" ry="2" />
<text  x="280.59" y="895.5" ></text>
</g>
<g >
<title>rmw_cyclonedds_cpp::CDRCursor::align (1 samples, 0.05%)</title><rect x="813.4" y="789" width="0.6" height="15.0" fill="rgb(247,183,9)" rx="2" ry="2" />
<text  x="816.39" y="799.5" ></text>
</g>
<g >
<title>__ip_append_data.isra.0 (2 samples, 0.10%)</title><rect x="1188.8" y="1109" width="1.2" height="15.0" fill="rgb(206,155,46)" rx="2" ry="2" />
<text  x="1191.76" y="1119.5" ></text>
</g>
<g >
<title>__tls_get_addr (4 samples, 0.21%)</title><rect x="583.0" y="933" width="2.4" height="15.0" fill="rgb(215,89,52)" rx="2" ry="2" />
<text  x="585.97" y="943.5" ></text>
</g>
<g >
<title>process_backlog (1 samples, 0.05%)</title><rect x="1180.1" y="693" width="0.6" height="15.0" fill="rgb(228,75,46)" rx="2" ry="2" />
<text  x="1183.09" y="703.5" ></text>
</g>
<g >
<title>tick_sched_handle (1 samples, 0.05%)</title><rect x="1160.3" y="901" width="0.6" height="15.0" fill="rgb(234,197,36)" rx="2" ry="2" />
<text  x="1163.27" y="911.5" ></text>
</g>
<g >
<title>rt_dst_alloc (5 samples, 0.26%)</title><rect x="652.3" y="613" width="3.1" height="15.0" fill="rgb(207,62,19)" rx="2" ry="2" />
<text  x="655.34" y="623.5" ></text>
</g>
<g >
<title>[libddsc.so.0.8.0] (2 samples, 0.10%)</title><rect x="385.4" y="1125" width="1.2" height="15.0" fill="rgb(225,143,45)" rx="2" ry="2" />
<text  x="388.37" y="1135.5" ></text>
</g>
<g >
<title>dds_handle_pin (1 samples, 0.05%)</title><rect x="573.7" y="917" width="0.6" height="15.0" fill="rgb(233,142,48)" rx="2" ry="2" />
<text  x="576.67" y="927.5" ></text>
</g>
<g >
<title>[librmw_cyclonedds_cpp.so] (1 samples, 0.05%)</title><rect x="415.7" y="1093" width="0.6" height="15.0" fill="rgb(240,187,10)" rx="2" ry="2" />
<text  x="418.72" y="1103.5" ></text>
</g>
<g >
<title>deactivate_task (21 samples, 1.10%)</title><rect x="249.7" y="997" width="13.0" height="15.0" fill="rgb(211,4,7)" rx="2" ry="2" />
<text  x="252.72" y="1007.5" ></text>
</g>
<g >
<title>udp_queue_rcv_one_skb (50 samples, 2.62%)</title><rect x="687.6" y="277" width="31.0" height="15.0" fill="rgb(235,44,32)" rx="2" ry="2" />
<text  x="690.65" y="287.5" >ud..</text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;int&gt; &gt;::max_size (2 samples, 0.10%)</title><rect x="959.0" y="981" width="1.2" height="15.0" fill="rgb(223,129,51)" rx="2" ry="2" />
<text  x="961.96" y="991.5" ></text>
</g>
<g >
<title>update_nohz_stats (2 samples, 0.10%)</title><rect x="1160.9" y="949" width="1.2" height="15.0" fill="rgb(238,77,51)" rx="2" ry="2" />
<text  x="1163.89" y="959.5" ></text>
</g>
<g >
<title>std::__detail::_Hash_code_base&lt;rmw_event_type_t, std::pair&lt;rmw_event_type_t const, unsigned int&gt;, std::__detail::_Select1st, std::hash&lt;rmw_event_type_t&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false&gt;::_M_h1 (1 samples, 0.05%)</title><rect x="120.3" y="1253" width="0.6" height="15.0" fill="rgb(253,127,25)" rx="2" ry="2" />
<text  x="123.26" y="1263.5" ></text>
</g>
<g >
<title>task_ctx_sched_out (2 samples, 0.10%)</title><rect x="248.5" y="981" width="1.2" height="15.0" fill="rgb(226,157,16)" rx="2" ry="2" />
<text  x="251.48" y="991.5" ></text>
</g>
<g >
<title>rmw_cyclonedds_cpp::CDRWriter::serialize (53 samples, 2.78%)</title><rect x="789.9" y="821" width="32.8" height="15.0" fill="rgb(251,71,5)" rx="2" ry="2" />
<text  x="792.85" y="831.5" >rm..</text>
</g>
<g >
<title>[librmw_cyclonedds_cpp.so] (1 samples, 0.05%)</title><rect x="421.9" y="1077" width="0.6" height="15.0" fill="rgb(212,12,39)" rx="2" ry="2" />
<text  x="424.92" y="1087.5" ></text>
</g>
<g >
<title>__ksize (6 samples, 0.31%)</title><rect x="630.0" y="549" width="3.8" height="15.0" fill="rgb(208,43,50)" rx="2" ry="2" />
<text  x="633.04" y="559.5" ></text>
</g>
<g >
<title>finish_task_switch (4 samples, 0.21%)</title><rect x="1113.2" y="1141" width="2.5" height="15.0" fill="rgb(233,106,28)" rx="2" ry="2" />
<text  x="1116.19" y="1151.5" ></text>
</g>
<g >
<title>[librmw_cyclonedds_cpp.so] (3 samples, 0.16%)</title><rect x="816.5" y="773" width="1.8" height="15.0" fill="rgb(244,157,33)" rx="2" ry="2" />
<text  x="819.49" y="783.5" ></text>
</g>
<g >
<title>std::__detail::_Hash_node_value_base&lt;std::pair&lt;rmw_cyclonedds_cpp::CDRWriter::CacheKey const, bool&gt; &gt;::_M_v (1 samples, 0.05%)</title><rect x="796.0" y="693" width="0.7" height="15.0" fill="rgb(252,196,7)" rx="2" ry="2" />
<text  x="799.05" y="703.5" ></text>
</g>
<g >
<title>ksize (6 samples, 0.31%)</title><rect x="630.0" y="565" width="3.8" height="15.0" fill="rgb(243,193,52)" rx="2" ry="2" />
<text  x="633.04" y="575.5" ></text>
</g>
<g >
<title>enqueue_entity (8 samples, 0.42%)</title><rect x="696.9" y="69" width="5.0" height="15.0" fill="rgb(245,41,43)" rx="2" ry="2" />
<text  x="699.94" y="79.5" ></text>
</g>
<g >
<title>event_sched_in.isra.0 (1 samples, 0.05%)</title><rect x="1152.8" y="885" width="0.7" height="15.0" fill="rgb(243,88,44)" rx="2" ry="2" />
<text  x="1155.83" y="895.5" ></text>
</g>
<g >
<title>rmw_cyclonedds_cpp::CDRWriter::lookup_trivially_serialized (2 samples, 0.10%)</title><rect x="848.7" y="773" width="1.2" height="15.0" fill="rgb(241,0,33)" rx="2" ry="2" />
<text  x="851.70" y="783.5" ></text>
</g>
<g >
<title>[libddsc.so.0.8.0] (2 samples, 0.10%)</title><rect x="591.6" y="917" width="1.3" height="15.0" fill="rgb(238,169,49)" rx="2" ry="2" />
<text  x="594.64" y="927.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (12 samples, 0.63%)</title><rect x="1182.6" y="1269" width="7.4" height="15.0" fill="rgb(207,74,13)" rx="2" ry="2" />
<text  x="1185.57" y="1279.5" ></text>
</g>
<g >
<title>default_wake_function (1 samples, 0.05%)</title><rect x="1180.1" y="373" width="0.6" height="15.0" fill="rgb(245,22,7)" rx="2" ry="2" />
<text  x="1183.09" y="383.5" ></text>
</g>
<g >
<title>inet_sendmsg (1 samples, 0.05%)</title><rect x="1180.1" y="917" width="0.6" height="15.0" fill="rgb(241,81,50)" rx="2" ry="2" />
<text  x="1183.09" y="927.5" ></text>
</g>
<g >
<title>__sched_text_start (7 samples, 0.37%)</title><rect x="37.3" y="901" width="4.3" height="15.0" fill="rgb(235,141,50)" rx="2" ry="2" />
<text  x="40.25" y="911.5" ></text>
</g>
<g >
<title>dds_entity_lock (1 samples, 0.05%)</title><rect x="201.4" y="1189" width="0.6" height="15.0" fill="rgb(206,95,45)" rx="2" ry="2" />
<text  x="204.40" y="1199.5" ></text>
</g>
<g >
<title>pick_next_task_idle (3 samples, 0.16%)</title><rect x="1162.7" y="997" width="1.9" height="15.0" fill="rgb(218,34,11)" rx="2" ry="2" />
<text  x="1165.75" y="1007.5" ></text>
</g>
<g >
<title>std::array&lt;char, 4ul&gt;::data (5 samples, 0.26%)</title><rect x="767.6" y="853" width="3.1" height="15.0" fill="rgb(205,106,16)" rx="2" ry="2" />
<text  x="770.55" y="863.5" ></text>
</g>
<g >
<title>ddsi_udp_conn_read (1 samples, 0.05%)</title><rect x="21.8" y="1173" width="0.6" height="15.0" fill="rgb(225,50,34)" rx="2" ry="2" />
<text  x="24.77" y="1183.5" ></text>
</g>
<g >
<title>scheduler_tick (1 samples, 0.05%)</title><rect x="1160.3" y="869" width="0.6" height="15.0" fill="rgb(237,43,33)" rx="2" ry="2" />
<text  x="1163.27" y="879.5" ></text>
</g>
<g >
<title>__update_idle_core (1 samples, 0.05%)</title><rect x="1164.0" y="965" width="0.6" height="15.0" fill="rgb(253,39,47)" rx="2" ry="2" />
<text  x="1166.98" y="975.5" ></text>
</g>
<g >
<title>rcutils_fault_injection_get_count (1 samples, 0.05%)</title><rect x="164.9" y="1173" width="0.6" height="15.0" fill="rgb(246,136,1)" rx="2" ry="2" />
<text  x="167.86" y="1183.5" ></text>
</g>
<g >
<title>ip_mc_output (2 samples, 0.10%)</title><rect x="1177.0" y="869" width="1.2" height="15.0" fill="rgb(242,37,54)" rx="2" ry="2" />
<text  x="1179.99" y="879.5" ></text>
</g>
<g >
<title>std_msgs::msg::rosidl_typesupport_introspection_cpp::size_function__MultiArrayLayout__dim (3 samples, 0.16%)</title><rect x="803.5" y="725" width="1.8" height="15.0" fill="rgb(214,226,5)" rx="2" ry="2" />
<text  x="806.48" y="735.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;unsigned long  (8 samples, 0.42%)</title><rect x="800.4" y="741" width="4.9" height="15.0" fill="rgb(235,118,15)" rx="2" ry="2" />
<text  x="803.38" y="751.5" ></text>
</g>
<g >
<title>get_timespec64 (1 samples, 0.05%)</title><rect x="1167.7" y="1077" width="0.6" height="15.0" fill="rgb(229,188,44)" rx="2" ry="2" />
<text  x="1170.70" y="1087.5" ></text>
</g>
<g >
<title>ddsrt_cond_waituntil (6 samples, 0.31%)</title><rect x="16.8" y="1189" width="3.7" height="15.0" fill="rgb(231,137,47)" rx="2" ry="2" />
<text  x="19.81" y="1199.5" ></text>
</g>
<g >
<title>__wake_up_common_lock (39 samples, 2.05%)</title><rect x="689.5" y="213" width="24.2" height="15.0" fill="rgb(231,90,41)" rx="2" ry="2" />
<text  x="692.51" y="223.5" >_..</text>
</g>
<g >
<title>rcl_clock_get_now (1 samples, 0.05%)</title><rect x="111.0" y="1253" width="0.6" height="15.0" fill="rgb(240,83,24)" rx="2" ry="2" />
<text  x="113.97" y="1263.5" ></text>
</g>
<g >
<title>__dynamic_cast (9 samples, 0.47%)</title><rect x="831.4" y="821" width="5.5" height="15.0" fill="rgb(241,13,0)" rx="2" ry="2" />
<text  x="834.35" y="831.5" ></text>
</g>
<g >
<title>std::vector&lt;long, std::allocator&lt;long&gt; &gt;::_M_erase_at_end (4 samples, 0.21%)</title><rect x="499.3" y="1189" width="2.5" height="15.0" fill="rgb(226,179,24)" rx="2" ry="2" />
<text  x="502.34" y="1199.5" ></text>
</g>
<g >
<title>ip_local_out (2 samples, 0.10%)</title><rect x="1177.0" y="885" width="1.2" height="15.0" fill="rgb(208,114,54)" rx="2" ry="2" />
<text  x="1179.99" y="895.5" ></text>
</g>
<g >
<title>__udp_enqueue_schedule_skb (1 samples, 0.05%)</title><rect x="1180.1" y="485" width="0.6" height="15.0" fill="rgb(222,102,18)" rx="2" ry="2" />
<text  x="1183.09" y="495.5" ></text>
</g>
<g >
<title>update_load_avg (1 samples, 0.05%)</title><rect x="1149.7" y="949" width="0.7" height="15.0" fill="rgb(209,29,14)" rx="2" ry="2" />
<text  x="1152.74" y="959.5" ></text>
</g>
<g >
<title>dst_init (1 samples, 0.05%)</title><rect x="654.8" y="597" width="0.6" height="15.0" fill="rgb(243,160,20)" rx="2" ry="2" />
<text  x="657.82" y="607.5" ></text>
</g>
<g >
<title>serialize_into_serdata_rmw_on_demand (1 samples, 0.05%)</title><rect x="906.9" y="869" width="0.6" height="15.0" fill="rgb(252,21,48)" rx="2" ry="2" />
<text  x="909.92" y="879.5" ></text>
</g>
<g >
<title>std::__detail::_Hash_code_base&lt;rmw_event_type_t, std::pair&lt;rmw_event_type_t const, unsigned int&gt;, std::__detail::_Select1st, std::hash&lt;rmw_event_type_t&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false&gt;::_M_bucket_index (16 samples, 0.84%)</title><rect x="412.6" y="1125" width="9.9" height="15.0" fill="rgb(241,199,34)" rx="2" ry="2" />
<text  x="415.62" y="1135.5" ></text>
</g>
<g >
<title>handle_equal (1 samples, 0.05%)</title><rect x="211.3" y="1141" width="0.6" height="15.0" fill="rgb(225,126,29)" rx="2" ry="2" />
<text  x="214.31" y="1151.5" ></text>
</g>
<g >
<title>__GI___clone (10 samples, 0.52%)</title><rect x="37.3" y="1269" width="6.1" height="15.0" fill="rgb(241,197,49)" rx="2" ry="2" />
<text  x="40.25" y="1279.5" ></text>
</g>
<g >
<title>loopback_xmit (6 samples, 0.31%)</title><rect x="726.1" y="501" width="3.7" height="15.0" fill="rgb(232,144,13)" rx="2" ry="2" />
<text  x="729.05" y="511.5" ></text>
</g>
<g >
<title>rcu_all_qs (1 samples, 0.05%)</title><rect x="1110.1" y="1173" width="0.6" height="15.0" fill="rgb(229,162,38)" rx="2" ry="2" />
<text  x="1113.09" y="1183.5" ></text>
</g>
<g >
<title>ddsrt_mutex_lock (1 samples, 0.05%)</title><rect x="750.8" y="901" width="0.6" height="15.0" fill="rgb(214,24,27)" rx="2" ry="2" />
<text  x="753.83" y="911.5" ></text>
</g>
<g >
<title>copy_user_enhanced_fast_string (1 samples, 0.05%)</title><rect x="1189.4" y="1061" width="0.6" height="15.0" fill="rgb(222,53,42)" rx="2" ry="2" />
<text  x="1192.38" y="1071.5" ></text>
</g>
<g >
<title>dds_write_impl (1 samples, 0.05%)</title><rect x="133.3" y="1253" width="0.6" height="15.0" fill="rgb(251,14,22)" rx="2" ry="2" />
<text  x="136.27" y="1263.5" ></text>
</g>
<g >
<title>__libc_disable_asynccancel (1 samples, 0.05%)</title><rect x="23.0" y="1141" width="0.6" height="15.0" fill="rgb(239,113,41)" rx="2" ry="2" />
<text  x="26.01" y="1151.5" ></text>
</g>
<g >
<title>__x64_sys_recvmsg (1 samples, 0.05%)</title><rect x="21.8" y="1077" width="0.6" height="15.0" fill="rgb(221,21,20)" rx="2" ry="2" />
<text  x="24.77" y="1087.5" ></text>
</g>
<g >
<title>__dynamic_cast (3 samples, 0.16%)</title><rect x="842.5" y="789" width="1.9" height="15.0" fill="rgb(253,183,24)" rx="2" ry="2" />
<text  x="845.50" y="799.5" ></text>
</g>
<g >
<title>__cxxabiv1::__si_class_type_info::__do_dyncast (3 samples, 0.16%)</title><rect x="842.5" y="773" width="1.9" height="15.0" fill="rgb(234,203,0)" rx="2" ry="2" />
<text  x="845.50" y="783.5" ></text>
</g>
<g >
<title>std::_Head_base&lt;0ul, byte*, false&gt;::_M_head (1 samples, 0.05%)</title><rect x="862.9" y="805" width="0.7" height="15.0" fill="rgb(210,149,52)" rx="2" ry="2" />
<text  x="865.94" y="815.5" ></text>
</g>
<g >
<title>__alloc_skb (1 samples, 0.05%)</title><rect x="1117.5" y="1045" width="0.6" height="15.0" fill="rgb(241,179,19)" rx="2" ry="2" />
<text  x="1120.53" y="1055.5" ></text>
</g>
<g >
<title>std::forward_as_tuple&lt;&gt; (1 samples, 0.05%)</title><rect x="977.5" y="1109" width="0.7" height="15.0" fill="rgb(227,223,22)" rx="2" ry="2" />
<text  x="980.54" y="1119.5" ></text>
</g>
<g >
<title>builtins_dqueue_handler (3 samples, 0.16%)</title><rect x="10.0" y="1189" width="1.9" height="15.0" fill="rgb(240,31,24)" rx="2" ry="2" />
<text  x="13.00" y="1199.5" ></text>
</g>
<g >
<title>get_nohz_timer_target (1 samples, 0.05%)</title><rect x="1108.9" y="1157" width="0.6" height="15.0" fill="rgb(210,34,4)" rx="2" ry="2" />
<text  x="1111.86" y="1167.5" ></text>
</g>
<g >
<title>futex_wake (17 samples, 0.89%)</title><rect x="356.9" y="1077" width="10.5" height="15.0" fill="rgb(225,188,35)" rx="2" ry="2" />
<text  x="359.88" y="1087.5" ></text>
</g>
<g >
<title>perf_event_update_userpage (1 samples, 0.05%)</title><rect x="1152.8" y="853" width="0.7" height="15.0" fill="rgb(239,70,19)" rx="2" ry="2" />
<text  x="1155.83" y="863.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;rmw_event_type_t, std::pair&lt;rmw_event_type_t const, unsigned int&gt;, std::allocator&lt;std::pair&lt;rmw_event_type_t const, unsigned int&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;rmw_event_type_t&gt;, std::hash&lt;rmw_event_type_t&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_find_before_node (1 samples, 0.05%)</title><rect x="400.2" y="1125" width="0.7" height="15.0" fill="rgb(209,144,48)" rx="2" ry="2" />
<text  x="403.24" y="1135.5" ></text>
</g>
<g >
<title>rclcpp::Executor::get_next_ready_executable_from_map (11 samples, 0.58%)</title><rect x="983.1" y="1157" width="6.8" height="15.0" fill="rgb(222,145,6)" rx="2" ry="2" />
<text  x="986.11" y="1167.5" ></text>
</g>
<g >
<title>std::__detail::_Hash_code_base&lt;rmw_cyclonedds_cpp::CDRWriter::CacheKey, std::pair&lt;rmw_cyclonedds_cpp::CDRWriter::CacheKey const, bool&gt;, std::__detail::_Select1st, rmw_cyclonedds_cpp::CDRWriter::CacheKey::Hash, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, true&gt;::_M_bucket_index (1 samples, 0.05%)</title><rect x="848.7" y="709" width="0.6" height="15.0" fill="rgb(226,36,54)" rx="2" ry="2" />
<text  x="851.70" y="719.5" ></text>
</g>
<g >
<title>std::__detail::_Equal_helper&lt;rmw_cyclonedds_cpp::CDRWriter::CacheKey, std::pair&lt;rmw_cyclonedds_cpp::CDRWriter::CacheKey const, bool&gt;, std::__detail::_Select1st, std::equal_to&lt;rmw_cyclonedds_cpp::CDRWriter::CacheKey&gt;, unsigned long, true&gt;::_S_equals (1 samples, 0.05%)</title><rect x="850.6" y="677" width="0.6" height="15.0" fill="rgb(236,183,29)" rx="2" ry="2" />
<text  x="853.56" y="687.5" ></text>
</g>
<g >
<title>rclcpp::allocator::retyped_reallocate&lt;void*, std::allocator&lt;void*&gt; &gt; (1 samples, 0.05%)</title><rect x="1130.5" y="1269" width="0.7" height="15.0" fill="rgb(210,60,41)" rx="2" ry="2" />
<text  x="1133.54" y="1279.5" ></text>
</g>
<g >
<title>get_timespec64 (1 samples, 0.05%)</title><rect x="1188.1" y="1221" width="0.7" height="15.0" fill="rgb(249,58,43)" rx="2" ry="2" />
<text  x="1191.14" y="1231.5" ></text>
</g>
<g >
<title>xfrm_lookup_with_ifid (1 samples, 0.05%)</title><rect x="656.7" y="645" width="0.6" height="15.0" fill="rgb(232,122,28)" rx="2" ry="2" />
<text  x="659.68" y="655.5" ></text>
</g>
<g >
<title>udp_unicast_rcv_skb.isra.0 (51 samples, 2.68%)</title><rect x="687.0" y="309" width="31.6" height="15.0" fill="rgb(246,86,6)" rx="2" ry="2" />
<text  x="690.03" y="319.5" >ud..</text>
</g>
<g >
<title>byte_offset (1 samples, 0.05%)</title><rect x="110.3" y="1253" width="0.7" height="15.0" fill="rgb(213,227,24)" rx="2" ry="2" />
<text  x="113.35" y="1263.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;byte, std::default_delete&lt;byte []&gt; &gt;::_M_ptr (1 samples, 0.05%)</title><rect x="858.6" y="869" width="0.6" height="15.0" fill="rgb(229,210,22)" rx="2" ry="2" />
<text  x="861.61" y="879.5" ></text>
</g>
<g >
<title>ip_route_output_key_hash (2 samples, 0.10%)</title><rect x="1118.1" y="1109" width="1.3" height="15.0" fill="rgb(231,178,20)" rx="2" ry="2" />
<text  x="1121.15" y="1119.5" ></text>
</g>
<g >
<title>__netif_receive_skb (11 samples, 0.58%)</title><rect x="1121.2" y="917" width="6.9" height="15.0" fill="rgb(228,20,10)" rx="2" ry="2" />
<text  x="1124.24" y="927.5" ></text>
</g>
<g >
<title>start_thread (10 samples, 0.52%)</title><rect x="10.0" y="1253" width="6.2" height="15.0" fill="rgb(249,170,37)" rx="2" ry="2" />
<text  x="13.00" y="1263.5" ></text>
</g>
<g >
<title>std::__uninitialized_default_n&lt;long*, unsigned long&gt; (8 samples, 0.42%)</title><rect x="487.0" y="1157" width="4.9" height="15.0" fill="rgb(221,79,19)" rx="2" ry="2" />
<text  x="489.96" y="1167.5" ></text>
</g>
<g >
<title>ip_output (15 samples, 0.79%)</title><rect x="1119.4" y="1077" width="9.3" height="15.0" fill="rgb(250,102,51)" rx="2" ry="2" />
<text  x="1122.39" y="1087.5" ></text>
</g>
<g >
<title>do_syscall_64 (1 samples, 0.05%)</title><rect x="1180.1" y="1013" width="0.6" height="15.0" fill="rgb(226,72,25)" rx="2" ry="2" />
<text  x="1183.09" y="1023.5" ></text>
</g>
<g >
<title>std::move&lt;byte*&amp;&gt; (1 samples, 0.05%)</title><rect x="864.2" y="853" width="0.6" height="15.0" fill="rgb(224,192,32)" rx="2" ry="2" />
<text  x="867.18" y="863.5" ></text>
</g>
<g >
<title>rcl_guard_condition_get_rmw_handle (1 samples, 0.05%)</title><rect x="1027.7" y="1109" width="0.6" height="15.0" fill="rgb(236,166,18)" rx="2" ry="2" />
<text  x="1030.71" y="1119.5" ></text>
</g>
<g >
<title>serdata_rmw_size (1 samples, 0.05%)</title><rect x="931.7" y="917" width="0.6" height="15.0" fill="rgb(226,170,20)" rx="2" ry="2" />
<text  x="934.70" y="927.5" ></text>
</g>
<g >
<title>dev_hard_start_xmit (9 samples, 0.47%)</title><rect x="724.8" y="517" width="5.6" height="15.0" fill="rgb(210,164,53)" rx="2" ry="2" />
<text  x="727.81" y="527.5" ></text>
</g>
<g >
<title>deactivate_task (4 samples, 0.21%)</title><rect x="1147.9" y="997" width="2.5" height="15.0" fill="rgb(227,135,9)" rx="2" ry="2" />
<text  x="1150.88" y="1007.5" ></text>
</g>
<g >
<title>futex_wait (1 samples, 0.05%)</title><rect x="1167.1" y="1077" width="0.6" height="15.0" fill="rgb(224,64,36)" rx="2" ry="2" />
<text  x="1170.08" y="1087.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, byte*, std::default_delete&lt;byte []&gt; &gt; (6 samples, 0.31%)</title><rect x="859.8" y="853" width="3.8" height="15.0" fill="rgb(248,145,2)" rx="2" ry="2" />
<text  x="862.85" y="863.5" ></text>
</g>
<g >
<title>__GI___pthread_mutex_lock (1 samples, 0.05%)</title><rect x="395.3" y="1141" width="0.6" height="15.0" fill="rgb(253,209,7)" rx="2" ry="2" />
<text  x="398.28" y="1151.5" ></text>
</g>
<g >
<title>ddsrt_mutex_unlock (1 samples, 0.05%)</title><rect x="939.1" y="949" width="0.7" height="15.0" fill="rgb(238,159,18)" rx="2" ry="2" />
<text  x="942.13" y="959.5" ></text>
</g>
<g >
<title>std_msgs::msg::MultiArrayLayout_&lt;std::allocator&lt;void&gt; &gt;::~MultiArrayLayout_ (4 samples, 0.21%)</title><rect x="971.3" y="1029" width="2.5" height="15.0" fill="rgb(244,182,18)" rx="2" ry="2" />
<text  x="974.34" y="1039.5" ></text>
</g>
<g >
<title>__condvar_dec_grefs (4 samples, 0.21%)</title><rect x="221.8" y="1141" width="2.5" height="15.0" fill="rgb(208,10,54)" rx="2" ry="2" />
<text  x="224.84" y="1151.5" ></text>
</g>
<g >
<title>try_to_wake_up (32 samples, 1.68%)</title><rect x="691.4" y="133" width="19.8" height="15.0" fill="rgb(239,94,4)" rx="2" ry="2" />
<text  x="694.36" y="143.5" ></text>
</g>
<g >
<title>__sys_sendmsg (21 samples, 1.10%)</title><rect x="1116.3" y="1221" width="13.0" height="15.0" fill="rgb(246,79,15)" rx="2" ry="2" />
<text  x="1119.29" y="1231.5" ></text>
</g>
<g >
<title>ddsrt_hh_lookup (1 samples, 0.05%)</title><rect x="894.5" y="885" width="0.7" height="15.0" fill="rgb(217,115,14)" rx="2" ry="2" />
<text  x="897.54" y="895.5" ></text>
</g>
<g >
<title>serdata_rmw_free (11 samples, 0.58%)</title><rect x="898.3" y="869" width="6.8" height="15.0" fill="rgb(238,123,14)" rx="2" ry="2" />
<text  x="901.25" y="879.5" ></text>
</g>
<g >
<title>unref_addrset (1 samples, 0.05%)</title><rect x="758.9" y="901" width="0.6" height="15.0" fill="rgb(249,93,32)" rx="2" ry="2" />
<text  x="761.88" y="911.5" ></text>
</g>
<g >
<title>sched_clock_cpu (1 samples, 0.05%)</title><rect x="271.4" y="933" width="0.6" height="15.0" fill="rgb(220,48,20)" rx="2" ry="2" />
<text  x="274.40" y="943.5" ></text>
</g>
<g >
<title>futex_wait_queue_me (5 samples, 0.26%)</title><rect x="16.8" y="1045" width="3.1" height="15.0" fill="rgb(241,154,7)" rx="2" ry="2" />
<text  x="19.81" y="1055.5" ></text>
</g>
<g >
<title>serdata_rmw::~serdata_rmw (11 samples, 0.58%)</title><rect x="898.3" y="853" width="6.8" height="15.0" fill="rgb(211,185,3)" rx="2" ry="2" />
<text  x="901.25" y="863.5" ></text>
</g>
<g >
<title>nn_xpack_send_real (2 samples, 0.10%)</title><rect x="1177.0" y="1189" width="1.2" height="15.0" fill="rgb(241,149,25)" rx="2" ry="2" />
<text  x="1179.99" y="1199.5" ></text>
</g>
<g >
<title>std::vector&lt;long, std::allocator&lt;long&gt; &gt;::max_size (12 samples, 0.63%)</title><rect x="491.9" y="1173" width="7.4" height="15.0" fill="rgb(217,67,32)" rx="2" ry="2" />
<text  x="494.91" y="1183.5" ></text>
</g>
<g >
<title>__pthread_mutex_unlock_usercnt (1 samples, 0.05%)</title><rect x="984.4" y="1125" width="0.6" height="15.0" fill="rgb(239,31,14)" rx="2" ry="2" />
<text  x="987.35" y="1135.5" ></text>
</g>
<g >
<title>talker (1,757 samples, 92.23%)</title><rect x="43.4" y="1285" width="1088.4" height="15.0" fill="rgb(216,164,21)" rx="2" ry="2" />
<text  x="46.45" y="1295.5" >talker</text>
</g>
<g >
<title>skb_clone_tx_timestamp (1 samples, 0.05%)</title><rect x="729.8" y="501" width="0.6" height="15.0" fill="rgb(252,90,11)" rx="2" ry="2" />
<text  x="732.77" y="511.5" ></text>
</g>
<g >
<title>ddsrt_mutex_unlock (1 samples, 0.05%)</title><rect x="211.9" y="1157" width="0.7" height="15.0" fill="rgb(209,44,14)" rx="2" ry="2" />
<text  x="214.93" y="1167.5" ></text>
</g>
<g >
<title>std::vector&lt;rmw_cyclonedds_cpp::Member, std::allocator&lt;rmw_cyclonedds_cpp::Member&gt; &gt;::at (3 samples, 0.16%)</title><rect x="822.7" y="821" width="1.8" height="15.0" fill="rgb(213,183,28)" rx="2" ry="2" />
<text  x="825.68" y="831.5" ></text>
</g>
<g >
<title>require_reattach&lt;CddsService&gt; (4 samples, 0.21%)</title><rect x="440.5" y="1205" width="2.5" height="15.0" fill="rgb(221,49,54)" rx="2" ry="2" />
<text  x="443.50" y="1215.5" ></text>
</g>
<g >
<title>ip_generic_getfrag (9 samples, 0.47%)</title><rect x="618.9" y="629" width="5.6" height="15.0" fill="rgb(215,111,54)" rx="2" ry="2" />
<text  x="621.89" y="639.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (11 samples, 0.58%)</title><rect x="1121.2" y="965" width="6.9" height="15.0" fill="rgb(227,193,17)" rx="2" ry="2" />
<text  x="1124.24" y="975.5" ></text>
</g>
<g >
<title>dds_handle_pin (2 samples, 0.10%)</title><rect x="211.3" y="1173" width="1.3" height="15.0" fill="rgb(208,34,5)" rx="2" ry="2" />
<text  x="214.31" y="1183.5" ></text>
</g>
<g >
<title>__tls_get_addr (1 samples, 0.05%)</title><rect x="1178.2" y="1125" width="0.7" height="15.0" fill="rgb(253,180,42)" rx="2" ry="2" />
<text  x="1181.23" y="1135.5" ></text>
</g>
<g >
<title>_raw_spin_lock_irqsave (6 samples, 0.31%)</title><rect x="327.8" y="949" width="3.7" height="15.0" fill="rgb(234,11,26)" rx="2" ry="2" />
<text  x="330.76" y="959.5" ></text>
</g>
<g >
<title>__strcmp_avx2 (4 samples, 0.21%)</title><rect x="834.5" y="789" width="2.4" height="15.0" fill="rgb(245,50,26)" rx="2" ry="2" />
<text  x="837.45" y="799.5" ></text>
</g>
<g >
<title>copy_user_enhanced_fast_string (1 samples, 0.05%)</title><rect x="1167.7" y="1061" width="0.6" height="15.0" fill="rgb(245,142,49)" rx="2" ry="2" />
<text  x="1170.70" y="1071.5" ></text>
</g>
<g >
<title>update_dl_rq_load_avg (2 samples, 0.10%)</title><rect x="339.5" y="917" width="1.3" height="15.0" fill="rgb(205,142,20)" rx="2" ry="2" />
<text  x="342.53" y="927.5" ></text>
</g>
<g >
<title>get_futex_key (1 samples, 0.05%)</title><rect x="348.2" y="1045" width="0.6" height="15.0" fill="rgb(246,180,19)" rx="2" ry="2" />
<text  x="351.20" y="1055.5" ></text>
</g>
<g >
<title>std::min&lt;unsigned long&gt; (2 samples, 0.10%)</title><rect x="960.2" y="981" width="1.2" height="15.0" fill="rgb(222,221,17)" rx="2" ry="2" />
<text  x="963.19" y="991.5" ></text>
</g>
<g >
<title>__pthread_mutex_unlock_usercnt (26 samples, 1.36%)</title><rect x="353.2" y="1157" width="16.1" height="15.0" fill="rgb(217,229,29)" rx="2" ry="2" />
<text  x="356.16" y="1167.5" ></text>
</g>
<g >
<title>dds_handle_pin (2 samples, 0.10%)</title><rect x="542.1" y="1061" width="1.2" height="15.0" fill="rgb(248,103,42)" rx="2" ry="2" />
<text  x="545.08" y="1071.5" ></text>
</g>
<g >
<title>rcl_wait_set_add_subscription (6 samples, 0.31%)</title><rect x="1036.4" y="1125" width="3.7" height="15.0" fill="rgb(239,41,22)" rx="2" ry="2" />
<text  x="1039.38" y="1135.5" ></text>
</g>
<g >
<title>newidle_balance (3 samples, 0.16%)</title><rect x="1160.9" y="981" width="1.8" height="15.0" fill="rgb(208,149,11)" rx="2" ry="2" />
<text  x="1163.89" y="991.5" ></text>
</g>
<g >
<title>ddsrt_hh_lookup (9 samples, 0.47%)</title><rect x="386.6" y="1125" width="5.6" height="15.0" fill="rgb(248,212,12)" rx="2" ry="2" />
<text  x="389.61" y="1135.5" ></text>
</g>
<g >
<title>rcl_service_get_rmw_handle (1 samples, 0.05%)</title><rect x="112.2" y="1253" width="0.6" height="15.0" fill="rgb(230,82,40)" rx="2" ry="2" />
<text  x="115.20" y="1263.5" ></text>
</g>
<g >
<title>[librmw_cyclonedds_cpp.so] (2 samples, 0.10%)</title><rect x="800.4" y="725" width="1.2" height="15.0" fill="rgb(253,64,0)" rx="2" ry="2" />
<text  x="803.38" y="735.5" ></text>
</g>
<g >
<title>__x64_sys_select (22 samples, 1.15%)</title><rect x="23.6" y="1109" width="13.7" height="15.0" fill="rgb(225,187,54)" rx="2" ry="2" />
<text  x="26.63" y="1119.5" ></text>
</g>
<g >
<title>udp_queue_rcv_skb (6 samples, 0.31%)</title><rect x="1124.3" y="757" width="3.8" height="15.0" fill="rgb(228,4,33)" rx="2" ry="2" />
<text  x="1127.34" y="767.5" ></text>
</g>
<g >
<title>rclcpp::Publisher&lt;std_msgs::msg::Int32MultiArray_&lt;std::allocator&lt;void&gt; &gt;, std::allocator&lt;void&gt; &gt;::publish (609 samples, 31.97%)</title><rect x="564.4" y="1045" width="377.2" height="15.0" fill="rgb(207,9,52)" rx="2" ry="2" />
<text  x="567.38" y="1055.5" >rclcpp::Publisher&lt;std_msgs::msg::Int32MultiArray_&lt;s..</text>
</g>
<g >
<title>rclcpp::AnyExecutable::~AnyExecutable (2 samples, 0.10%)</title><rect x="533.4" y="1173" width="1.3" height="15.0" fill="rgb(213,148,4)" rx="2" ry="2" />
<text  x="536.41" y="1183.5" ></text>
</g>
<g >
<title>sock_def_readable (6 samples, 0.31%)</title><rect x="1124.3" y="709" width="3.8" height="15.0" fill="rgb(228,119,34)" rx="2" ry="2" />
<text  x="1127.34" y="719.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;byte, std::default_delete&lt;byte []&gt; &gt;::_M_ptr (6 samples, 0.31%)</title><rect x="859.8" y="869" width="3.8" height="15.0" fill="rgb(211,0,45)" rx="2" ry="2" />
<text  x="862.85" y="879.5" ></text>
</g>
<g >
<title>sched_clock_cpu (1 samples, 0.05%)</title><rect x="342.6" y="933" width="0.6" height="15.0" fill="rgb(225,125,1)" rx="2" ry="2" />
<text  x="345.63" y="943.5" ></text>
</g>
<g >
<title>serdata_rmw::resize (16 samples, 0.84%)</title><rect x="854.9" y="901" width="9.9" height="15.0" fill="rgb(230,144,8)" rx="2" ry="2" />
<text  x="857.89" y="911.5" ></text>
</g>
<g >
<title>pick_next_task_fair (3 samples, 0.16%)</title><rect x="1160.9" y="997" width="1.8" height="15.0" fill="rgb(218,54,51)" rx="2" ry="2" />
<text  x="1163.89" y="1007.5" ></text>
</g>
<g >
<title>sock_wfree (1 samples, 0.05%)</title><rect x="729.1" y="485" width="0.7" height="15.0" fill="rgb(217,53,7)" rx="2" ry="2" />
<text  x="732.15" y="495.5" ></text>
</g>
<g >
<title>rmw_cyclonedds_cpp::CDRWriter::put_rtps_header (2 samples, 0.10%)</title><rect x="828.3" y="869" width="1.2" height="15.0" fill="rgb(220,191,33)" rx="2" ry="2" />
<text  x="831.26" y="879.5" ></text>
</g>
<g >
<title>rclcpp::memory_strategies::allocator_memory_strategy::AllocatorMemoryStrategy&lt;std::allocator&lt;void&gt; &gt;::clear_handles (1 samples, 0.05%)</title><rect x="1048.2" y="1141" width="0.6" height="15.0" fill="rgb(205,87,45)" rx="2" ry="2" />
<text  x="1051.15" y="1151.5" ></text>
</g>
<g >
<title>serdata_rmw::size (1 samples, 0.05%)</title><rect x="119.6" y="1253" width="0.7" height="15.0" fill="rgb(251,180,12)" rx="2" ry="2" />
<text  x="122.64" y="1263.5" ></text>
</g>
<g >
<title>__get_index_of_key_if_exists (5 samples, 0.26%)</title><rect x="517.3" y="1189" width="3.1" height="15.0" fill="rgb(235,54,50)" rx="2" ry="2" />
<text  x="520.31" y="1199.5" ></text>
</g>
<g >
<title>rmw_cyclonedds_cpp::CDRWriter::serialize_u32 (1 samples, 0.05%)</title><rect x="813.4" y="805" width="0.6" height="15.0" fill="rgb(218,18,33)" rx="2" ry="2" />
<text  x="816.39" y="815.5" ></text>
</g>
<g >
<title>page_fault (1 samples, 0.05%)</title><rect x="42.8" y="1173" width="0.6" height="15.0" fill="rgb(230,45,51)" rx="2" ry="2" />
<text  x="45.83" y="1183.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.05%)</title><rect x="719.9" y="389" width="0.6" height="15.0" fill="rgb(249,97,12)" rx="2" ry="2" />
<text  x="722.86" y="399.5" ></text>
</g>
<g >
<title>get_futex_key_refs.isra.0 (1 samples, 0.05%)</title><rect x="1173.9" y="1061" width="0.6" height="15.0" fill="rgb(250,13,30)" rx="2" ry="2" />
<text  x="1176.90" y="1071.5" ></text>
</g>
<g >
<title>pthread_mutex_unlock (5 samples, 0.26%)</title><rect x="369.3" y="1173" width="3.1" height="15.0" fill="rgb(229,27,41)" rx="2" ry="2" />
<text  x="372.27" y="1183.5" ></text>
</g>
<g >
<title>std::__remove_if&lt;__gnu_cxx::__normal_iterator&lt;std::shared_ptr&lt;rcl_timer_t const&gt;*, std::vector&lt;std::shared_ptr&lt;rcl_timer_t const&gt;, std::allocator&lt;std::shared_ptr&lt;rcl_timer_t const&gt; &gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_equals_val&lt;decltype (1 samples, 0.05%)</title><rect x="1082.2" y="1125" width="0.6" height="15.0" fill="rgb(222,23,23)" rx="2" ry="2" />
<text  x="1085.22" y="1135.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, rmw_cyclonedds_cpp::CDRWriter::CacheKey const, bool&gt; (1 samples, 0.05%)</title><rect x="789.2" y="693" width="0.7" height="15.0" fill="rgb(244,141,22)" rx="2" ry="2" />
<text  x="792.23" y="703.5" ></text>
</g>
<g >
<title>security_socket_sendmsg (1 samples, 0.05%)</title><rect x="611.5" y="709" width="0.6" height="15.0" fill="rgb(205,124,47)" rx="2" ry="2" />
<text  x="614.46" y="719.5" ></text>
</g>
<g >
<title>x86_pmu_enable (6 samples, 0.31%)</title><rect x="12.5" y="949" width="3.7" height="15.0" fill="rgb(243,160,25)" rx="2" ry="2" />
<text  x="15.48" y="959.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;serdata_rmw, std::default_delete&lt;serdata_rmw&gt; &gt;::~unique_ptr (1 samples, 0.05%)</title><rect x="876.6" y="917" width="0.6" height="15.0" fill="rgb(230,204,53)" rx="2" ry="2" />
<text  x="879.57" y="927.5" ></text>
</g>
<g >
<title>rcl_wait (584 samples, 30.66%)</title><rect x="145.7" y="1253" width="361.7" height="15.0" fill="rgb(244,48,19)" rx="2" ry="2" />
<text  x="148.65" y="1263.5" >rcl_wait</text>
</g>
<g >
<title>____sys_sendmsg (1 samples, 0.05%)</title><rect x="1180.1" y="949" width="0.6" height="15.0" fill="rgb(234,56,38)" rx="2" ry="2" />
<text  x="1183.09" y="959.5" ></text>
</g>
<g >
<title>skb_consume_udp (1 samples, 0.05%)</title><rect x="41.6" y="965" width="0.6" height="15.0" fill="rgb(251,127,4)" rx="2" ry="2" />
<text  x="44.59" y="975.5" ></text>
</g>
<g >
<title>rmw_cyclonedds_cpp::CDRWriter::serialize (42 samples, 2.20%)</title><rect x="828.3" y="901" width="26.0" height="15.0" fill="rgb(209,224,43)" rx="2" ry="2" />
<text  x="831.26" y="911.5" >r..</text>
</g>
<g >
<title>__strlen_avx2 (3 samples, 0.16%)</title><rect x="176.0" y="1205" width="1.9" height="15.0" fill="rgb(220,205,7)" rx="2" ry="2" />
<text  x="179.01" y="1215.5" ></text>
</g>
<g >
<title>do_softirq.part.0 (11 samples, 0.58%)</title><rect x="1121.2" y="997" width="6.9" height="15.0" fill="rgb(228,23,5)" rx="2" ry="2" />
<text  x="1124.24" y="1007.5" ></text>
</g>
<g >
<title>nn_xmsg_new (1 samples, 0.05%)</title><rect x="938.5" y="885" width="0.6" height="15.0" fill="rgb(252,211,43)" rx="2" ry="2" />
<text  x="941.51" y="895.5" ></text>
</g>
<g >
<title>__wake_up_common_lock (1 samples, 0.05%)</title><rect x="1180.1" y="437" width="0.6" height="15.0" fill="rgb(241,109,20)" rx="2" ry="2" />
<text  x="1183.09" y="447.5" ></text>
</g>
<g >
<title>std::vector&lt;std_msgs::msg::MultiArrayDimension_&lt;std::allocator&lt;void&gt; &gt;, std::allocator&lt;std_msgs::msg::MultiArrayDimension_&lt;std::allocator&lt;void&gt; &gt; &gt; &gt;::vector (6 samples, 0.31%)</title><rect x="963.3" y="1013" width="3.7" height="15.0" fill="rgb(239,65,24)" rx="2" ry="2" />
<text  x="966.29" y="1023.5" ></text>
</g>
<g >
<title>std::tuple&lt;serdata_rmw*, std::default_delete&lt;serdata_rmw&gt; &gt;::tuple&lt;serdata_rmw*, std::default_delete&lt;serdata_rmw&gt;, true&gt; (3 samples, 0.16%)</title><rect x="874.7" y="869" width="1.9" height="15.0" fill="rgb(230,58,28)" rx="2" ry="2" />
<text  x="877.71" y="879.5" ></text>
</g>
<g >
<title>nn_xmsg_add_timestamp (6 samples, 0.31%)</title><rect x="908.2" y="917" width="3.7" height="15.0" fill="rgb(215,228,48)" rx="2" ry="2" />
<text  x="911.16" y="927.5" ></text>
</g>
<g >
<title>[libpthread-2.31.so] (1 samples, 0.05%)</title><rect x="103.5" y="1237" width="0.7" height="15.0" fill="rgb(226,70,10)" rx="2" ry="2" />
<text  x="106.53" y="1247.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;byte, std::default_delete&lt;byte []&gt; &gt;::_M_deleter (7 samples, 0.37%)</title><rect x="900.7" y="805" width="4.4" height="15.0" fill="rgb(248,143,35)" rx="2" ry="2" />
<text  x="903.73" y="815.5" ></text>
</g>
<g >
<title>std::__detail::_Hash_code_base&lt;rmw_event_type_t, std::pair&lt;rmw_event_type_t const, unsigned int&gt;, std::__detail::_Select1st, std::hash&lt;rmw_event_type_t&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false&gt;::_M_h1 (1 samples, 0.05%)</title><rect x="400.9" y="1125" width="0.6" height="15.0" fill="rgb(223,203,2)" rx="2" ry="2" />
<text  x="403.86" y="1135.5" ></text>
</g>
<g >
<title>ddsrt_time_elapsed (1 samples, 0.05%)</title><rect x="22.4" y="1173" width="0.6" height="15.0" fill="rgb(242,33,22)" rx="2" ry="2" />
<text  x="25.39" y="1183.5" ></text>
</g>
<g >
<title>ddsrt_hh_lookup (1 samples, 0.05%)</title><rect x="1108.2" y="1269" width="0.7" height="15.0" fill="rgb(251,30,15)" rx="2" ry="2" />
<text  x="1111.24" y="1279.5" ></text>
</g>
<g >
<title>_raw_spin_lock_irqsave (1 samples, 0.05%)</title><rect x="1186.3" y="1109" width="0.6" height="15.0" fill="rgb(238,90,30)" rx="2" ry="2" />
<text  x="1189.28" y="1119.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_base&lt;rmw_event_type_t, std::pair&lt;rmw_event_type_t const, unsigned int&gt;, std::__detail::_Select1st, std::equal_to&lt;rmw_event_type_t&gt;, std::hash&lt;rmw_event_type_t&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_equals (13 samples, 0.68%)</title><rect x="428.7" y="1141" width="8.1" height="15.0" fill="rgb(228,58,50)" rx="2" ry="2" />
<text  x="431.73" y="1151.5" ></text>
</g>
<g >
<title>os_startRoutineWrapper (26 samples, 1.36%)</title><rect x="21.1" y="1237" width="16.2" height="15.0" fill="rgb(250,153,36)" rx="2" ry="2" />
<text  x="24.15" y="1247.5" ></text>
</g>
<g >
<title>dequeue_entity (2 samples, 0.10%)</title><rect x="1111.3" y="1109" width="1.3" height="15.0" fill="rgb(232,222,52)" rx="2" ry="2" />
<text  x="1114.33" y="1119.5" ></text>
</g>
<g >
<title>rmw_cyclonedds_cpp::CDRWriter::serialize_top_level (106 samples, 5.56%)</title><rect x="762.6" y="885" width="65.7" height="15.0" fill="rgb(224,218,44)" rx="2" ry="2" />
<text  x="765.60" y="895.5" >rmw_cyc..</text>
</g>
<g >
<title>ip_route_output_key_hash (1 samples, 0.05%)</title><rect x="657.3" y="661" width="0.6" height="15.0" fill="rgb(254,164,15)" rx="2" ry="2" />
<text  x="660.30" y="671.5" ></text>
</g>
<g >
<title>std::__detail::_Hash_code_base&lt;rmw_cyclonedds_cpp::CDRWriter::CacheKey, std::pair&lt;rmw_cyclonedds_cpp::CDRWriter::CacheKey const, bool&gt;, std::__detail::_Select1st, rmw_cyclonedds_cpp::CDRWriter::CacheKey::Hash, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, true&gt;::_M_bucket_index (1 samples, 0.05%)</title><rect x="811.5" y="709" width="0.7" height="15.0" fill="rgb(209,64,36)" rx="2" ry="2" />
<text  x="814.53" y="719.5" ></text>
</g>
<g >
<title>ddsrt_mutex_lock (7 samples, 0.37%)</title><rect x="1168.9" y="1189" width="4.4" height="15.0" fill="rgb(226,199,46)" rx="2" ry="2" />
<text  x="1171.94" y="1199.5" ></text>
</g>
<g >
<title>__cxxabiv1::__class_type_info::__do_dyncast (2 samples, 0.10%)</title><rect x="773.7" y="837" width="1.3" height="15.0" fill="rgb(250,178,10)" rx="2" ry="2" />
<text  x="776.75" y="847.5" ></text>
</g>
<g >
<title>rmw_cyclonedds_cpp::PrimitiveValueType::sizeof_type (3 samples, 0.16%)</title><rect x="805.3" y="789" width="1.9" height="15.0" fill="rgb(215,26,7)" rx="2" ry="2" />
<text  x="808.34" y="799.5" ></text>
</g>
<g >
<title>rclcpp::memory_strategies::allocator_memory_strategy::AllocatorMemoryStrategy&lt;std::allocator&lt;void&gt; &gt;::number_of_ready_events (2 samples, 0.10%)</title><rect x="115.9" y="1253" width="1.3" height="15.0" fill="rgb(252,219,53)" rx="2" ry="2" />
<text  x="118.92" y="1263.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::resize (27 samples, 1.42%)</title><rect x="945.3" y="1045" width="16.8" height="15.0" fill="rgb(223,201,13)" rx="2" ry="2" />
<text  x="948.33" y="1055.5" ></text>
</g>
<g >
<title>__call_rcu (1 samples, 0.05%)</title><rect x="716.1" y="213" width="0.7" height="15.0" fill="rgb(234,102,3)" rx="2" ry="2" />
<text  x="719.14" y="223.5" ></text>
</g>
<g >
<title>__libc_sendmsg (1 samples, 0.05%)</title><rect x="1180.1" y="1061" width="0.6" height="15.0" fill="rgb(215,178,42)" rx="2" ry="2" />
<text  x="1183.09" y="1071.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_base&lt;rmw_cyclonedds_cpp::CDRWriter::CacheKey, std::pair&lt;rmw_cyclonedds_cpp::CDRWriter::CacheKey const, bool&gt;, std::__detail::_Select1st, std::equal_to&lt;rmw_cyclonedds_cpp::CDRWriter::CacheKey&gt;, rmw_cyclonedds_cpp::CDRWriter::CacheKey::Hash, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_equals (3 samples, 0.16%)</title><rect x="788.0" y="741" width="1.9" height="15.0" fill="rgb(234,98,54)" rx="2" ry="2" />
<text  x="790.99" y="751.5" ></text>
</g>
<g >
<title>std::vector&lt;long, std::allocator&lt;long&gt; &gt;::_M_default_append (22 samples, 1.15%)</title><rect x="485.7" y="1189" width="13.6" height="15.0" fill="rgb(236,61,22)" rx="2" ry="2" />
<text  x="488.72" y="1199.5" ></text>
</g>
<g >
<title>__GI___clock_gettime (1 samples, 0.05%)</title><rect x="1174.5" y="1173" width="0.6" height="15.0" fill="rgb(205,72,36)" rx="2" ry="2" />
<text  x="1177.51" y="1183.5" ></text>
</g>
<g >
<title>__wake_up_common_lock (6 samples, 0.31%)</title><rect x="1124.3" y="677" width="3.8" height="15.0" fill="rgb(232,212,4)" rx="2" ry="2" />
<text  x="1127.34" y="687.5" ></text>
</g>
<g >
<title>std::vector&lt;CddsSubscription*, std::allocator&lt;CddsSubscription*&gt; &gt;::_M_data_ptr&lt;CddsSubscription*&gt; (2 samples, 0.10%)</title><rect x="449.2" y="1173" width="1.2" height="15.0" fill="rgb(239,164,39)" rx="2" ry="2" />
<text  x="452.17" y="1183.5" ></text>
</g>
<g >
<title>____sys_sendmsg (208 samples, 10.92%)</title><rect x="610.8" y="725" width="128.9" height="15.0" fill="rgb(237,37,46)" rx="2" ry="2" />
<text  x="613.84" y="735.5" >____sys_sendmsg</text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (2 samples, 0.10%)</title><rect x="828.3" y="837" width="1.2" height="15.0" fill="rgb(233,165,42)" rx="2" ry="2" />
<text  x="831.26" y="847.5" ></text>
</g>
<g >
<title>std::make_unique&lt;serdata_rmw, sertype_rmw const*&amp;, ddsi_serdata_kind&amp;&gt; (19 samples, 1.00%)</title><rect x="864.8" y="917" width="11.8" height="15.0" fill="rgb(234,226,43)" rx="2" ry="2" />
<text  x="867.80" y="927.5" ></text>
</g>
<g >
<title>dds_tk_equals_void (2 samples, 0.10%)</title><rect x="589.8" y="901" width="1.2" height="15.0" fill="rgb(210,80,30)" rx="2" ry="2" />
<text  x="592.78" y="911.5" ></text>
</g>
<g >
<title>std::__detail::_Hash_node_value_base&lt;std::pair&lt;rmw_cyclonedds_cpp::CDRWriter::CacheKey const, bool&gt; &gt;::_M_v (1 samples, 0.05%)</title><rect x="788.0" y="709" width="0.6" height="15.0" fill="rgb(225,178,47)" rx="2" ry="2" />
<text  x="790.99" y="719.5" ></text>
</g>
<g >
<title>std::__remove_if&lt;__gnu_cxx::__normal_iterator&lt;std::shared_ptr&lt;rcl_client_t const&gt;*, std::vector&lt;std::shared_ptr&lt;rcl_client_t const&gt;, std::allocator&lt;std::shared_ptr&lt;rcl_client_t const&gt; &gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_equals_val&lt;decltype (1 samples, 0.05%)</title><rect x="1081.6" y="1125" width="0.6" height="15.0" fill="rgb(224,125,51)" rx="2" ry="2" />
<text  x="1084.60" y="1135.5" ></text>
</g>
<g >
<title>[librclcpp.so] (4 samples, 0.21%)</title><rect x="996.7" y="1141" width="2.5" height="15.0" fill="rgb(221,175,22)" rx="2" ry="2" />
<text  x="999.74" y="1151.5" ></text>
</g>
<g >
<title>writer_must_have_hb_scheduled (2 samples, 0.10%)</title><rect x="1181.3" y="1189" width="1.3" height="15.0" fill="rgb(216,121,4)" rx="2" ry="2" />
<text  x="1184.33" y="1199.5" ></text>
</g>
<g >
<title>serdata_pserop_from_ser (1 samples, 0.05%)</title><rect x="11.2" y="1173" width="0.7" height="15.0" fill="rgb(207,207,0)" rx="2" ry="2" />
<text  x="14.24" y="1183.5" ></text>
</g>
<g >
<title>ddsrt_cond_broadcast (1 samples, 0.05%)</title><rect x="42.2" y="1109" width="0.6" height="15.0" fill="rgb(226,199,17)" rx="2" ry="2" />
<text  x="45.21" y="1119.5" ></text>
</g>
<g >
<title>dds_time (1 samples, 0.05%)</title><rect x="1139.2" y="1173" width="0.6" height="15.0" fill="rgb(229,215,11)" rx="2" ry="2" />
<text  x="1142.21" y="1183.5" ></text>
</g>
<g >
<title>__pthread_cond_broadcast (1 samples, 0.05%)</title><rect x="42.2" y="1093" width="0.6" height="15.0" fill="rgb(254,123,31)" rx="2" ry="2" />
<text  x="45.21" y="1103.5" ></text>
</g>
<g >
<title>get_futex_key (1 samples, 0.05%)</title><rect x="1165.8" y="1029" width="0.7" height="15.0" fill="rgb(223,35,4)" rx="2" ry="2" />
<text  x="1168.84" y="1039.5" ></text>
</g>
<g >
<title>__GI___clock_gettime (1 samples, 0.05%)</title><rect x="22.4" y="1157" width="0.6" height="15.0" fill="rgb(230,45,23)" rx="2" ry="2" />
<text  x="25.39" y="1167.5" ></text>
</g>
<g >
<title>handle_mm_fault (1 samples, 0.05%)</title><rect x="42.8" y="1109" width="0.6" height="15.0" fill="rgb(241,10,41)" rx="2" ry="2" />
<text  x="45.83" y="1119.5" ></text>
</g>
<g >
<title>writer_hbcontrol_must_send (1 samples, 0.05%)</title><rect x="1180.7" y="1189" width="0.6" height="15.0" fill="rgb(245,154,28)" rx="2" ry="2" />
<text  x="1183.71" y="1199.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (81 samples, 4.25%)</title><rect x="672.2" y="501" width="50.1" height="15.0" fill="rgb(211,85,43)" rx="2" ry="2" />
<text  x="675.16" y="511.5" >__sof..</text>
</g>
<g >
<title>std::__detail::_Select1st::operator (8 samples, 0.42%)</title><rect x="417.6" y="1109" width="4.9" height="15.0" fill="rgb(216,13,9)" rx="2" ry="2" />
<text  x="420.58" y="1119.5" ></text>
</g>
<g >
<title>xevent_thread (74 samples, 3.88%)</title><rect x="1136.7" y="1205" width="45.9" height="15.0" fill="rgb(210,213,30)" rx="2" ry="2" />
<text  x="1139.73" y="1215.5" >xeve..</text>
</g>
<g >
<title>nn_xpack_send1v (245 samples, 12.86%)</title><rect x="599.1" y="885" width="151.7" height="15.0" fill="rgb(219,161,39)" rx="2" ry="2" />
<text  x="602.07" y="895.5" >nn_xpack_send1v</text>
</g>
<g >
<title>do_syscall_64 (33 samples, 1.73%)</title><rect x="1108.9" y="1253" width="20.4" height="15.0" fill="rgb(228,38,17)" rx="2" ry="2" />
<text  x="1111.86" y="1263.5" ></text>
</g>
<g >
<title>ctx_sched_in (3 samples, 0.16%)</title><rect x="1151.6" y="949" width="1.9" height="15.0" fill="rgb(233,55,4)" rx="2" ry="2" />
<text  x="1154.60" y="959.5" ></text>
</g>
<g >
<title>finish_task_switch (3 samples, 0.16%)</title><rect x="1184.4" y="1141" width="1.9" height="15.0" fill="rgb(233,1,14)" rx="2" ry="2" />
<text  x="1187.43" y="1151.5" ></text>
</g>
<g >
<title>std::get&lt;1ul, byte*, std::default_delete&lt;byte []&gt; &gt; (5 samples, 0.26%)</title><rect x="902.0" y="789" width="3.1" height="15.0" fill="rgb(227,33,46)" rx="2" ry="2" />
<text  x="904.97" y="799.5" ></text>
</g>
<g >
<title>ip_local_out (1 samples, 0.05%)</title><rect x="658.5" y="645" width="0.7" height="15.0" fill="rgb(205,146,15)" rx="2" ry="2" />
<text  x="661.54" y="655.5" ></text>
</g>
<g >
<title>perf_event_update_userpage (1 samples, 0.05%)</title><rect x="1114.4" y="997" width="0.6" height="15.0" fill="rgb(249,104,22)" rx="2" ry="2" />
<text  x="1117.43" y="1007.5" ></text>
</g>
<g >
<title>addrset_forall_count (1 samples, 0.05%)</title><rect x="1180.1" y="1141" width="0.6" height="15.0" fill="rgb(233,201,44)" rx="2" ry="2" />
<text  x="1183.09" y="1151.5" ></text>
</g>
<g >
<title>addrset_forall_count (250 samples, 13.12%)</title><rect x="596.6" y="917" width="154.8" height="15.0" fill="rgb(215,157,0)" rx="2" ry="2" />
<text  x="599.59" y="927.5" >addrset_forall_count</text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::_S_do_relocate (2 samples, 0.10%)</title><rect x="956.5" y="997" width="1.2" height="15.0" fill="rgb(232,174,0)" rx="2" ry="2" />
<text  x="959.48" y="1007.5" ></text>
</g>
<g >
<title>___sys_sendmsg (2 samples, 0.10%)</title><rect x="1188.8" y="1205" width="1.2" height="15.0" fill="rgb(221,59,5)" rx="2" ry="2" />
<text  x="1191.76" y="1215.5" ></text>
</g>
<g >
<title>__pthread_mutex_unlock_usercnt (1 samples, 0.05%)</title><rect x="1096.5" y="1109" width="0.6" height="15.0" fill="rgb(208,145,50)" rx="2" ry="2" />
<text  x="1099.47" y="1119.5" ></text>
</g>
<g >
<title>ddsrt_mutex_lock (3 samples, 0.16%)</title><rect x="216.3" y="1173" width="1.8" height="15.0" fill="rgb(252,93,23)" rx="2" ry="2" />
<text  x="219.27" y="1183.5" ></text>
</g>
<g >
<title>dds_handle_pin (1 samples, 0.05%)</title><rect x="201.4" y="1157" width="0.6" height="15.0" fill="rgb(222,31,5)" rx="2" ry="2" />
<text  x="204.40" y="1167.5" ></text>
</g>
<g >
<title>serdata_rmw_from_sample (1 samples, 0.05%)</title><rect x="104.2" y="1253" width="0.6" height="15.0" fill="rgb(232,208,16)" rx="2" ry="2" />
<text  x="107.15" y="1263.5" ></text>
</g>
<g >
<title>rcutils_string_map_key_existsn (5 samples, 0.26%)</title><rect x="520.4" y="1205" width="3.1" height="15.0" fill="rgb(227,23,18)" rx="2" ry="2" />
<text  x="523.40" y="1215.5" ></text>
</g>
<g >
<title>copy_msghdr_from_user (1 samples, 0.05%)</title><rect x="1128.7" y="1189" width="0.6" height="15.0" fill="rgb(216,142,43)" rx="2" ry="2" />
<text  x="1131.68" y="1199.5" ></text>
</g>
<g >
<title>rclcpp::memory_strategies::allocator_memory_strategy::AllocatorMemoryStrategy&lt;std::allocator&lt;void&gt; &gt;::get_next_timer (1 samples, 0.05%)</title><rect x="509.3" y="1253" width="0.6" height="15.0" fill="rgb(215,217,10)" rx="2" ry="2" />
<text  x="512.25" y="1263.5" ></text>
</g>
<g >
<title>handle_hash (1 samples, 0.05%)</title><rect x="391.6" y="1109" width="0.6" height="15.0" fill="rgb(236,148,18)" rx="2" ry="2" />
<text  x="394.56" y="1119.5" ></text>
</g>
<g >
<title>rmw_cyclonedds_cpp::PrimitiveValueType::sizeof_type (2 samples, 0.10%)</title><rect x="851.2" y="773" width="1.2" height="15.0" fill="rgb(222,212,18)" rx="2" ry="2" />
<text  x="854.18" y="783.5" ></text>
</g>
<g >
<title>ctx_sched_in (3 samples, 0.16%)</title><rect x="1184.4" y="1093" width="1.9" height="15.0" fill="rgb(221,197,0)" rx="2" ry="2" />
<text  x="1187.43" y="1103.5" ></text>
</g>
<g >
<title>nn_xmsg_submsg_setnext (1 samples, 0.05%)</title><rect x="937.9" y="869" width="0.6" height="15.0" fill="rgb(210,80,14)" rx="2" ry="2" />
<text  x="940.90" y="879.5" ></text>
</g>
<g >
<title>ip_route_output_flow (34 samples, 1.78%)</title><rect x="636.2" y="661" width="21.1" height="15.0" fill="rgb(252,55,1)" rx="2" ry="2" />
<text  x="639.24" y="671.5" ></text>
</g>
<g >
<title>rcutils_steady_time_now (2 samples, 0.10%)</title><rect x="154.9" y="1221" width="1.3" height="15.0" fill="rgb(238,82,45)" rx="2" ry="2" />
<text  x="157.94" y="1231.5" ></text>
</g>
<g >
<title>timerqueue_add (1 samples, 0.05%)</title><rect x="1109.5" y="1125" width="0.6" height="15.0" fill="rgb(221,94,41)" rx="2" ry="2" />
<text  x="1112.48" y="1135.5" ></text>
</g>
<g >
<title>ip_finish_output (117 samples, 6.14%)</title><rect x="661.0" y="597" width="72.5" height="15.0" fill="rgb(238,161,21)" rx="2" ry="2" />
<text  x="664.01" y="607.5" >ip_finis..</text>
</g>
<g >
<title>std::_Vector_base&lt;int, std::allocator&lt;int&gt; &gt;::_M_allocate (5 samples, 0.26%)</title><rect x="945.3" y="1013" width="3.1" height="15.0" fill="rgb(246,133,17)" rx="2" ry="2" />
<text  x="948.33" y="1023.5" ></text>
</g>
<g >
<title>__do_page_fault (1 samples, 0.05%)</title><rect x="42.8" y="1141" width="0.6" height="15.0" fill="rgb(221,37,21)" rx="2" ry="2" />
<text  x="45.83" y="1151.5" ></text>
</g>
<g >
<title>ddsrt_mutex_trylock (1 samples, 0.05%)</title><rect x="755.2" y="885" width="0.6" height="15.0" fill="rgb(254,123,37)" rx="2" ry="2" />
<text  x="758.17" y="895.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::_S_do_relocate (1 samples, 0.05%)</title><rect x="955.9" y="1013" width="0.6" height="15.0" fill="rgb(205,71,8)" rx="2" ry="2" />
<text  x="958.86" y="1023.5" ></text>
</g>
<g >
<title>[librmw_cyclonedds_cpp.so] (1 samples, 0.05%)</title><rect x="801.6" y="709" width="0.6" height="15.0" fill="rgb(241,119,14)" rx="2" ry="2" />
<text  x="804.62" y="719.5" ></text>
</g>
<g >
<title>__perf_event_task_sched_in (1 samples, 0.05%)</title><rect x="20.5" y="1125" width="0.6" height="15.0" fill="rgb(232,184,44)" rx="2" ry="2" />
<text  x="23.53" y="1135.5" ></text>
</g>
<g >
<title>__gnu_cxx::operator-&lt;long*, std::vector&lt;long, std::allocator&lt;long&gt; &gt; &gt; (2 samples, 0.10%)</title><rect x="467.1" y="1173" width="1.3" height="15.0" fill="rgb(231,52,51)" rx="2" ry="2" />
<text  x="470.13" y="1183.5" ></text>
</g>
<g >
<title>rmw_cyclonedds_cpp::SizeCursor::SizeCursor (1 samples, 0.05%)</title><rect x="119.0" y="1253" width="0.6" height="15.0" fill="rgb(243,151,34)" rx="2" ry="2" />
<text  x="122.02" y="1263.5" ></text>
</g>
<g >
<title>futex_wake (1 samples, 0.05%)</title><rect x="42.2" y="997" width="0.6" height="15.0" fill="rgb(254,173,6)" rx="2" ry="2" />
<text  x="45.21" y="1007.5" ></text>
</g>
<g >
<title>__sched_text_start (6 samples, 0.31%)</title><rect x="1183.8" y="1157" width="3.7" height="15.0" fill="rgb(244,162,16)" rx="2" ry="2" />
<text  x="1186.81" y="1167.5" ></text>
</g>
<g >
<title>ip_make_skb (33 samples, 1.73%)</title><rect x="615.8" y="661" width="20.4" height="15.0" fill="rgb(206,143,27)" rx="2" ry="2" />
<text  x="618.80" y="671.5" ></text>
</g>
<g >
<title>ddsrt_cond_waitfor (1 samples, 0.05%)</title><rect x="1139.2" y="1189" width="0.6" height="15.0" fill="rgb(244,171,37)" rx="2" ry="2" />
<text  x="1142.21" y="1199.5" ></text>
</g>
<g >
<title>std::_Any_data::_M_access&lt;unsigned long  (2 samples, 0.10%)</title><rect x="802.2" y="709" width="1.3" height="15.0" fill="rgb(240,131,11)" rx="2" ry="2" />
<text  x="805.24" y="719.5" ></text>
</g>
<g >
<title>rmw_cyclonedds_cpp::CDRWriter::put_rtps_header (12 samples, 0.63%)</title><rect x="763.8" y="869" width="7.5" height="15.0" fill="rgb(229,74,5)" rx="2" ry="2" />
<text  x="766.84" y="879.5" ></text>
</g>
<g >
<title>update_load_avg (2 samples, 0.10%)</title><rect x="255.3" y="949" width="1.2" height="15.0" fill="rgb(249,216,23)" rx="2" ry="2" />
<text  x="258.29" y="959.5" ></text>
</g>
<g >
<title>std::unordered_map&lt;rmw_cyclonedds_cpp::CDRWriter::CacheKey, bool, rmw_cyclonedds_cpp::CDRWriter::CacheKey::Hash, std::equal_to&lt;rmw_cyclonedds_cpp::CDRWriter::CacheKey&gt;, std::allocator&lt;std::pair&lt;rmw_cyclonedds_cpp::CDRWriter::CacheKey const, bool&gt; &gt; &gt;::at (2 samples, 0.10%)</title><rect x="811.5" y="757" width="1.3" height="15.0" fill="rgb(230,38,36)" rx="2" ry="2" />
<text  x="814.53" y="767.5" ></text>
</g>
<g >
<title>[libddsc.so.0.8.0] (1 samples, 0.05%)</title><rect x="215.6" y="1173" width="0.7" height="15.0" fill="rgb(249,140,41)" rx="2" ry="2" />
<text  x="218.65" y="1183.5" ></text>
</g>
<g >
<title>rmw_cyclonedds_cpp::CDRCursor::align (1 samples, 0.05%)</title><rect x="846.2" y="757" width="0.6" height="15.0" fill="rgb(219,184,46)" rx="2" ry="2" />
<text  x="849.22" y="767.5" ></text>
</g>
<g >
<title>sock_sendmsg (206 samples, 10.81%)</title><rect x="612.1" y="709" width="127.6" height="15.0" fill="rgb(233,193,31)" rx="2" ry="2" />
<text  x="615.08" y="719.5" >sock_sendmsg</text>
</g>
<g >
<title>__udp_enqueue_schedule_skb (41 samples, 2.15%)</title><rect x="688.3" y="261" width="25.4" height="15.0" fill="rgb(225,2,32)" rx="2" ry="2" />
<text  x="691.27" y="271.5" >_..</text>
</g>
<g >
<title>do_syscall_64 (22 samples, 1.15%)</title><rect x="23.6" y="1125" width="13.7" height="15.0" fill="rgb(218,9,26)" rx="2" ry="2" />
<text  x="26.63" y="1135.5" ></text>
</g>
<g >
<title>[librmw_cyclonedds_cpp.so] (2 samples, 0.10%)</title><rect x="495.6" y="1141" width="1.3" height="15.0" fill="rgb(252,227,39)" rx="2" ry="2" />
<text  x="498.63" y="1151.5" ></text>
</g>
<g >
<title>rclcpp::GenericTimer&lt;std::_Bind&lt;void  (693 samples, 36.38%)</title><rect x="552.0" y="1157" width="429.3" height="15.0" fill="rgb(218,13,38)" rx="2" ry="2" />
<text  x="554.99" y="1167.5" >rclcpp::GenericTimer&lt;std::_Bind&lt;void </text>
</g>
<g >
<title>rclcpp::Executor::add_callback_groups_from_nodes_associated_to_executor (20 samples, 1.05%)</title><rect x="1011.0" y="1141" width="12.4" height="15.0" fill="rgb(250,152,5)" rx="2" ry="2" />
<text  x="1013.99" y="1151.5" ></text>
</g>
<g >
<title>update_load_avg (6 samples, 0.31%)</title><rect x="698.2" y="53" width="3.7" height="15.0" fill="rgb(225,128,50)" rx="2" ry="2" />
<text  x="701.18" y="63.5" ></text>
</g>
<g >
<title>ttwu_do_activate (1 samples, 0.05%)</title><rect x="1180.1" y="341" width="0.6" height="15.0" fill="rgb(237,196,51)" rx="2" ry="2" />
<text  x="1183.09" y="351.5" ></text>
</g>
<g >
<title>__gthread_mutex_lock (7 samples, 0.37%)</title><rect x="453.5" y="1173" width="4.3" height="15.0" fill="rgb(236,214,4)" rx="2" ry="2" />
<text  x="456.51" y="1183.5" ></text>
</g>
<g >
<title>write_sample_eot.isra.0.constprop.0 (1 samples, 0.05%)</title><rect x="1180.1" y="1173" width="0.6" height="15.0" fill="rgb(239,159,15)" rx="2" ry="2" />
<text  x="1183.09" y="1183.5" ></text>
</g>
<g >
<title>switch_fpu_return (1 samples, 0.05%)</title><rect x="350.1" y="1093" width="0.6" height="15.0" fill="rgb(244,141,25)" rx="2" ry="2" />
<text  x="353.06" y="1103.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, MinimalPublisher*&gt; (4 samples, 0.21%)</title><rect x="974.4" y="1077" width="2.5" height="15.0" fill="rgb(242,88,32)" rx="2" ry="2" />
<text  x="977.44" y="1087.5" ></text>
</g>
<g >
<title>udp_unicast_rcv_skb.isra.0 (1 samples, 0.05%)</title><rect x="1180.1" y="533" width="0.6" height="15.0" fill="rgb(226,185,24)" rx="2" ry="2" />
<text  x="1183.09" y="543.5" ></text>
</g>
<g >
<title>std::tuple&lt;byte*, std::default_delete&lt;byte []&gt; &gt;::tuple&lt;byte*, std::default_delete&lt;byte []&gt;, true&gt; (2 samples, 0.10%)</title><rect x="871.0" y="853" width="1.2" height="15.0" fill="rgb(235,100,3)" rx="2" ry="2" />
<text  x="874.00" y="863.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;int, std::allocator&lt;int&gt; &gt;::_M_deallocate (3 samples, 0.16%)</title><rect x="948.4" y="1013" width="1.9" height="15.0" fill="rgb(243,154,3)" rx="2" ry="2" />
<text  x="951.43" y="1023.5" ></text>
</g>
<g >
<title>[libddsc.so.0.8.0] (1 samples, 0.05%)</title><rect x="1168.3" y="1173" width="0.6" height="15.0" fill="rgb(228,203,14)" rx="2" ry="2" />
<text  x="1171.32" y="1183.5" ></text>
</g>
<g >
<title>update_rq_clock (1 samples, 0.05%)</title><rect x="342.6" y="949" width="0.6" height="15.0" fill="rgb(211,143,32)" rx="2" ry="2" />
<text  x="345.63" y="959.5" ></text>
</g>
<g >
<title>std_msgs::msg::rosidl_typesupport_introspection_cpp::get_const_function__Int32MultiArray__data (2 samples, 0.10%)</title><rect x="820.2" y="757" width="1.2" height="15.0" fill="rgb(220,195,49)" rx="2" ry="2" />
<text  x="823.20" y="767.5" ></text>
</g>
<g >
<title>rcl_timer_call (2 samples, 0.10%)</title><rect x="553.9" y="1141" width="1.2" height="15.0" fill="rgb(238,96,11)" rx="2" ry="2" />
<text  x="556.85" y="1151.5" ></text>
</g>
<g >
<title>addrset_forall_count (2 samples, 0.10%)</title><rect x="1177.0" y="1173" width="1.2" height="15.0" fill="rgb(252,36,41)" rx="2" ry="2" />
<text  x="1179.99" y="1183.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.05%)</title><rect x="679.6" y="405" width="0.6" height="15.0" fill="rgb(231,138,2)" rx="2" ry="2" />
<text  x="682.60" y="415.5" ></text>
</g>
<g >
<title>perf_event_sched_in (3 samples, 0.16%)</title><rect x="1151.6" y="965" width="1.9" height="15.0" fill="rgb(249,42,39)" rx="2" ry="2" />
<text  x="1154.60" y="975.5" ></text>
</g>
<g >
<title>sock_sendmsg (2 samples, 0.10%)</title><rect x="1177.0" y="965" width="1.2" height="15.0" fill="rgb(232,110,19)" rx="2" ry="2" />
<text  x="1179.99" y="975.5" ></text>
</g>
<g >
<title>__handle_mm_fault (1 samples, 0.05%)</title><rect x="42.8" y="1093" width="0.6" height="15.0" fill="rgb(231,226,11)" rx="2" ry="2" />
<text  x="45.83" y="1103.5" ></text>
</g>
<g >
<title>__x64_sys_futex (1 samples, 0.05%)</title><rect x="20.5" y="1237" width="0.6" height="15.0" fill="rgb(241,189,0)" rx="2" ry="2" />
<text  x="23.53" y="1247.5" ></text>
</g>
<g >
<title>deactivate_task (3 samples, 0.16%)</title><rect x="1111.3" y="1141" width="1.9" height="15.0" fill="rgb(206,46,2)" rx="2" ry="2" />
<text  x="1114.33" y="1151.5" ></text>
</g>
<g >
<title>sock_recvmsg (1 samples, 0.05%)</title><rect x="21.8" y="1013" width="0.6" height="15.0" fill="rgb(248,89,18)" rx="2" ry="2" />
<text  x="24.77" y="1023.5" ></text>
</g>
<g >
<title>dds_entity_lock (19 samples, 1.00%)</title><rect x="383.5" y="1173" width="11.8" height="15.0" fill="rgb(210,48,24)" rx="2" ry="2" />
<text  x="386.51" y="1183.5" ></text>
</g>
<g >
<title>_rcutils_fault_injection_maybe_fail (1 samples, 0.05%)</title><rect x="554.5" y="1109" width="0.6" height="15.0" fill="rgb(218,30,1)" rx="2" ry="2" />
<text  x="557.47" y="1119.5" ></text>
</g>
<g >
<title>__vdso_clock_gettime (1 samples, 0.05%)</title><rect x="169.2" y="1173" width="0.6" height="15.0" fill="rgb(251,130,35)" rx="2" ry="2" />
<text  x="172.19" y="1183.5" ></text>
</g>
<g >
<title>[libddsc.so.0.8.0] (1 samples, 0.05%)</title><rect x="905.7" y="869" width="0.6" height="15.0" fill="rgb(248,37,7)" rx="2" ry="2" />
<text  x="908.69" y="879.5" ></text>
</g>
<g >
<title>nn_xmsg_submsg_init (2 samples, 0.10%)</title><rect x="910.0" y="901" width="1.3" height="15.0" fill="rgb(220,222,51)" rx="2" ry="2" />
<text  x="913.02" y="911.5" ></text>
</g>
<g >
<title>nn_hton_guid_prefix (1 samples, 0.05%)</title><rect x="938.5" y="869" width="0.6" height="15.0" fill="rgb(218,157,49)" rx="2" ry="2" />
<text  x="941.51" y="879.5" ></text>
</g>
<g >
<title>rmw_wait (523 samples, 27.45%)</title><rect x="183.4" y="1221" width="324.0" height="15.0" fill="rgb(225,103,5)" rx="2" ry="2" />
<text  x="186.44" y="1231.5" >rmw_wait</text>
</g>
<g >
<title>__cgroup_bpf_run_filter_skb (1 samples, 0.05%)</title><rect x="1119.4" y="1061" width="0.6" height="15.0" fill="rgb(214,68,52)" rx="2" ry="2" />
<text  x="1122.39" y="1071.5" ></text>
</g>
<g >
<title>[librmw_cyclonedds_cpp.so] (1 samples, 0.05%)</title><rect x="904.4" y="741" width="0.7" height="15.0" fill="rgb(254,164,54)" rx="2" ry="2" />
<text  x="907.45" y="751.5" ></text>
</g>
<g >
<title>__udp4_lib_rcv (1 samples, 0.05%)</title><rect x="1180.1" y="549" width="0.6" height="15.0" fill="rgb(217,215,15)" rx="2" ry="2" />
<text  x="1183.09" y="559.5" ></text>
</g>
<g >
<title>ip_rcv_core.isra.0 (2 samples, 0.10%)</title><rect x="680.2" y="405" width="1.3" height="15.0" fill="rgb(215,185,15)" rx="2" ry="2" />
<text  x="683.22" y="415.5" ></text>
</g>
<g >
<title>std::function&lt;void const*  (8 samples, 0.42%)</title><rect x="816.5" y="789" width="4.9" height="15.0" fill="rgb(225,172,47)" rx="2" ry="2" />
<text  x="819.49" y="799.5" ></text>
</g>
<g >
<title>std::__detail::_Select1st::operator (1 samples, 0.05%)</title><rect x="838.8" y="709" width="0.6" height="15.0" fill="rgb(230,191,2)" rx="2" ry="2" />
<text  x="841.79" y="719.5" ></text>
</g>
<g >
<title>__wake_up_sync_key (1 samples, 0.05%)</title><rect x="1180.1" y="453" width="0.6" height="15.0" fill="rgb(228,128,50)" rx="2" ry="2" />
<text  x="1183.09" y="463.5" ></text>
</g>
<g >
<title>__memset_avx2_unaligned_erms (1 samples, 0.05%)</title><rect x="139.5" y="1253" width="0.6" height="15.0" fill="rgb(250,190,54)" rx="2" ry="2" />
<text  x="142.46" y="1263.5" ></text>
</g>
<g >
<title>smp_apic_timer_interrupt (1 samples, 0.05%)</title><rect x="1160.3" y="965" width="0.6" height="15.0" fill="rgb(243,76,47)" rx="2" ry="2" />
<text  x="1163.27" y="975.5" ></text>
</g>
<g >
<title>security_socket_recvmsg (1 samples, 0.05%)</title><rect x="21.8" y="997" width="0.6" height="15.0" fill="rgb(207,120,33)" rx="2" ry="2" />
<text  x="24.77" y="1007.5" ></text>
</g>
<g >
<title>__x64_sys_futex (7 samples, 0.37%)</title><rect x="11.9" y="1093" width="4.3" height="15.0" fill="rgb(249,31,31)" rx="2" ry="2" />
<text  x="14.86" y="1103.5" ></text>
</g>
<g >
<title>skb_release_data (1 samples, 0.05%)</title><rect x="41.6" y="933" width="0.6" height="15.0" fill="rgb(217,0,3)" rx="2" ry="2" />
<text  x="44.59" y="943.5" ></text>
</g>
<g >
<title>_int_free (2 samples, 0.10%)</title><rect x="98.0" y="1253" width="1.2" height="15.0" fill="rgb(234,55,3)" rx="2" ry="2" />
<text  x="100.96" y="1263.5" ></text>
</g>
<g >
<title>rclcpp::spin (3 samples, 0.16%)</title><rect x="143.2" y="1221" width="1.8" height="15.0" fill="rgb(249,39,14)" rx="2" ry="2" />
<text  x="146.18" y="1231.5" ></text>
</g>
<g >
<title>cpuacct_charge (2 samples, 0.10%)</title><rect x="251.0" y="949" width="1.2" height="15.0" fill="rgb(229,183,12)" rx="2" ry="2" />
<text  x="253.96" y="959.5" ></text>
</g>
<g >
<title>fib_table_lookup (1 samples, 0.05%)</title><rect x="1118.8" y="1077" width="0.6" height="15.0" fill="rgb(226,141,4)" rx="2" ry="2" />
<text  x="1121.77" y="1087.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;byte [], std::default_delete&lt;byte []&gt; &gt;::reset&lt;byte*, void&gt; (1 samples, 0.05%)</title><rect x="131.4" y="1253" width="0.6" height="15.0" fill="rgb(220,83,46)" rx="2" ry="2" />
<text  x="134.41" y="1263.5" ></text>
</g>
<g >
<title>require_reattach&lt;CddsClient&gt; (1 samples, 0.05%)</title><rect x="439.9" y="1205" width="0.6" height="15.0" fill="rgb(241,105,12)" rx="2" ry="2" />
<text  x="442.88" y="1215.5" ></text>
</g>
<g >
<title>dds_take_guardcondition (2 samples, 0.10%)</title><rect x="201.4" y="1205" width="1.2" height="15.0" fill="rgb(242,138,36)" rx="2" ry="2" />
<text  x="204.40" y="1215.5" ></text>
</g>
<g >
<title>std::__remove_if&lt;__gnu_cxx::__normal_iterator&lt;std::shared_ptr&lt;rclcpp::Waitable&gt;*, std::vector&lt;std::shared_ptr&lt;rclcpp::Waitable&gt;, std::allocator&lt;std::shared_ptr&lt;rclcpp::Waitable&gt; &gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_equals_val&lt;decltype (1 samples, 0.05%)</title><rect x="1082.8" y="1125" width="0.7" height="15.0" fill="rgb(209,93,39)" rx="2" ry="2" />
<text  x="1085.84" y="1135.5" ></text>
</g>
<g >
<title>std::__detail::_Mod_range_hashing::operator (1 samples, 0.05%)</title><rect x="808.4" y="661" width="0.7" height="15.0" fill="rgb(213,44,42)" rx="2" ry="2" />
<text  x="811.44" y="671.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;rmw_cyclonedds_cpp::CDRWriter::CacheKey, std::pair&lt;rmw_cyclonedds_cpp::CDRWriter::CacheKey const, bool&gt;, std::allocator&lt;std::pair&lt;rmw_cyclonedds_cpp::CDRWriter::CacheKey const, bool&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;rmw_cyclonedds_cpp::CDRWriter::CacheKey&gt;, rmw_cyclonedds_cpp::CDRWriter::CacheKey::Hash, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_bucket_index (1 samples, 0.05%)</title><rect x="780.6" y="805" width="0.6" height="15.0" fill="rgb(222,43,51)" rx="2" ry="2" />
<text  x="783.56" y="815.5" ></text>
</g>
<g >
<title>rmw_cyclonedds_cpp::CallbackSpanSequenceValueType::sequence_size (2 samples, 0.10%)</title><rect x="821.4" y="805" width="1.3" height="15.0" fill="rgb(208,99,53)" rx="2" ry="2" />
<text  x="824.44" y="815.5" ></text>
</g>
<g >
<title>dds_entity_lock (1 samples, 0.05%)</title><rect x="573.7" y="949" width="0.6" height="15.0" fill="rgb(235,224,25)" rx="2" ry="2" />
<text  x="576.67" y="959.5" ></text>
</g>
<g >
<title>default_wake_function (2 samples, 0.10%)</title><rect x="711.2" y="165" width="1.2" height="15.0" fill="rgb(219,172,26)" rx="2" ry="2" />
<text  x="714.19" y="175.5" ></text>
</g>
<g >
<title>std::__detail::_Mod_range_hashing::operator (1 samples, 0.05%)</title><rect x="837.5" y="709" width="0.7" height="15.0" fill="rgb(234,88,3)" rx="2" ry="2" />
<text  x="840.55" y="719.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_ebo_helper&lt;1, std::hash&lt;rmw_event_type_t&gt;, true&gt;::_S_cget (1 samples, 0.05%)</title><rect x="400.9" y="1109" width="0.6" height="15.0" fill="rgb(250,163,9)" rx="2" ry="2" />
<text  x="403.86" y="1119.5" ></text>
</g>
<g >
<title>dds_entity_pin (1 samples, 0.05%)</title><rect x="573.7" y="933" width="0.6" height="15.0" fill="rgb(211,13,52)" rx="2" ry="2" />
<text  x="576.67" y="943.5" ></text>
</g>
<g >
<title>__vdso_clock_gettime (1 samples, 0.05%)</title><rect x="576.8" y="917" width="0.6" height="15.0" fill="rgb(223,31,28)" rx="2" ry="2" />
<text  x="579.77" y="927.5" ></text>
</g>
<g >
<title>ddsrt_chh_lookup (1 samples, 0.05%)</title><rect x="752.1" y="885" width="0.6" height="15.0" fill="rgb(223,176,53)" rx="2" ry="2" />
<text  x="755.07" y="895.5" ></text>
</g>
<g >
<title>__x64_sys_futex (1 samples, 0.05%)</title><rect x="42.2" y="1029" width="0.6" height="15.0" fill="rgb(229,199,6)" rx="2" ry="2" />
<text  x="45.21" y="1039.5" ></text>
</g>
<g >
<title>ip_send_skb (2 samples, 0.10%)</title><rect x="1177.0" y="901" width="1.2" height="15.0" fill="rgb(214,158,5)" rx="2" ry="2" />
<text  x="1179.99" y="911.5" ></text>
</g>
<g >
<title>rclcpp::GenericTimer&lt;std::_Bind&lt;void  (3 samples, 0.16%)</title><rect x="143.2" y="1173" width="1.8" height="15.0" fill="rgb(253,57,9)" rx="2" ry="2" />
<text  x="146.18" y="1183.5" ></text>
</g>
<g >
<title>[librmw_cyclonedds_cpp.so] (1 samples, 0.05%)</title><rect x="799.1" y="741" width="0.7" height="15.0" fill="rgb(207,64,4)" rx="2" ry="2" />
<text  x="802.14" y="751.5" ></text>
</g>
<g >
<title>std::__detail::_Hash_node_value_base&lt;std::pair&lt;rmw_event_type_t const, unsigned int&gt; &gt;::_M_valptr (1 samples, 0.05%)</title><rect x="401.5" y="1125" width="0.6" height="15.0" fill="rgb(214,32,49)" rx="2" ry="2" />
<text  x="404.48" y="1135.5" ></text>
</g>
<g >
<title>__strcmp_avx2 (3 samples, 0.16%)</title><rect x="842.5" y="757" width="1.9" height="15.0" fill="rgb(212,130,30)" rx="2" ry="2" />
<text  x="845.50" y="767.5" ></text>
</g>
<g >
<title>__ip_finish_output (2 samples, 0.10%)</title><rect x="1177.0" y="837" width="1.2" height="15.0" fill="rgb(228,43,20)" rx="2" ry="2" />
<text  x="1179.99" y="847.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;rmw_cyclonedds_cpp::StructValueType const, std::default_delete&lt;rmw_cyclonedds_cpp::StructValueType const&gt; &gt;::operator (4 samples, 0.21%)</title><rect x="825.8" y="869" width="2.5" height="15.0" fill="rgb(208,194,22)" rx="2" ry="2" />
<text  x="828.78" y="879.5" ></text>
</g>
<g >
<title>copy_user_enhanced_fast_string (2 samples, 0.10%)</title><rect x="740.3" y="709" width="1.2" height="15.0" fill="rgb(246,140,40)" rx="2" ry="2" />
<text  x="743.30" y="719.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;rmw_cyclonedds_cpp::CDRWriter::CacheKey, std::pair&lt;rmw_cyclonedds_cpp::CDRWriter::CacheKey const, bool&gt;, std::allocator&lt;std::pair&lt;rmw_cyclonedds_cpp::CDRWriter::CacheKey const, bool&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;rmw_cyclonedds_cpp::CDRWriter::CacheKey&gt;, rmw_cyclonedds_cpp::CDRWriter::CacheKey::Hash, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_bucket_index (1 samples, 0.05%)</title><rect x="811.5" y="725" width="0.7" height="15.0" fill="rgb(211,182,4)" rx="2" ry="2" />
<text  x="814.53" y="735.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;std_msgs::msg::MultiArrayDimension_&lt;std::allocator&lt;void&gt; &gt; &gt;::new_allocator (1 samples, 0.05%)</title><rect x="108.5" y="1253" width="0.6" height="15.0" fill="rgb(242,153,24)" rx="2" ry="2" />
<text  x="111.49" y="1263.5" ></text>
</g>
<g >
<title>rclcpp::Executor::get_next_executable (1 samples, 0.05%)</title><rect x="112.8" y="1253" width="0.6" height="15.0" fill="rgb(239,10,24)" rx="2" ry="2" />
<text  x="115.82" y="1263.5" ></text>
</g>
<g >
<title>std::_Destroy&lt;int*&gt; (1 samples, 0.05%)</title><rect x="968.2" y="997" width="0.7" height="15.0" fill="rgb(251,37,0)" rx="2" ry="2" />
<text  x="971.25" y="1007.5" ></text>
</g>
<g >
<title>__dev_queue_xmit (15 samples, 0.79%)</title><rect x="723.0" y="533" width="9.2" height="15.0" fill="rgb(228,144,52)" rx="2" ry="2" />
<text  x="725.96" y="543.5" ></text>
</g>
<g >
<title>do_syscall_64 (189 samples, 9.92%)</title><rect x="233.6" y="1109" width="117.1" height="15.0" fill="rgb(225,118,37)" rx="2" ry="2" />
<text  x="236.61" y="1119.5" >do_syscall_64</text>
</g>
<g >
<title>__GI___pthread_mutex_trylock (1 samples, 0.05%)</title><rect x="913.7" y="869" width="0.7" height="15.0" fill="rgb(208,14,29)" rx="2" ry="2" />
<text  x="916.74" y="879.5" ></text>
</g>
<g >
<title>futex_wait (6 samples, 0.31%)</title><rect x="1169.6" y="1077" width="3.7" height="15.0" fill="rgb(238,32,0)" rx="2" ry="2" />
<text  x="1172.56" y="1087.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;void, void  (675 samples, 35.43%)</title><rect x="556.3" y="1077" width="418.1" height="15.0" fill="rgb(248,221,18)" rx="2" ry="2" />
<text  x="559.33" y="1087.5" >std::__invoke_impl&lt;void, void </text>
</g>
<g >
<title>activate_task (1 samples, 0.05%)</title><rect x="42.2" y="933" width="0.6" height="15.0" fill="rgb(251,17,31)" rx="2" ry="2" />
<text  x="45.21" y="943.5" ></text>
</g>
<g >
<title>__local_bh_enable_ip (1 samples, 0.05%)</title><rect x="661.6" y="565" width="0.7" height="15.0" fill="rgb(248,51,13)" rx="2" ry="2" />
<text  x="664.63" y="575.5" ></text>
</g>
<g >
<title>ip_protocol_deliver_rcu (60 samples, 3.15%)</title><rect x="681.5" y="357" width="37.1" height="15.0" fill="rgb(227,22,10)" rx="2" ry="2" />
<text  x="684.45" y="367.5" >ip_..</text>
</g>
<g >
<title>MinimalPublisher::timer_callback (3 samples, 0.16%)</title><rect x="143.2" y="1077" width="1.8" height="15.0" fill="rgb(209,210,48)" rx="2" ry="2" />
<text  x="146.18" y="1087.5" ></text>
</g>
<g >
<title>[librmw_cyclonedds_cpp.so] (8 samples, 0.42%)</title><rect x="404.6" y="1141" width="4.9" height="15.0" fill="rgb(248,181,28)" rx="2" ry="2" />
<text  x="407.57" y="1151.5" ></text>
</g>
<g >
<title>std::_Head_base&lt;1ul, std::default_delete&lt;serdata_rmw&gt;, true&gt;::_Head_base (1 samples, 0.05%)</title><rect x="876.0" y="821" width="0.6" height="15.0" fill="rgb(217,199,37)" rx="2" ry="2" />
<text  x="878.95" y="831.5" ></text>
</g>
<g >
<title>__x64_sys_sendmsg (3 samples, 0.16%)</title><rect x="605.9" y="789" width="1.8" height="15.0" fill="rgb(215,201,53)" rx="2" ry="2" />
<text  x="608.88" y="799.5" ></text>
</g>
<g >
<title>move_addr_to_kernel.part.0 (1 samples, 0.05%)</title><rect x="742.8" y="709" width="0.6" height="15.0" fill="rgb(205,139,45)" rx="2" ry="2" />
<text  x="745.78" y="719.5" ></text>
</g>
<g >
<title>__x64_sys_sendmsg (2 samples, 0.10%)</title><rect x="1177.0" y="1029" width="1.2" height="15.0" fill="rgb(238,216,35)" rx="2" ry="2" />
<text  x="1179.99" y="1039.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_ebo_helper&lt;0, std::__detail::_Select1st, true&gt;::_S_cget (1 samples, 0.05%)</title><rect x="810.9" y="661" width="0.6" height="15.0" fill="rgb(254,142,35)" rx="2" ry="2" />
<text  x="813.91" y="671.5" ></text>
</g>
<g >
<title>__pthread_mutex_cond_lock (1 samples, 0.05%)</title><rect x="224.3" y="1141" width="0.6" height="15.0" fill="rgb(218,101,30)" rx="2" ry="2" />
<text  x="227.32" y="1151.5" ></text>
</g>
<g >
<title>std_msgs::msg::Int32MultiArray_&lt;std::allocator&lt;void&gt; &gt;::Int32MultiArray_ (8 samples, 0.42%)</title><rect x="962.1" y="1045" width="4.9" height="15.0" fill="rgb(223,125,35)" rx="2" ry="2" />
<text  x="965.05" y="1055.5" ></text>
</g>
<g >
<title>futex_wait (6 samples, 0.31%)</title><rect x="16.8" y="1061" width="3.7" height="15.0" fill="rgb(244,95,34)" rx="2" ry="2" />
<text  x="19.81" y="1071.5" ></text>
</g>
<g >
<title>dds_entity_lock (3 samples, 0.16%)</title><rect x="542.1" y="1093" width="1.8" height="15.0" fill="rgb(208,32,39)" rx="2" ry="2" />
<text  x="545.08" y="1103.5" ></text>
</g>
<g >
<title>std::sort&lt;__gnu_cxx::__normal_iterator&lt;long*, std::vector&lt;long, std::allocator&lt;long&gt; &gt; &gt; &gt; (13 samples, 0.68%)</title><rect x="460.3" y="1205" width="8.1" height="15.0" fill="rgb(207,26,36)" rx="2" ry="2" />
<text  x="463.32" y="1215.5" ></text>
</g>
<g >
<title>[librmw_cyclonedds_cpp.so] (7 samples, 0.37%)</title><rect x="469.6" y="1189" width="4.3" height="15.0" fill="rgb(206,43,26)" rx="2" ry="2" />
<text  x="472.61" y="1199.5" ></text>
</g>
<g >
<title>rclcpp::Executor::execute_any_executable (3 samples, 0.16%)</title><rect x="143.2" y="1189" width="1.8" height="15.0" fill="rgb(234,27,38)" rx="2" ry="2" />
<text  x="146.18" y="1199.5" ></text>
</g>
<g >
<title>std::__detail::_Mod_range_hashing::operator (1 samples, 0.05%)</title><rect x="849.3" y="661" width="0.6" height="15.0" fill="rgb(232,92,48)" rx="2" ry="2" />
<text  x="852.32" y="671.5" ></text>
</g>
<g >
<title>put_prev_task_fair (2 samples, 0.10%)</title><rect x="1162.7" y="981" width="1.3" height="15.0" fill="rgb(216,94,54)" rx="2" ry="2" />
<text  x="1165.75" y="991.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, MinimalPublisher*&gt; (4 samples, 0.21%)</title><rect x="974.4" y="1093" width="2.5" height="15.0" fill="rgb(243,221,3)" rx="2" ry="2" />
<text  x="977.44" y="1103.5" ></text>
</g>
<g >
<title>finish_task_switch (7 samples, 0.37%)</title><rect x="11.9" y="997" width="4.3" height="15.0" fill="rgb(217,59,24)" rx="2" ry="2" />
<text  x="14.86" y="1007.5" ></text>
</g>
<g >
<title>rmw_cyclonedds_cpp::CDRWriter::lookup_trivially_serialized (6 samples, 0.31%)</title><rect x="794.2" y="789" width="3.7" height="15.0" fill="rgb(225,152,24)" rx="2" ry="2" />
<text  x="797.19" y="799.5" ></text>
</g>
<g >
<title>std::__detail::_Hash_node_value_base&lt;std::pair&lt;rmw_event_type_t const, unsigned int&gt; &gt;::_M_valptr (1 samples, 0.05%)</title><rect x="121.5" y="1253" width="0.6" height="15.0" fill="rgb(214,163,16)" rx="2" ry="2" />
<text  x="124.50" y="1263.5" ></text>
</g>
<g >
<title>rcutils_logging_logger_is_enabled_for (23 samples, 1.21%)</title><rect x="509.9" y="1253" width="14.2" height="15.0" fill="rgb(250,19,7)" rx="2" ry="2" />
<text  x="512.87" y="1263.5" ></text>
</g>
<g >
<title>x86_pmu_enable (4 samples, 0.21%)</title><rect x="16.8" y="949" width="2.5" height="15.0" fill="rgb(223,147,25)" rx="2" ry="2" />
<text  x="19.81" y="959.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, rmw_cyclonedds_cpp::StructValueType const*, std::default_delete&lt;rmw_cyclonedds_cpp::StructValueType const&gt; &gt; (3 samples, 0.16%)</title><rect x="826.4" y="821" width="1.9" height="15.0" fill="rgb(213,46,14)" rx="2" ry="2" />
<text  x="829.40" y="831.5" ></text>
</g>
<g >
<title>[libstdc++.so.6.0.28] (1 samples, 0.05%)</title><rect x="776.2" y="821" width="0.6" height="15.0" fill="rgb(214,106,54)" rx="2" ry="2" />
<text  x="779.23" y="831.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;serdata_rmw, std::default_delete&lt;serdata_rmw&gt; &gt;::__uniq_ptr_impl (4 samples, 0.21%)</title><rect x="874.1" y="885" width="2.5" height="15.0" fill="rgb(242,95,53)" rx="2" ry="2" />
<text  x="877.09" y="895.5" ></text>
</g>
<g >
<title>rmw_trigger_guard_condition (19 samples, 1.00%)</title><rect x="539.6" y="1125" width="11.8" height="15.0" fill="rgb(254,170,47)" rx="2" ry="2" />
<text  x="542.61" y="1135.5" ></text>
</g>
<g >
<title>std::__detail::_Hash_node_value_base&lt;std::pair&lt;rmw_event_type_t const, unsigned int&gt; &gt;::_M_v (1 samples, 0.05%)</title><rect x="415.7" y="1109" width="0.6" height="15.0" fill="rgb(207,2,50)" rx="2" ry="2" />
<text  x="418.72" y="1119.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;byte [], std::default_delete&lt;byte []&gt; &gt;::get_deleter (8 samples, 0.42%)</title><rect x="900.1" y="821" width="5.0" height="15.0" fill="rgb(247,23,48)" rx="2" ry="2" />
<text  x="903.11" y="831.5" ></text>
</g>
<g >
<title>____sys_sendmsg (2 samples, 0.10%)</title><rect x="1188.8" y="1189" width="1.2" height="15.0" fill="rgb(215,118,50)" rx="2" ry="2" />
<text  x="1191.76" y="1199.5" ></text>
</g>
<g >
<title>ip_local_deliver (2 samples, 0.10%)</title><rect x="1121.2" y="869" width="1.3" height="15.0" fill="rgb(221,55,17)" rx="2" ry="2" />
<text  x="1124.24" y="879.5" ></text>
</g>
<g >
<title>rb_next (1 samples, 0.05%)</title><rect x="1113.2" y="1077" width="0.6" height="15.0" fill="rgb(217,129,7)" rx="2" ry="2" />
<text  x="1116.19" y="1087.5" ></text>
</g>
<g >
<title>std::__detail::_Equal_helper&lt;rmw_event_type_t, std::pair&lt;rmw_event_type_t const, unsigned int&gt;, std::__detail::_Select1st, std::equal_to&lt;rmw_event_type_t&gt;, unsigned long, false&gt;::_S_equals (1 samples, 0.05%)</title><rect x="400.2" y="1093" width="0.7" height="15.0" fill="rgb(239,86,54)" rx="2" ry="2" />
<text  x="403.24" y="1103.5" ></text>
</g>
<g >
<title>std::forward&lt;std::pair&lt;rmw_event_type_t const, unsigned int&gt;&amp;&gt; (3 samples, 0.16%)</title><rect x="431.8" y="1093" width="1.9" height="15.0" fill="rgb(220,101,47)" rx="2" ry="2" />
<text  x="434.83" y="1103.5" ></text>
</g>
<g >
<title>std::_Bind&lt;void  (3 samples, 0.16%)</title><rect x="143.2" y="1125" width="1.8" height="15.0" fill="rgb(223,113,53)" rx="2" ry="2" />
<text  x="146.18" y="1135.5" ></text>
</g>
<g >
<title>__consume_stateless_skb (1 samples, 0.05%)</title><rect x="41.6" y="949" width="0.6" height="15.0" fill="rgb(234,165,32)" rx="2" ry="2" />
<text  x="44.59" y="959.5" ></text>
</g>
<g >
<title>start_thread (74 samples, 3.88%)</title><rect x="1136.7" y="1253" width="45.9" height="15.0" fill="rgb(227,21,30)" rx="2" ry="2" />
<text  x="1139.73" y="1263.5" >star..</text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::_S_max_size (1 samples, 0.05%)</title><rect x="955.2" y="981" width="0.7" height="15.0" fill="rgb(231,138,34)" rx="2" ry="2" />
<text  x="958.24" y="991.5" ></text>
</g>
<g >
<title>rclcpp::Publisher&lt;std_msgs::msg::Int32MultiArray_&lt;std::allocator&lt;void&gt; &gt;, std::allocator&lt;void&gt; &gt;::do_inter_process_publish (3 samples, 0.16%)</title><rect x="143.2" y="1045" width="1.8" height="15.0" fill="rgb(210,5,2)" rx="2" ry="2" />
<text  x="146.18" y="1055.5" ></text>
</g>
<g >
<title>__ieee80211_subif_start_xmit (1 samples, 0.05%)</title><rect x="1177.6" y="741" width="0.6" height="15.0" fill="rgb(250,69,26)" rx="2" ry="2" />
<text  x="1180.61" y="751.5" ></text>
</g>
<g >
<title>rcl_wait_set_is_valid (3 samples, 0.16%)</title><rect x="1038.2" y="1109" width="1.9" height="15.0" fill="rgb(211,85,23)" rx="2" ry="2" />
<text  x="1041.24" y="1119.5" ></text>
</g>
<g >
<title>serialize_into_serdata_rmw (170 samples, 8.92%)</title><rect x="759.5" y="917" width="105.3" height="15.0" fill="rgb(221,214,40)" rx="2" ry="2" />
<text  x="762.50" y="927.5" >serialize_in..</text>
</g>
<g >
<title>dequeue_task_fair (4 samples, 0.21%)</title><rect x="1147.9" y="981" width="2.5" height="15.0" fill="rgb(249,76,30)" rx="2" ry="2" />
<text  x="1150.88" y="991.5" ></text>
</g>
<g >
<title>rclcpp::Executor::get_next_executable (1 samples, 0.05%)</title><rect x="103.5" y="1253" width="0.7" height="15.0" fill="rgb(225,39,20)" rx="2" ry="2" />
<text  x="106.53" y="1263.5" ></text>
</g>
<g >
<title>main (935 samples, 49.08%)</title><rect x="528.5" y="1237" width="579.1" height="15.0" fill="rgb(248,124,21)" rx="2" ry="2" />
<text  x="531.46" y="1247.5" >main</text>
</g>
<g >
<title>rmw_publish (596 samples, 31.29%)</title><rect x="570.6" y="997" width="369.2" height="15.0" fill="rgb(245,105,44)" rx="2" ry="2" />
<text  x="573.58" y="1007.5" >rmw_publish</text>
</g>
<g >
<title>__x64_sys_futex (10 samples, 0.52%)</title><rect x="1182.6" y="1237" width="6.2" height="15.0" fill="rgb(211,15,7)" rx="2" ry="2" />
<text  x="1185.57" y="1247.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.05%)</title><rect x="1180.1" y="629" width="0.6" height="15.0" fill="rgb(231,38,17)" rx="2" ry="2" />
<text  x="1183.09" y="639.5" ></text>
</g>
<g >
<title>rmw_cyclonedds_cpp::CDRWriter::serialize (86 samples, 4.51%)</title><rect x="771.3" y="869" width="53.2" height="15.0" fill="rgb(221,160,53)" rx="2" ry="2" />
<text  x="774.27" y="879.5" >rmw_c..</text>
</g>
<g >
<title>std::__detail::_Hash_node_value_base&lt;std::pair&lt;rmw_cyclonedds_cpp::CDRWriter::CacheKey const, bool&gt; &gt;::_M_valptr (1 samples, 0.05%)</title><rect x="797.3" y="725" width="0.6" height="15.0" fill="rgb(210,30,46)" rx="2" ry="2" />
<text  x="800.29" y="735.5" ></text>
</g>
<g >
<title>[libddsc.so.0.8.0] (1 samples, 0.05%)</title><rect x="592.9" y="901" width="0.6" height="15.0" fill="rgb(238,28,20)" rx="2" ry="2" />
<text  x="595.88" y="911.5" ></text>
</g>
<g >
<title>futex_wait (33 samples, 1.73%)</title><rect x="1146.6" y="1061" width="20.5" height="15.0" fill="rgb(234,1,52)" rx="2" ry="2" />
<text  x="1149.64" y="1071.5" ></text>
</g>
<g >
<title>sock_def_readable (2 samples, 0.10%)</title><rect x="717.4" y="261" width="1.2" height="15.0" fill="rgb(232,215,5)" rx="2" ry="2" />
<text  x="720.38" y="271.5" ></text>
</g>
<g >
<title>_raw_spin_lock (1 samples, 0.05%)</title><rect x="1177.0" y="773" width="0.6" height="15.0" fill="rgb(206,114,3)" rx="2" ry="2" />
<text  x="1179.99" y="783.5" ></text>
</g>
<g >
<title>do_syscall_64 (228 samples, 11.97%)</title><rect x="607.7" y="789" width="141.3" height="15.0" fill="rgb(221,162,13)" rx="2" ry="2" />
<text  x="610.74" y="799.5" >do_syscall_64</text>
</g>
<g >
<title>ddsrt_chh_lookup_internal (1 samples, 0.05%)</title><rect x="752.7" y="885" width="0.6" height="15.0" fill="rgb(232,163,31)" rx="2" ry="2" />
<text  x="755.69" y="895.5" ></text>
</g>
<g >
<title>ddsi_plist_init_frommsg (1 samples, 0.05%)</title><rect x="10.6" y="1157" width="0.6" height="15.0" fill="rgb(254,185,33)" rx="2" ry="2" />
<text  x="13.62" y="1167.5" ></text>
</g>
<g >
<title>rcl_guard_condition_get_rmw_handle (2 samples, 0.10%)</title><rect x="1042.6" y="1109" width="1.2" height="15.0" fill="rgb(254,198,29)" rx="2" ry="2" />
<text  x="1045.58" y="1119.5" ></text>
</g>
<g >
<title>std::equal_to&lt;rmw_cyclonedds_cpp::CDRWriter::CacheKey&gt;::operator (1 samples, 0.05%)</title><rect x="839.4" y="709" width="0.6" height="15.0" fill="rgb(207,15,30)" rx="2" ry="2" />
<text  x="842.41" y="719.5" ></text>
</g>
<g >
<title>dds_time (1 samples, 0.05%)</title><rect x="202.6" y="1189" width="0.7" height="15.0" fill="rgb(240,154,29)" rx="2" ry="2" />
<text  x="205.64" y="1199.5" ></text>
</g>
<g >
<title>std::__detail::_Equal_helper&lt;rmw_cyclonedds_cpp::CDRWriter::CacheKey, std::pair&lt;rmw_cyclonedds_cpp::CDRWriter::CacheKey const, bool&gt;, std::__detail::_Select1st, std::equal_to&lt;rmw_cyclonedds_cpp::CDRWriter::CacheKey&gt;, unsigned long, true&gt;::_S_equals (1 samples, 0.05%)</title><rect x="782.4" y="757" width="0.6" height="15.0" fill="rgb(206,112,41)" rx="2" ry="2" />
<text  x="785.42" y="767.5" ></text>
</g>
<g >
<title>__perf_event_task_sched_in (16 samples, 0.84%)</title><rect x="1150.4" y="981" width="9.9" height="15.0" fill="rgb(231,150,5)" rx="2" ry="2" />
<text  x="1153.36" y="991.5" ></text>
</g>
<g >
<title>[librclcpp.so] (5 samples, 0.26%)</title><rect x="1017.8" y="1125" width="3.1" height="15.0" fill="rgb(250,14,46)" rx="2" ry="2" />
<text  x="1020.80" y="1135.5" ></text>
</g>
<g >
<title>pick_next_task_fair (1 samples, 0.05%)</title><rect x="345.7" y="1013" width="0.6" height="15.0" fill="rgb(207,77,10)" rx="2" ry="2" />
<text  x="348.73" y="1023.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;1ul, std::default_delete&lt;byte []&gt;&gt; (5 samples, 0.26%)</title><rect x="902.0" y="773" width="3.1" height="15.0" fill="rgb(234,75,15)" rx="2" ry="2" />
<text  x="904.97" y="783.5" ></text>
</g>
<g >
<title>finish_task_switch (21 samples, 1.10%)</title><rect x="23.6" y="965" width="13.0" height="15.0" fill="rgb(243,157,18)" rx="2" ry="2" />
<text  x="26.63" y="975.5" ></text>
</g>
<g >
<title>sock_recvmsg (8 samples, 0.42%)</title><rect x="37.3" y="1013" width="4.9" height="15.0" fill="rgb(215,54,36)" rx="2" ry="2" />
<text  x="40.25" y="1023.5" ></text>
</g>
<g >
<title>___sys_recvmsg (8 samples, 0.42%)</title><rect x="37.3" y="1045" width="4.9" height="15.0" fill="rgb(240,76,36)" rx="2" ry="2" />
<text  x="40.25" y="1055.5" ></text>
</g>
<g >
<title>std::vector&lt;long, std::allocator&lt;long&gt; &gt;::_M_data_ptr&lt;long&gt; (1 samples, 0.05%)</title><rect x="468.4" y="1189" width="0.6" height="15.0" fill="rgb(235,14,44)" rx="2" ry="2" />
<text  x="471.37" y="1199.5" ></text>
</g>
<g >
<title>std::_Function_base::_M_empty (1 samples, 0.05%)</title><rect x="799.8" y="741" width="0.6" height="15.0" fill="rgb(235,30,41)" rx="2" ry="2" />
<text  x="802.76" y="751.5" ></text>
</g>
<g >
<title>ip_route_output_key_hash_rcu (2 samples, 0.10%)</title><rect x="1118.1" y="1093" width="1.3" height="15.0" fill="rgb(253,171,46)" rx="2" ry="2" />
<text  x="1121.15" y="1103.5" ></text>
</g>
<g >
<title>[librmw_cyclonedds_cpp.so] (1 samples, 0.05%)</title><rect x="898.3" y="805" width="0.6" height="15.0" fill="rgb(235,22,47)" rx="2" ry="2" />
<text  x="901.25" y="815.5" ></text>
</g>
<g >
<title>rclcpp::Publisher&lt;std_msgs::msg::Int32MultiArray_&lt;std::allocator&lt;void&gt; &gt;, std::allocator&lt;void&gt; &gt;::publish (1 samples, 0.05%)</title><rect x="114.1" y="1253" width="0.6" height="15.0" fill="rgb(231,122,4)" rx="2" ry="2" />
<text  x="117.06" y="1263.5" ></text>
</g>
<g >
<title>__strcmp_avx2 (1 samples, 0.05%)</title><rect x="793.6" y="757" width="0.6" height="15.0" fill="rgb(247,78,4)" rx="2" ry="2" />
<text  x="796.57" y="767.5" ></text>
</g>
<g >
<title>[libddsc.so.0.8.0] (2 samples, 0.10%)</title><rect x="540.8" y="1093" width="1.3" height="15.0" fill="rgb(222,123,8)" rx="2" ry="2" />
<text  x="543.85" y="1103.5" ></text>
</g>
<g >
<title>perf_event_sched_in (1 samples, 0.05%)</title><rect x="24.2" y="933" width="0.7" height="15.0" fill="rgb(241,41,6)" rx="2" ry="2" />
<text  x="27.25" y="943.5" ></text>
</g>
<g >
<title>__GI___libc_free (1 samples, 0.05%)</title><rect x="527.8" y="1269" width="0.7" height="15.0" fill="rgb(224,217,12)" rx="2" ry="2" />
<text  x="530.84" y="1279.5" ></text>
</g>
<g >
<title>q_omg_participant_is_secure (1 samples, 0.05%)</title><rect x="915.0" y="901" width="0.6" height="15.0" fill="rgb(215,128,31)" rx="2" ry="2" />
<text  x="917.98" y="911.5" ></text>
</g>
<g >
<title>[librmw_cyclonedds_cpp.so] (1 samples, 0.05%)</title><rect x="919.3" y="869" width="0.6" height="15.0" fill="rgb(206,214,14)" rx="2" ry="2" />
<text  x="922.31" y="879.5" ></text>
</g>
<g >
<title>__pthread_mutex_unlock_usercnt (1 samples, 0.05%)</title><rect x="395.9" y="1141" width="0.6" height="15.0" fill="rgb(209,15,25)" rx="2" ry="2" />
<text  x="398.90" y="1151.5" ></text>
</g>
<g >
<title>validate_xmit_skb (3 samples, 0.16%)</title><rect x="730.4" y="517" width="1.8" height="15.0" fill="rgb(253,11,25)" rx="2" ry="2" />
<text  x="733.39" y="527.5" ></text>
</g>
<g >
<title>[librclcpp.so] (2 samples, 0.10%)</title><rect x="1103.9" y="1157" width="1.2" height="15.0" fill="rgb(229,4,12)" rx="2" ry="2" />
<text  x="1106.90" y="1167.5" ></text>
</g>
<g >
<title>write_sample_eot.isra.0.constprop.0 (1 samples, 0.05%)</title><rect x="107.2" y="1253" width="0.7" height="15.0" fill="rgb(224,1,45)" rx="2" ry="2" />
<text  x="110.25" y="1263.5" ></text>
</g>
<g >
<title>rmw_cyclonedds_cpp::CallbackSpanSequenceValueType::sequence_size (10 samples, 0.52%)</title><rect x="799.1" y="773" width="6.2" height="15.0" fill="rgb(210,57,39)" rx="2" ry="2" />
<text  x="802.14" y="783.5" ></text>
</g>
<g >
<title>update_curr (1 samples, 0.05%)</title><rect x="697.6" y="53" width="0.6" height="15.0" fill="rgb(253,17,53)" rx="2" ry="2" />
<text  x="700.56" y="63.5" ></text>
</g>
<g >
<title>nn_freelist_pop (3 samples, 0.16%)</title><rect x="905.1" y="885" width="1.8" height="15.0" fill="rgb(223,6,13)" rx="2" ry="2" />
<text  x="908.07" y="895.5" ></text>
</g>
<g >
<title>udp_rcv (59 samples, 3.10%)</title><rect x="682.1" y="341" width="36.5" height="15.0" fill="rgb(250,183,0)" rx="2" ry="2" />
<text  x="685.07" y="351.5" >udp..</text>
</g>
<g >
<title>[librmw_cyclonedds_cpp.so] (1 samples, 0.05%)</title><rect x="859.2" y="869" width="0.6" height="15.0" fill="rgb(249,4,16)" rx="2" ry="2" />
<text  x="862.23" y="879.5" ></text>
</g>
<g >
<title>rb_next (1 samples, 0.05%)</title><rect x="1169.6" y="949" width="0.6" height="15.0" fill="rgb(232,7,22)" rx="2" ry="2" />
<text  x="1172.56" y="959.5" ></text>
</g>
<g >
<title>dds_entity_pin (1 samples, 0.05%)</title><rect x="201.4" y="1173" width="0.6" height="15.0" fill="rgb(222,24,27)" rx="2" ry="2" />
<text  x="204.40" y="1183.5" ></text>
</g>
<g >
<title>write_sample_eot.isra.0.constprop.0 (3 samples, 0.16%)</title><rect x="143.2" y="949" width="1.8" height="15.0" fill="rgb(244,53,23)" rx="2" ry="2" />
<text  x="146.18" y="959.5" ></text>
</g>
<g >
<title>std::_Function_base::_Base_manager&lt;void const*  (1 samples, 0.05%)</title><rect x="819.6" y="757" width="0.6" height="15.0" fill="rgb(205,144,48)" rx="2" ry="2" />
<text  x="822.59" y="767.5" ></text>
</g>
<g >
<title>__wake_up_common (1 samples, 0.05%)</title><rect x="1180.1" y="421" width="0.6" height="15.0" fill="rgb(232,206,3)" rx="2" ry="2" />
<text  x="1183.09" y="431.5" ></text>
</g>
<g >
<title>ip_protocol_deliver_rcu (8 samples, 0.42%)</title><rect x="1123.1" y="821" width="5.0" height="15.0" fill="rgb(210,85,3)" rx="2" ry="2" />
<text  x="1126.10" y="831.5" ></text>
</g>
<g >
<title>std::unordered_map&lt;rmw_cyclonedds_cpp::CDRWriter::CacheKey, bool, rmw_cyclonedds_cpp::CDRWriter::CacheKey::Hash, std::equal_to&lt;rmw_cyclonedds_cpp::CDRWriter::CacheKey&gt;, std::allocator&lt;std::pair&lt;rmw_cyclonedds_cpp::CDRWriter::CacheKey const, bool&gt; &gt; &gt;::at (1 samples, 0.05%)</title><rect x="850.6" y="757" width="0.6" height="15.0" fill="rgb(243,17,10)" rx="2" ry="2" />
<text  x="853.56" y="767.5" ></text>
</g>
<g >
<title>ttwu_do_wakeup (2 samples, 0.10%)</title><rect x="709.9" y="101" width="1.3" height="15.0" fill="rgb(232,103,19)" rx="2" ry="2" />
<text  x="712.95" y="111.5" ></text>
</g>
<g >
<title>get_nohz_timer_target (1 samples, 0.05%)</title><rect x="1147.3" y="1013" width="0.6" height="15.0" fill="rgb(232,228,1)" rx="2" ry="2" />
<text  x="1150.26" y="1023.5" ></text>
</g>
<g >
<title>__gnu_cxx::__aligned_buffer&lt;std::pair&lt;rmw_cyclonedds_cpp::CDRWriter::CacheKey const, bool&gt; &gt;::_M_ptr (1 samples, 0.05%)</title><rect x="797.3" y="709" width="0.6" height="15.0" fill="rgb(215,44,13)" rx="2" ry="2" />
<text  x="800.29" y="719.5" ></text>
</g>
<g >
<title>__x64_sys_futex (6 samples, 0.31%)</title><rect x="1169.6" y="1109" width="3.7" height="15.0" fill="rgb(237,164,12)" rx="2" ry="2" />
<text  x="1172.56" y="1119.5" ></text>
</g>
<g >
<title>select_idle_sibling (1 samples, 0.05%)</title><rect x="1125.0" y="565" width="0.6" height="15.0" fill="rgb(239,54,45)" rx="2" ry="2" />
<text  x="1127.96" y="575.5" ></text>
</g>
<g >
<title>MinimalPublisher::timer_callback (675 samples, 35.43%)</title><rect x="556.3" y="1061" width="418.1" height="15.0" fill="rgb(237,144,35)" rx="2" ry="2" />
<text  x="559.33" y="1071.5" >MinimalPublisher::timer_callback</text>
</g>
<g >
<title>do_futex (7 samples, 0.37%)</title><rect x="11.9" y="1077" width="4.3" height="15.0" fill="rgb(228,106,5)" rx="2" ry="2" />
<text  x="14.86" y="1087.5" ></text>
</g>
<g >
<title>[libstd_msgs__rosidl_typesupport_introspection_cpp.so] (2 samples, 0.10%)</title><rect x="820.2" y="741" width="1.2" height="15.0" fill="rgb(252,134,10)" rx="2" ry="2" />
<text  x="823.20" y="751.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;rmw_cyclonedds_cpp::CDRWriter::CacheKey, std::pair&lt;rmw_cyclonedds_cpp::CDRWriter::CacheKey const, bool&gt;, std::allocator&lt;std::pair&lt;rmw_cyclonedds_cpp::CDRWriter::CacheKey const, bool&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;rmw_cyclonedds_cpp::CDRWriter::CacheKey&gt;, rmw_cyclonedds_cpp::CDRWriter::CacheKey::Hash, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_find_before_node (7 samples, 0.37%)</title><rect x="785.5" y="757" width="4.4" height="15.0" fill="rgb(205,30,28)" rx="2" ry="2" />
<text  x="788.52" y="767.5" ></text>
</g>
<g >
<title>intel_pmu_enable_all (59 samples, 3.10%)</title><rect x="285.0" y="933" width="36.6" height="15.0" fill="rgb(217,194,35)" rx="2" ry="2" />
<text  x="288.02" y="943.5" >int..</text>
</g>
<g >
<title>skb_free_head (1 samples, 0.05%)</title><rect x="41.6" y="917" width="0.6" height="15.0" fill="rgb(219,179,42)" rx="2" ry="2" />
<text  x="44.59" y="927.5" ></text>
</g>
<g >
<title>task_tick_fair (1 samples, 0.05%)</title><rect x="321.6" y="853" width="0.6" height="15.0" fill="rgb(250,81,20)" rx="2" ry="2" />
<text  x="324.57" y="863.5" ></text>
</g>
<g >
<title>aa_sk_perm (1 samples, 0.05%)</title><rect x="21.8" y="965" width="0.6" height="15.0" fill="rgb(224,106,44)" rx="2" ry="2" />
<text  x="24.77" y="975.5" ></text>
</g>
<g >
<title>ddsrt_avl_walk (245 samples, 12.86%)</title><rect x="599.1" y="901" width="151.7" height="15.0" fill="rgb(216,54,48)" rx="2" ry="2" />
<text  x="602.07" y="911.5" >ddsrt_avl_walk</text>
</g>
<g >
<title>x86_pmu_enable (1 samples, 0.05%)</title><rect x="20.5" y="1093" width="0.6" height="15.0" fill="rgb(205,168,42)" rx="2" ry="2" />
<text  x="23.53" y="1103.5" ></text>
</g>
<g >
<title>__gthread_mutex_lock (1 samples, 0.05%)</title><rect x="906.9" y="821" width="0.6" height="15.0" fill="rgb(248,222,53)" rx="2" ry="2" />
<text  x="909.92" y="831.5" ></text>
</g>
<g >
<title>inet_lookup_ifaddr_rcu (1 samples, 0.05%)</title><rect x="1118.1" y="1061" width="0.7" height="15.0" fill="rgb(209,212,40)" rx="2" ry="2" />
<text  x="1121.15" y="1071.5" ></text>
</g>
<g >
<title>[librcl.so] (3 samples, 0.16%)</title><rect x="1040.7" y="1109" width="1.9" height="15.0" fill="rgb(238,146,23)" rx="2" ry="2" />
<text  x="1043.72" y="1119.5" ></text>
</g>
<g >
<title>__cxxabiv1::__si_class_type_info::__do_dyncast (2 samples, 0.10%)</title><rect x="793.0" y="773" width="1.2" height="15.0" fill="rgb(246,206,40)" rx="2" ry="2" />
<text  x="795.95" y="783.5" ></text>
</g>
<g >
<title>resend_spdp_sample_by_guid_key (1 samples, 0.05%)</title><rect x="1178.2" y="1189" width="0.7" height="15.0" fill="rgb(218,204,35)" rx="2" ry="2" />
<text  x="1181.23" y="1199.5" ></text>
</g>
<g >
<title>rcl_timer_is_ready (22 samples, 1.15%)</title><rect x="156.2" y="1237" width="13.6" height="15.0" fill="rgb(230,54,18)" rx="2" ry="2" />
<text  x="159.18" y="1247.5" ></text>
</g>
<g >
<title>rcl_clock_get_now (1 samples, 0.05%)</title><rect x="554.5" y="1125" width="0.6" height="15.0" fill="rgb(209,197,7)" rx="2" ry="2" />
<text  x="557.47" y="1135.5" ></text>
</g>
<g >
<title>udp_send_skb.isra.0 (122 samples, 6.40%)</title><rect x="658.5" y="661" width="75.6" height="15.0" fill="rgb(249,62,13)" rx="2" ry="2" />
<text  x="661.54" y="671.5" >udp_send..</text>
</g>
<g >
<title>get_status_kind_from_rmw (9 samples, 0.47%)</title><rect x="396.5" y="1189" width="5.6" height="15.0" fill="rgb(211,57,30)" rx="2" ry="2" />
<text  x="399.52" y="1199.5" ></text>
</g>
<g >
<title>ddsrt_mutex_unlock (34 samples, 1.78%)</title><rect x="351.3" y="1189" width="21.1" height="15.0" fill="rgb(217,178,23)" rx="2" ry="2" />
<text  x="354.30" y="1199.5" ></text>
</g>
<g >
<title>process_backlog (11 samples, 0.58%)</title><rect x="1121.2" y="933" width="6.9" height="15.0" fill="rgb(246,195,5)" rx="2" ry="2" />
<text  x="1124.24" y="943.5" ></text>
</g>
<g >
<title>std::__uninitialized_default_n_1&lt;true&gt;::__uninit_default_n&lt;int*, unsigned long&gt; (7 samples, 0.37%)</title><rect x="950.3" y="981" width="4.3" height="15.0" fill="rgb(230,91,29)" rx="2" ry="2" />
<text  x="953.28" y="991.5" ></text>
</g>
<g >
<title>rcl_timer_get_guard_condition (1 samples, 0.05%)</title><rect x="1043.8" y="1109" width="0.6" height="15.0" fill="rgb(247,125,16)" rx="2" ry="2" />
<text  x="1046.82" y="1119.5" ></text>
</g>
<g >
<title>perf_swevent_add (1 samples, 0.05%)</title><rect x="1152.8" y="869" width="0.7" height="15.0" fill="rgb(219,125,14)" rx="2" ry="2" />
<text  x="1155.83" y="879.5" ></text>
</g>
<g >
<title>__dynamic_cast (4 samples, 0.21%)</title><rect x="791.7" y="789" width="2.5" height="15.0" fill="rgb(234,228,44)" rx="2" ry="2" />
<text  x="794.71" y="799.5" ></text>
</g>
<g >
<title>ddsrt_cond_waituntil (214 samples, 11.23%)</title><rect x="218.1" y="1189" width="132.6" height="15.0" fill="rgb(230,19,7)" rx="2" ry="2" />
<text  x="221.13" y="1199.5" >ddsrt_cond_waitu..</text>
</g>
<g >
<title>std::vector&lt;rmw_cyclonedds_cpp::Member, std::allocator&lt;rmw_cyclonedds_cpp::Member&gt; &gt;::size (1 samples, 0.05%)</title><rect x="823.9" y="789" width="0.6" height="15.0" fill="rgb(217,162,19)" rx="2" ry="2" />
<text  x="826.92" y="799.5" ></text>
</g>
<g >
<title>try_to_wake_up (1 samples, 0.05%)</title><rect x="42.2" y="965" width="0.6" height="15.0" fill="rgb(212,172,28)" rx="2" ry="2" />
<text  x="45.21" y="975.5" ></text>
</g>
<g >
<title>xfrm_lookup_route (1 samples, 0.05%)</title><rect x="734.1" y="661" width="0.6" height="15.0" fill="rgb(240,203,42)" rx="2" ry="2" />
<text  x="737.10" y="671.5" ></text>
</g>
<g >
<title>nn_xpack_addmsg (14 samples, 0.73%)</title><rect x="922.4" y="917" width="8.7" height="15.0" fill="rgb(206,209,2)" rx="2" ry="2" />
<text  x="925.41" y="927.5" ></text>
</g>
<g >
<title>hrtimer_sleeper_start_expires (8 samples, 0.42%)</title><rect x="239.2" y="1029" width="4.9" height="15.0" fill="rgb(217,139,9)" rx="2" ry="2" />
<text  x="242.19" y="1039.5" ></text>
</g>
<g >
<title>writer_max_drop_seq (1 samples, 0.05%)</title><rect x="907.5" y="901" width="0.7" height="15.0" fill="rgb(252,190,17)" rx="2" ry="2" />
<text  x="910.54" y="911.5" ></text>
</g>
<g >
<title>x86_pmu_enable (6 samples, 0.31%)</title><rect x="37.9" y="837" width="3.7" height="15.0" fill="rgb(253,12,38)" rx="2" ry="2" />
<text  x="40.87" y="847.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.05%)</title><rect x="1180.1" y="645" width="0.6" height="15.0" fill="rgb(246,171,1)" rx="2" ry="2" />
<text  x="1183.09" y="655.5" ></text>
</g>
<g >
<title>ddsi_serdata_unref (5 samples, 0.26%)</title><rect x="755.8" y="885" width="3.1" height="15.0" fill="rgb(212,96,7)" rx="2" ry="2" />
<text  x="758.78" y="895.5" ></text>
</g>
<g >
<title>[libddsc.so.0.8.0] (1 samples, 0.05%)</title><rect x="351.9" y="1173" width="0.6" height="15.0" fill="rgb(214,43,23)" rx="2" ry="2" />
<text  x="354.92" y="1183.5" ></text>
</g>
<g >
<title>[librmw_cyclonedds_cpp.so] (1 samples, 0.05%)</title><rect x="916.8" y="885" width="0.7" height="15.0" fill="rgb(236,161,11)" rx="2" ry="2" />
<text  x="919.83" y="895.5" ></text>
</g>
<g >
<title>[libddsc.so.0.8.0] (3 samples, 0.16%)</title><rect x="581.1" y="933" width="1.9" height="15.0" fill="rgb(252,175,32)" rx="2" ry="2" />
<text  x="584.11" y="943.5" ></text>
</g>
<g >
<title>__vdso_clock_gettime (1 samples, 0.05%)</title><rect x="202.6" y="1157" width="0.7" height="15.0" fill="rgb(215,63,12)" rx="2" ry="2" />
<text  x="205.64" y="1167.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;rmw_cyclonedds_cpp::CDRWriter::CacheKey, std::pair&lt;rmw_cyclonedds_cpp::CDRWriter::CacheKey const, bool&gt;, std::allocator&lt;std::pair&lt;rmw_cyclonedds_cpp::CDRWriter::CacheKey const, bool&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;rmw_cyclonedds_cpp::CDRWriter::CacheKey&gt;, rmw_cyclonedds_cpp::CDRWriter::CacheKey::Hash, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_find_node (1 samples, 0.05%)</title><rect x="849.3" y="725" width="0.6" height="15.0" fill="rgb(221,56,37)" rx="2" ry="2" />
<text  x="852.32" y="735.5" ></text>
</g>
<g >
<title>__cgroup_bpf_run_filter_sock_addr (1 samples, 0.05%)</title><rect x="615.2" y="661" width="0.6" height="15.0" fill="rgb(224,109,36)" rx="2" ry="2" />
<text  x="618.18" y="671.5" ></text>
</g>
<g >
<title>ddsrt_chh_lookup_internal (2 samples, 0.10%)</title><rect x="589.8" y="917" width="1.2" height="15.0" fill="rgb(230,163,34)" rx="2" ry="2" />
<text  x="592.78" y="927.5" ></text>
</g>
<g >
<title>dds_write_impl (3 samples, 0.16%)</title><rect x="143.2" y="965" width="1.8" height="15.0" fill="rgb(234,21,19)" rx="2" ry="2" />
<text  x="146.18" y="975.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;void, void  (3 samples, 0.16%)</title><rect x="143.2" y="1093" width="1.8" height="15.0" fill="rgb(240,42,4)" rx="2" ry="2" />
<text  x="146.18" y="1103.5" ></text>
</g>
<g >
<title>ip_finish_output2 (14 samples, 0.73%)</title><rect x="1120.0" y="1029" width="8.7" height="15.0" fill="rgb(226,72,45)" rx="2" ry="2" />
<text  x="1123.01" y="1039.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, rmw_cyclonedds_cpp::StructValueType const*, std::default_delete&lt;rmw_cyclonedds_cpp::StructValueType const&gt; &gt;::_M_head (2 samples, 0.10%)</title><rect x="827.0" y="789" width="1.3" height="15.0" fill="rgb(235,54,43)" rx="2" ry="2" />
<text  x="830.02" y="799.5" ></text>
</g>
<g >
<title>intel_pmu_enable_all (6 samples, 0.31%)</title><rect x="12.5" y="933" width="3.7" height="15.0" fill="rgb(241,32,14)" rx="2" ry="2" />
<text  x="15.48" y="943.5" ></text>
</g>
<g >
<title>rclcpp::memory_strategies::allocator_memory_strategy::AllocatorMemoryStrategy&lt;std::allocator&lt;void&gt; &gt;::get_next_client (2 samples, 0.10%)</title><rect x="985.0" y="1141" width="1.2" height="15.0" fill="rgb(216,139,38)" rx="2" ry="2" />
<text  x="987.97" y="1151.5" ></text>
</g>
<g >
<title>rcl_event_is_valid (2 samples, 0.10%)</title><rect x="1046.9" y="1077" width="1.3" height="15.0" fill="rgb(220,172,31)" rx="2" ry="2" />
<text  x="1049.91" y="1087.5" ></text>
</g>
<g >
<title>__check_object_size (6 samples, 0.31%)</title><rect x="619.5" y="613" width="3.7" height="15.0" fill="rgb(216,206,3)" rx="2" ry="2" />
<text  x="622.51" y="623.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;rmw_cyclonedds_cpp::CDRWriter::CacheKey, std::pair&lt;rmw_cyclonedds_cpp::CDRWriter::CacheKey const, bool&gt;, std::allocator&lt;std::pair&lt;rmw_cyclonedds_cpp::CDRWriter::CacheKey const, bool&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;rmw_cyclonedds_cpp::CDRWriter::CacheKey&gt;, rmw_cyclonedds_cpp::CDRWriter::CacheKey::Hash, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_find_node (5 samples, 0.26%)</title><rect x="837.5" y="773" width="3.1" height="15.0" fill="rgb(205,10,43)" rx="2" ry="2" />
<text  x="840.55" y="783.5" ></text>
</g>
<g >
<title>[librmw_cyclonedds_cpp.so] (1 samples, 0.05%)</title><rect x="413.9" y="1109" width="0.6" height="15.0" fill="rgb(245,22,46)" rx="2" ry="2" />
<text  x="416.86" y="1119.5" ></text>
</g>
<g >
<title>visit_groups_merge (2 samples, 0.10%)</title><rect x="1152.2" y="933" width="1.3" height="15.0" fill="rgb(210,27,7)" rx="2" ry="2" />
<text  x="1155.22" y="943.5" ></text>
</g>
<g >
<title>apparmor_socket_sendmsg (1 samples, 0.05%)</title><rect x="612.1" y="693" width="0.6" height="15.0" fill="rgb(242,66,25)" rx="2" ry="2" />
<text  x="615.08" y="703.5" ></text>
</g>
<g >
<title>rclcpp::Executor::wait_for_work (151 samples, 7.93%)</title><rect x="989.9" y="1157" width="93.6" height="15.0" fill="rgb(226,153,1)" rx="2" ry="2" />
<text  x="992.93" y="1167.5" >rclcpp::Exe..</text>
</g>
<g >
<title>rmw_cyclonedds_cpp::CallbackSpanSequenceValueType::sequence_contents (12 samples, 0.63%)</title><rect x="814.0" y="805" width="7.4" height="15.0" fill="rgb(241,65,26)" rx="2" ry="2" />
<text  x="817.01" y="815.5" ></text>
</g>
<g >
<title>newidle_balance (1 samples, 0.05%)</title><rect x="1186.3" y="1125" width="0.6" height="15.0" fill="rgb(212,56,27)" rx="2" ry="2" />
<text  x="1189.28" y="1135.5" ></text>
</g>
<g >
<title>ddsrt_cond_broadcast (5 samples, 0.26%)</title><rect x="545.8" y="1061" width="3.1" height="15.0" fill="rgb(242,186,39)" rx="2" ry="2" />
<text  x="548.80" y="1071.5" ></text>
</g>
<g >
<title>sock_alloc_send_skb (14 samples, 0.73%)</title><rect x="625.1" y="629" width="8.7" height="15.0" fill="rgb(231,9,11)" rx="2" ry="2" />
<text  x="628.09" y="639.5" ></text>
</g>
<g >
<title>schedule (1 samples, 0.05%)</title><rect x="20.5" y="1173" width="0.6" height="15.0" fill="rgb(247,24,44)" rx="2" ry="2" />
<text  x="23.53" y="1183.5" ></text>
</g>
<g >
<title>[liblibstatistics_collector.so] (2 samples, 0.10%)</title><rect x="451.6" y="1189" width="1.3" height="15.0" fill="rgb(223,157,25)" rx="2" ry="2" />
<text  x="454.65" y="1199.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;1ul, std::default_delete&lt;byte []&gt; &gt;::_Tuple_impl (1 samples, 0.05%)</title><rect x="871.6" y="821" width="0.6" height="15.0" fill="rgb(228,170,44)" rx="2" ry="2" />
<text  x="874.62" y="831.5" ></text>
</g>
<g >
<title>rcutils_find_lastn (7 samples, 0.37%)</title><rect x="177.9" y="1205" width="4.3" height="15.0" fill="rgb(216,114,28)" rx="2" ry="2" />
<text  x="180.86" y="1215.5" ></text>
</g>
<g >
<title>tick_sched_timer (1 samples, 0.05%)</title><rect x="321.6" y="917" width="0.6" height="15.0" fill="rgb(253,119,15)" rx="2" ry="2" />
<text  x="324.57" y="927.5" ></text>
</g>
<g >
<title>ros_trace_callback_end (2 samples, 0.10%)</title><rect x="978.2" y="1141" width="1.2" height="15.0" fill="rgb(218,203,43)" rx="2" ry="2" />
<text  x="981.16" y="1151.5" ></text>
</g>
<g >
<title>rmw_cyclonedds_cpp::DataCursor::put_bytes (2 samples, 0.10%)</title><rect x="828.3" y="853" width="1.2" height="15.0" fill="rgb(251,117,26)" rx="2" ry="2" />
<text  x="831.26" y="863.5" ></text>
</g>
<g >
<title>[librmw_cyclonedds_cpp.so] (3 samples, 0.16%)</title><rect x="902.0" y="757" width="1.8" height="15.0" fill="rgb(225,64,53)" rx="2" ry="2" />
<text  x="904.97" y="767.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_ebo_helper&lt;0, std::__detail::_Select1st, true&gt;::_S_cget (2 samples, 0.10%)</title><rect x="435.5" y="1109" width="1.3" height="15.0" fill="rgb(233,88,28)" rx="2" ry="2" />
<text  x="438.54" y="1119.5" ></text>
</g>
<g >
<title>__check_heap_object (1 samples, 0.05%)</title><rect x="618.9" y="613" width="0.6" height="15.0" fill="rgb(213,184,16)" rx="2" ry="2" />
<text  x="621.89" y="623.5" ></text>
</g>
<g >
<title>dds_set_guardcondition (17 samples, 0.89%)</title><rect x="540.8" y="1109" width="10.6" height="15.0" fill="rgb(214,103,53)" rx="2" ry="2" />
<text  x="543.85" y="1119.5" ></text>
</g>
<g >
<title>dds_entity_unlock (1 samples, 0.05%)</title><rect x="202.0" y="1189" width="0.6" height="15.0" fill="rgb(207,211,46)" rx="2" ry="2" />
<text  x="205.02" y="1199.5" ></text>
</g>
<g >
<title>__perf_event_task_sched_in (7 samples, 0.37%)</title><rect x="37.3" y="869" width="4.3" height="15.0" fill="rgb(233,74,19)" rx="2" ry="2" />
<text  x="40.25" y="879.5" ></text>
</g>
<g >
<title>nn_xpack_send1v (1 samples, 0.05%)</title><rect x="1180.1" y="1109" width="0.6" height="15.0" fill="rgb(247,25,54)" rx="2" ry="2" />
<text  x="1183.09" y="1119.5" ></text>
</g>
<g >
<title>psi_task_change (4 samples, 0.21%)</title><rect x="1125.6" y="549" width="2.5" height="15.0" fill="rgb(247,41,31)" rx="2" ry="2" />
<text  x="1128.58" y="559.5" ></text>
</g>
<g >
<title>ip_finish_output (1 samples, 0.05%)</title><rect x="659.2" y="613" width="0.6" height="15.0" fill="rgb(225,20,31)" rx="2" ry="2" />
<text  x="662.15" y="623.5" ></text>
</g>
<g >
<title>rclcpp::QOSEventHandlerBase::add_to_wait_set (6 samples, 0.31%)</title><rect x="1044.4" y="1125" width="3.8" height="15.0" fill="rgb(212,18,14)" rx="2" ry="2" />
<text  x="1047.44" y="1135.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.05%)</title><rect x="1007.9" y="1125" width="0.6" height="15.0" fill="rgb(253,66,11)" rx="2" ry="2" />
<text  x="1010.89" y="1135.5" ></text>
</g>
<g >
<title>[librclcpp.so] (3 samples, 0.16%)</title><rect x="531.6" y="1173" width="1.8" height="15.0" fill="rgb(233,97,43)" rx="2" ry="2" />
<text  x="534.55" y="1183.5" ></text>
</g>
<g >
<title>ddsrt_cond_waituntil (46 samples, 2.41%)</title><rect x="1139.8" y="1189" width="28.5" height="15.0" fill="rgb(207,133,46)" rx="2" ry="2" />
<text  x="1142.83" y="1199.5" >dd..</text>
</g>
<g >
<title>intel_pmu_enable_all (11 samples, 0.58%)</title><rect x="1153.5" y="933" width="6.8" height="15.0" fill="rgb(238,54,45)" rx="2" ry="2" />
<text  x="1156.45" y="943.5" ></text>
</g>
<g >
<title>native_write_msr (5 samples, 0.26%)</title><rect x="1170.2" y="933" width="3.1" height="15.0" fill="rgb(205,165,39)" rx="2" ry="2" />
<text  x="1173.18" y="943.5" ></text>
</g>
<g >
<title>std::forward&lt;sertype_rmw const*&amp;&gt; (3 samples, 0.16%)</title><rect x="872.2" y="901" width="1.9" height="15.0" fill="rgb(237,145,0)" rx="2" ry="2" />
<text  x="875.24" y="911.5" ></text>
</g>
<g >
<title>intel_pmu_enable_all (1 samples, 0.05%)</title><rect x="20.5" y="1077" width="0.6" height="15.0" fill="rgb(229,227,4)" rx="2" ry="2" />
<text  x="23.53" y="1087.5" ></text>
</g>
<g >
<title>rcl_wait_set_resize (2 samples, 0.10%)</title><rect x="1129.3" y="1269" width="1.2" height="15.0" fill="rgb(246,14,49)" rx="2" ry="2" />
<text  x="1132.30" y="1279.5" ></text>
</g>
<g >
<title>[librmw_cyclonedds_cpp.so] (2 samples, 0.10%)</title><rect x="428.7" y="1125" width="1.3" height="15.0" fill="rgb(220,18,39)" rx="2" ry="2" />
<text  x="431.73" y="1135.5" ></text>
</g>
<g >
<title>std::__hash_enum&lt;rmw_event_type_t, true&gt;::operator (2 samples, 0.10%)</title><rect x="125.8" y="1253" width="1.3" height="15.0" fill="rgb(222,8,42)" rx="2" ry="2" />
<text  x="128.83" y="1263.5" ></text>
</g>
<g >
<title>ddsrt_mutex_lock (1 samples, 0.05%)</title><rect x="395.3" y="1157" width="0.6" height="15.0" fill="rgb(206,160,51)" rx="2" ry="2" />
<text  x="398.28" y="1167.5" ></text>
</g>
<g >
<title>__cxxabiv1::__si_class_type_info::__do_dyncast (6 samples, 0.31%)</title><rect x="833.2" y="805" width="3.7" height="15.0" fill="rgb(252,100,3)" rx="2" ry="2" />
<text  x="836.21" y="815.5" ></text>
</g>
<g >
<title>ddsrt_cond_wait (7 samples, 0.37%)</title><rect x="11.9" y="1189" width="4.3" height="15.0" fill="rgb(251,111,40)" rx="2" ry="2" />
<text  x="14.86" y="1199.5" ></text>
</g>
<g >
<title>__sys_sendmsg (1 samples, 0.05%)</title><rect x="1180.1" y="981" width="0.6" height="15.0" fill="rgb(214,68,20)" rx="2" ry="2" />
<text  x="1183.09" y="991.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;rmw_cyclonedds_cpp::CDRWriter::CacheKey, std::pair&lt;rmw_cyclonedds_cpp::CDRWriter::CacheKey const, bool&gt;, std::allocator&lt;std::pair&lt;rmw_cyclonedds_cpp::CDRWriter::CacheKey const, bool&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;rmw_cyclonedds_cpp::CDRWriter::CacheKey&gt;, rmw_cyclonedds_cpp::CDRWriter::CacheKey::Hash, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_find_node (1 samples, 0.05%)</title><rect x="850.6" y="725" width="0.6" height="15.0" fill="rgb(248,84,37)" rx="2" ry="2" />
<text  x="853.56" y="735.5" ></text>
</g>
<g >
<title>ddsrt_time_monotonic (1 samples, 0.05%)</title><rect x="1174.5" y="1189" width="0.6" height="15.0" fill="rgb(237,12,25)" rx="2" ry="2" />
<text  x="1177.51" y="1199.5" ></text>
</g>
<g >
<title>rcl_subscription_get_rmw_handle (2 samples, 0.10%)</title><rect x="1037.0" y="1109" width="1.2" height="15.0" fill="rgb(244,174,6)" rx="2" ry="2" />
<text  x="1040.00" y="1119.5" ></text>
</g>
<g >
<title>std::__detail::_Map_base&lt;rmw_cyclonedds_cpp::CDRWriter::CacheKey, std::pair&lt;rmw_cyclonedds_cpp::CDRWriter::CacheKey const, bool&gt;, std::allocator&lt;std::pair&lt;rmw_cyclonedds_cpp::CDRWriter::CacheKey const, bool&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;rmw_cyclonedds_cpp::CDRWriter::CacheKey&gt;, rmw_cyclonedds_cpp::CDRWriter::CacheKey::Hash, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt;, true&gt;::at (7 samples, 0.37%)</title><rect x="785.5" y="789" width="4.4" height="15.0" fill="rgb(228,179,16)" rx="2" ry="2" />
<text  x="788.52" y="799.5" ></text>
</g>
<g >
<title>do_softirq_own_stack (1 samples, 0.05%)</title><rect x="1180.1" y="741" width="0.6" height="15.0" fill="rgb(222,219,29)" rx="2" ry="2" />
<text  x="1183.09" y="751.5" ></text>
</g>
<g >
<title>[librmw_cyclonedds_cpp.so] (4 samples, 0.21%)</title><rect x="768.2" y="837" width="2.5" height="15.0" fill="rgb(245,185,32)" rx="2" ry="2" />
<text  x="771.17" y="847.5" ></text>
</g>
<g >
<title>rclcpp::memory_strategies::allocator_memory_strategy::AllocatorMemoryStrategy&lt;std::allocator&lt;void&gt; &gt;::number_of_ready_events (2 samples, 0.10%)</title><rect x="1063.6" y="1141" width="1.3" height="15.0" fill="rgb(253,127,3)" rx="2" ry="2" />
<text  x="1066.64" y="1151.5" ></text>
</g>
<g >
<title>ddsi_serdata_ref (5 samples, 0.26%)</title><rect x="917.5" y="885" width="3.1" height="15.0" fill="rgb(234,122,15)" rx="2" ry="2" />
<text  x="920.45" y="895.5" ></text>
</g>
<g >
<title>[talker] (2 samples, 0.10%)</title><rect x="968.9" y="949" width="1.2" height="15.0" fill="rgb(241,166,15)" rx="2" ry="2" />
<text  x="971.87" y="959.5" ></text>
</g>
<g >
<title>do_futex (2 samples, 0.10%)</title><rect x="368.0" y="1109" width="1.3" height="15.0" fill="rgb(246,197,50)" rx="2" ry="2" />
<text  x="371.03" y="1119.5" ></text>
</g>
<g >
<title>nn_xmsg_new (6 samples, 0.31%)</title><rect x="911.9" y="917" width="3.7" height="15.0" fill="rgb(211,153,29)" rx="2" ry="2" />
<text  x="914.88" y="927.5" ></text>
</g>
<g >
<title>rcl_clock_get_now (11 samples, 0.58%)</title><rect x="158.7" y="1205" width="6.8" height="15.0" fill="rgb(236,166,54)" rx="2" ry="2" />
<text  x="161.66" y="1215.5" ></text>
</g>
<g >
<title>finish_task_switch (99 samples, 5.20%)</title><rect x="262.7" y="997" width="61.3" height="15.0" fill="rgb(220,21,47)" rx="2" ry="2" />
<text  x="265.72" y="1007.5" >finish..</text>
</g>
<g >
<title>check_stack_object (1 samples, 0.05%)</title><rect x="742.2" y="661" width="0.6" height="15.0" fill="rgb(228,203,38)" rx="2" ry="2" />
<text  x="745.16" y="671.5" ></text>
</g>
<g >
<title>udp_sendmsg (1 samples, 0.05%)</title><rect x="1180.1" y="901" width="0.6" height="15.0" fill="rgb(235,187,16)" rx="2" ry="2" />
<text  x="1183.09" y="911.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::_S_max_size (4 samples, 0.21%)</title><rect x="959.0" y="997" width="2.4" height="15.0" fill="rgb(238,212,18)" rx="2" ry="2" />
<text  x="961.96" y="1007.5" ></text>
</g>
<g >
<title>__GI___pthread_mutex_unlock (2 samples, 0.10%)</title><rect x="1173.3" y="1173" width="1.2" height="15.0" fill="rgb(206,71,48)" rx="2" ry="2" />
<text  x="1176.28" y="1183.5" ></text>
</g>
<g >
<title>activate_task (1 samples, 0.05%)</title><rect x="1180.1" y="325" width="0.6" height="15.0" fill="rgb(223,46,14)" rx="2" ry="2" />
<text  x="1183.09" y="335.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (6 samples, 0.31%)</title><rect x="1169.6" y="1141" width="3.7" height="15.0" fill="rgb(247,84,38)" rx="2" ry="2" />
<text  x="1172.56" y="1151.5" ></text>
</g>
<g >
<title>futex_wait_queue_me (1 samples, 0.05%)</title><rect x="20.5" y="1189" width="0.6" height="15.0" fill="rgb(216,186,12)" rx="2" ry="2" />
<text  x="23.53" y="1199.5" ></text>
</g>
<g >
<title>futex_wait_queue_me (6 samples, 0.31%)</title><rect x="1183.8" y="1189" width="3.7" height="15.0" fill="rgb(244,107,54)" rx="2" ry="2" />
<text  x="1186.81" y="1199.5" ></text>
</g>
<g >
<title>ddsrt_mutex_unlock (1 samples, 0.05%)</title><rect x="884.6" y="917" width="0.6" height="15.0" fill="rgb(228,48,16)" rx="2" ry="2" />
<text  x="887.62" y="927.5" ></text>
</g>
<g >
<title>call_rcu (1 samples, 0.05%)</title><rect x="716.1" y="229" width="0.7" height="15.0" fill="rgb(211,132,39)" rx="2" ry="2" />
<text  x="719.14" y="239.5" ></text>
</g>
<g >
<title>update_load_avg (1 samples, 0.05%)</title><rect x="340.8" y="917" width="0.6" height="15.0" fill="rgb(233,64,9)" rx="2" ry="2" />
<text  x="343.77" y="927.5" ></text>
</g>
<g >
<title>__libc_sendmsg (2 samples, 0.10%)</title><rect x="1177.0" y="1077" width="1.2" height="15.0" fill="rgb(227,37,30)" rx="2" ry="2" />
<text  x="1179.99" y="1087.5" ></text>
</g>
<g >
<title>rmw_cyclonedds_cpp::CDRWriter::serialize (39 samples, 2.05%)</title><rect x="830.1" y="853" width="24.2" height="15.0" fill="rgb(237,224,1)" rx="2" ry="2" />
<text  x="833.12" y="863.5" >r..</text>
</g>
<g >
<title>sock_def_readable (41 samples, 2.15%)</title><rect x="688.3" y="245" width="25.4" height="15.0" fill="rgb(212,8,22)" rx="2" ry="2" />
<text  x="691.27" y="255.5" >s..</text>
</g>
<g >
<title>rmw_publish (595 samples, 31.23%)</title><rect x="571.2" y="981" width="368.6" height="15.0" fill="rgb(205,173,48)" rx="2" ry="2" />
<text  x="574.20" y="991.5" >rmw_publish</text>
</g>
<g >
<title>__GI___pthread_mutex_lock (4 samples, 0.21%)</title><rect x="392.8" y="1141" width="2.5" height="15.0" fill="rgb(210,12,41)" rx="2" ry="2" />
<text  x="395.80" y="1151.5" ></text>
</g>
<g >
<title>free_deferred_free_list.part.0 (16 samples, 0.84%)</title><rect x="895.2" y="885" width="9.9" height="15.0" fill="rgb(231,192,39)" rx="2" ry="2" />
<text  x="898.15" y="895.5" ></text>
</g>
<g >
<title>tcache_put (2 samples, 0.10%)</title><rect x="1009.7" y="1093" width="1.3" height="15.0" fill="rgb(233,213,39)" rx="2" ry="2" />
<text  x="1012.75" y="1103.5" ></text>
</g>
<g >
<title>std::__detail::_Map_base&lt;rmw_event_type_t, std::pair&lt;rmw_event_type_t const, unsigned int&gt;, std::allocator&lt;std::pair&lt;rmw_event_type_t const, unsigned int&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;rmw_event_type_t&gt;, std::hash&lt;rmw_event_type_t&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt;, true&gt;::at (8 samples, 0.42%)</title><rect x="397.1" y="1157" width="5.0" height="15.0" fill="rgb(216,120,38)" rx="2" ry="2" />
<text  x="400.14" y="1167.5" ></text>
</g>
<g >
<title>create_thread_wrapper (10 samples, 0.52%)</title><rect x="37.3" y="1221" width="6.1" height="15.0" fill="rgb(236,211,1)" rx="2" ry="2" />
<text  x="40.25" y="1231.5" ></text>
</g>
<g >
<title>std::fill_n&lt;long*, unsigned long, long&gt; (1 samples, 0.05%)</title><rect x="491.3" y="1141" width="0.6" height="15.0" fill="rgb(239,144,42)" rx="2" ry="2" />
<text  x="494.29" y="1151.5" ></text>
</g>
<g >
<title>std::__detail::_Hash_code_base&lt;rmw_event_type_t, std::pair&lt;rmw_event_type_t const, unsigned int&gt;, std::__detail::_Select1st, std::hash&lt;rmw_event_type_t&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false&gt;::_M_h1 (5 samples, 0.26%)</title><rect x="424.4" y="1125" width="3.1" height="15.0" fill="rgb(243,228,34)" rx="2" ry="2" />
<text  x="427.39" y="1135.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.05%)</title><rect x="1180.1" y="725" width="0.6" height="15.0" fill="rgb(252,140,41)" rx="2" ry="2" />
<text  x="1183.09" y="735.5" ></text>
</g>
<g >
<title>__sched_text_start (7 samples, 0.37%)</title><rect x="11.9" y="1013" width="4.3" height="15.0" fill="rgb(244,61,8)" rx="2" ry="2" />
<text  x="14.86" y="1023.5" ></text>
</g>
<g >
<title>[libddsc.so.0.8.0] (1 samples, 0.05%)</title><rect x="576.2" y="933" width="0.6" height="15.0" fill="rgb(244,126,52)" rx="2" ry="2" />
<text  x="579.15" y="943.5" ></text>
</g>
<g >
<title>ros_trace_rclcpp_publish (3 samples, 0.16%)</title><rect x="939.8" y="1013" width="1.8" height="15.0" fill="rgb(209,63,43)" rx="2" ry="2" />
<text  x="942.75" y="1023.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64 (2 samples, 0.10%)</title><rect x="232.4" y="1125" width="1.2" height="15.0" fill="rgb(240,90,49)" rx="2" ry="2" />
<text  x="235.37" y="1135.5" ></text>
</g>
<g >
<title>__cxxabiv1::__si_class_type_info::__do_dyncast (1 samples, 0.05%)</title><rect x="829.5" y="837" width="0.6" height="15.0" fill="rgb(246,82,21)" rx="2" ry="2" />
<text  x="832.50" y="847.5" ></text>
</g>
<g >
<title>pick_next_task_idle (1 samples, 0.05%)</title><rect x="1186.9" y="1141" width="0.6" height="15.0" fill="rgb(227,227,2)" rx="2" ry="2" />
<text  x="1189.90" y="1151.5" ></text>
</g>
<g >
<title>ip_send_skb (1 samples, 0.05%)</title><rect x="1180.1" y="869" width="0.6" height="15.0" fill="rgb(216,82,49)" rx="2" ry="2" />
<text  x="1183.09" y="879.5" ></text>
</g>
<g >
<title>perf_pmu_enable.part.0 (1 samples, 0.05%)</title><rect x="19.3" y="981" width="0.6" height="15.0" fill="rgb(206,168,41)" rx="2" ry="2" />
<text  x="22.29" y="991.5" ></text>
</g>
<g >
<title>udp_sendmsg (2 samples, 0.10%)</title><rect x="1188.8" y="1141" width="1.2" height="15.0" fill="rgb(230,88,4)" rx="2" ry="2" />
<text  x="1191.76" y="1151.5" ></text>
</g>
<g >
<title>std::__detail::_Map_base&lt;rmw_cyclonedds_cpp::CDRWriter::CacheKey, std::pair&lt;rmw_cyclonedds_cpp::CDRWriter::CacheKey const, bool&gt;, std::allocator&lt;std::pair&lt;rmw_cyclonedds_cpp::CDRWriter::CacheKey const, bool&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;rmw_cyclonedds_cpp::CDRWriter::CacheKey&gt;, rmw_cyclonedds_cpp::CDRWriter::CacheKey::Hash, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt;, true&gt;::at (2 samples, 0.10%)</title><rect x="811.5" y="741" width="1.3" height="15.0" fill="rgb(241,8,6)" rx="2" ry="2" />
<text  x="814.53" y="751.5" ></text>
</g>
<g >
<title>ddsrt_mutex_unlock (1 samples, 0.05%)</title><rect x="395.9" y="1173" width="0.6" height="15.0" fill="rgb(254,116,34)" rx="2" ry="2" />
<text  x="398.90" y="1183.5" ></text>
</g>
<g >
<title>udp4_lib_lookup2 (4 samples, 0.21%)</title><rect x="684.6" y="293" width="2.4" height="15.0" fill="rgb(228,18,23)" rx="2" ry="2" />
<text  x="687.55" y="303.5" ></text>
</g>
<g >
<title>__hrtimer_init (1 samples, 0.05%)</title><rect x="19.9" y="1029" width="0.6" height="15.0" fill="rgb(236,90,24)" rx="2" ry="2" />
<text  x="22.91" y="1039.5" ></text>
</g>
<g >
<title>idle_cpu (1 samples, 0.05%)</title><rect x="1160.3" y="821" width="0.6" height="15.0" fill="rgb(244,210,28)" rx="2" ry="2" />
<text  x="1163.27" y="831.5" ></text>
</g>
<g >
<title>ddsrt_mutex_trylock (1 samples, 0.05%)</title><rect x="913.7" y="885" width="0.7" height="15.0" fill="rgb(228,60,48)" rx="2" ry="2" />
<text  x="916.74" y="895.5" ></text>
</g>
<g >
<title>gc (8 samples, 0.42%)</title><rect x="16.2" y="1285" width="4.9" height="15.0" fill="rgb(212,151,3)" rx="2" ry="2" />
<text  x="19.19" y="1295.5" ></text>
</g>
<g >
<title>dequeue_entity (13 samples, 0.68%)</title><rect x="251.0" y="965" width="8.0" height="15.0" fill="rgb(247,202,7)" rx="2" ry="2" />
<text  x="253.96" y="975.5" ></text>
</g>
<g >
<title>__GI___pthread_mutex_unlock (1 samples, 0.05%)</title><rect x="1059.3" y="1125" width="0.6" height="15.0" fill="rgb(252,206,9)" rx="2" ry="2" />
<text  x="1062.30" y="1135.5" ></text>
</g>
<g >
<title>std::lock_guard&lt;std::mutex&gt;::lock_guard (1 samples, 0.05%)</title><rect x="931.7" y="885" width="0.6" height="15.0" fill="rgb(212,68,43)" rx="2" ry="2" />
<text  x="934.70" y="895.5" ></text>
</g>
<g >
<title>apparmor_socket_sendmsg (1 samples, 0.05%)</title><rect x="1116.3" y="1157" width="0.6" height="15.0" fill="rgb(222,66,22)" rx="2" ry="2" />
<text  x="1119.29" y="1167.5" ></text>
</g>
<g >
<title>std::mutex::unlock (4 samples, 0.21%)</title><rect x="457.8" y="1189" width="2.5" height="15.0" fill="rgb(233,77,4)" rx="2" ry="2" />
<text  x="460.84" y="1199.5" ></text>
</g>
<g >
<title>rclcpp::memory_strategies::allocator_memory_strategy::AllocatorMemoryStrategy&lt;std::allocator&lt;void&gt; &gt;::number_of_ready_timers (3 samples, 0.16%)</title><rect x="1066.7" y="1141" width="1.9" height="15.0" fill="rgb(220,199,11)" rx="2" ry="2" />
<text  x="1069.73" y="1151.5" ></text>
</g>
<g >
<title>udp_rcv (8 samples, 0.42%)</title><rect x="1123.1" y="805" width="5.0" height="15.0" fill="rgb(248,227,13)" rx="2" ry="2" />
<text  x="1126.10" y="815.5" ></text>
</g>
<g >
<title>futex_wait_queue_me (6 samples, 0.31%)</title><rect x="1169.6" y="1061" width="3.7" height="15.0" fill="rgb(232,174,40)" rx="2" ry="2" />
<text  x="1172.56" y="1071.5" ></text>
</g>
<g >
<title>__pthread_cond_timedwait (6 samples, 0.31%)</title><rect x="16.8" y="1173" width="3.7" height="15.0" fill="rgb(232,156,10)" rx="2" ry="2" />
<text  x="19.81" y="1183.5" ></text>
</g>
<g >
<title>[librcl.so] (2 samples, 0.10%)</title><rect x="567.5" y="997" width="1.2" height="15.0" fill="rgb(248,107,7)" rx="2" ry="2" />
<text  x="570.48" y="1007.5" ></text>
</g>
<g >
<title>rclcpp::GenericTimer&lt;std::_Bind&lt;void  (3 samples, 0.16%)</title><rect x="143.2" y="1157" width="1.8" height="15.0" fill="rgb(249,8,17)" rx="2" ry="2" />
<text  x="146.18" y="1167.5" ></text>
</g>
<g >
<title>schedule_timeout (7 samples, 0.37%)</title><rect x="37.3" y="933" width="4.3" height="15.0" fill="rgb(247,31,16)" rx="2" ry="2" />
<text  x="40.25" y="943.5" ></text>
</g>
<g >
<title>copy_user_enhanced_fast_string (1 samples, 0.05%)</title><rect x="1188.1" y="1205" width="0.7" height="15.0" fill="rgb(207,92,29)" rx="2" ry="2" />
<text  x="1191.14" y="1215.5" ></text>
</g>
<g >
<title>_copy_from_user (1 samples, 0.05%)</title><rect x="1128.7" y="1157" width="0.6" height="15.0" fill="rgb(216,177,26)" rx="2" ry="2" />
<text  x="1131.68" y="1167.5" ></text>
</g>
<g >
<title>__cxxabiv1::__si_class_type_info::__do_dyncast (2 samples, 0.10%)</title><rect x="784.3" y="805" width="1.2" height="15.0" fill="rgb(236,114,6)" rx="2" ry="2" />
<text  x="787.28" y="815.5" ></text>
</g>
<g >
<title>ip_finish_output2 (1 samples, 0.05%)</title><rect x="1180.1" y="789" width="0.6" height="15.0" fill="rgb(237,44,46)" rx="2" ry="2" />
<text  x="1183.09" y="799.5" ></text>
</g>
<g >
<title>std::__detail::_Equal_helper&lt;rmw_cyclonedds_cpp::CDRWriter::CacheKey, std::pair&lt;rmw_cyclonedds_cpp::CDRWriter::CacheKey const, bool&gt;, std::__detail::_Select1st, std::equal_to&lt;rmw_cyclonedds_cpp::CDRWriter::CacheKey&gt;, unsigned long, true&gt;::_S_equals (2 samples, 0.10%)</title><rect x="838.8" y="725" width="1.2" height="15.0" fill="rgb(224,94,26)" rx="2" ry="2" />
<text  x="841.79" y="735.5" ></text>
</g>
<g >
<title>tev (94 samples, 4.93%)</title><rect x="1131.8" y="1285" width="58.2" height="15.0" fill="rgb(254,41,8)" rx="2" ry="2" />
<text  x="1134.77" y="1295.5" >tev</text>
</g>
<g >
<title>rclcpp::GenericTimer&lt;std::_Bind&lt;void  (683 samples, 35.85%)</title><rect x="555.1" y="1141" width="423.1" height="15.0" fill="rgb(245,158,39)" rx="2" ry="2" />
<text  x="558.09" y="1151.5" >rclcpp::GenericTimer&lt;std::_Bind&lt;void </text>
</g>
<g >
<title>ddsrt_hh_add.localalias (2 samples, 0.10%)</title><rect x="893.3" y="885" width="1.2" height="15.0" fill="rgb(234,94,15)" rx="2" ry="2" />
<text  x="896.30" y="895.5" ></text>
</g>
<g >
<title>native_queued_spin_lock_slowpath (3 samples, 0.16%)</title><rect x="329.6" y="933" width="1.9" height="15.0" fill="rgb(250,210,39)" rx="2" ry="2" />
<text  x="332.62" y="943.5" ></text>
</g>
<g >
<title>std::mutex::lock (1 samples, 0.05%)</title><rect x="906.9" y="837" width="0.6" height="15.0" fill="rgb(245,132,3)" rx="2" ry="2" />
<text  x="909.92" y="847.5" ></text>
</g>
<g >
<title>[librclcpp.so] (7 samples, 0.37%)</title><rect x="1077.3" y="1125" width="4.3" height="15.0" fill="rgb(217,211,47)" rx="2" ry="2" />
<text  x="1080.27" y="1135.5" ></text>
</g>
<g >
<title>ip_idents_reserve (1 samples, 0.05%)</title><rect x="634.4" y="629" width="0.6" height="15.0" fill="rgb(216,105,3)" rx="2" ry="2" />
<text  x="637.38" y="639.5" ></text>
</g>
<g >
<title>rmw_cyclonedds_cpp::CDRWriter::serialize_many (10 samples, 0.52%)</title><rect x="847.5" y="805" width="6.2" height="15.0" fill="rgb(245,191,26)" rx="2" ry="2" />
<text  x="850.46" y="815.5" ></text>
</g>
<g >
<title>__wake_up_common (37 samples, 1.94%)</title><rect x="689.5" y="197" width="22.9" height="15.0" fill="rgb(236,120,33)" rx="2" ry="2" />
<text  x="692.51" y="207.5" >_..</text>
</g>
<g >
<title>rclcpp::allocator::retyped_reallocate&lt;void*, std::allocator&lt;void*&gt; &gt; (4 samples, 0.21%)</title><rect x="1008.5" y="1125" width="2.5" height="15.0" fill="rgb(240,219,24)" rx="2" ry="2" />
<text  x="1011.51" y="1135.5" ></text>
</g>
<g >
<title>fput_many (1 samples, 0.05%)</title><rect x="744.0" y="741" width="0.6" height="15.0" fill="rgb(227,27,31)" rx="2" ry="2" />
<text  x="747.02" y="751.5" ></text>
</g>
<g >
<title>__dynamic_cast (2 samples, 0.10%)</title><rect x="784.3" y="821" width="1.2" height="15.0" fill="rgb(210,95,16)" rx="2" ry="2" />
<text  x="787.28" y="831.5" ></text>
</g>
<g >
<title>inet_lookup_ifaddr_rcu (8 samples, 0.42%)</title><rect x="640.6" y="597" width="4.9" height="15.0" fill="rgb(208,42,26)" rx="2" ry="2" />
<text  x="643.57" y="607.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;rmw_cyclonedds_cpp::CDRWriter::CacheKey, std::pair&lt;rmw_cyclonedds_cpp::CDRWriter::CacheKey const, bool&gt;, std::allocator&lt;std::pair&lt;rmw_cyclonedds_cpp::CDRWriter::CacheKey const, bool&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;rmw_cyclonedds_cpp::CDRWriter::CacheKey&gt;, rmw_cyclonedds_cpp::CDRWriter::CacheKey::Hash, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_find_before_node (5 samples, 0.26%)</title><rect x="808.4" y="709" width="3.1" height="15.0" fill="rgb(252,123,18)" rx="2" ry="2" />
<text  x="811.44" y="719.5" ></text>
</g>
<g >
<title>do_syscall_64 (24 samples, 1.26%)</title><rect x="354.4" y="1125" width="14.9" height="15.0" fill="rgb(245,81,1)" rx="2" ry="2" />
<text  x="357.40" y="1135.5" ></text>
</g>
<g >
<title>dequeue_task_fair (1 samples, 0.05%)</title><rect x="1183.8" y="1125" width="0.6" height="15.0" fill="rgb(250,18,43)" rx="2" ry="2" />
<text  x="1186.81" y="1135.5" ></text>
</g>
<g >
<title>[librmw_cyclonedds_cpp.so] (1 samples, 0.05%)</title><rect x="415.1" y="1093" width="0.6" height="15.0" fill="rgb(205,126,14)" rx="2" ry="2" />
<text  x="418.10" y="1103.5" ></text>
</g>
<g >
<title>perf_swevent_add (1 samples, 0.05%)</title><rect x="1115.0" y="1029" width="0.7" height="15.0" fill="rgb(217,198,17)" rx="2" ry="2" />
<text  x="1118.05" y="1039.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (2 samples, 0.10%)</title><rect x="852.4" y="773" width="1.3" height="15.0" fill="rgb(237,79,53)" rx="2" ry="2" />
<text  x="855.41" y="783.5" ></text>
</g>
<g >
<title>__ip_finish_output (117 samples, 6.14%)</title><rect x="661.0" y="581" width="72.5" height="15.0" fill="rgb(206,152,13)" rx="2" ry="2" />
<text  x="664.01" y="591.5" >__ip_fin..</text>
</g>
<g >
<title>serdata_rmw_to_ser_unref (5 samples, 0.26%)</title><rect x="755.8" y="901" width="3.1" height="15.0" fill="rgb(222,178,24)" rx="2" ry="2" />
<text  x="758.78" y="911.5" ></text>
</g>
<g >
<title>__strcmp_avx2 (1 samples, 0.05%)</title><rect x="829.5" y="821" width="0.6" height="15.0" fill="rgb(247,172,31)" rx="2" ry="2" />
<text  x="832.50" y="831.5" ></text>
</g>
<g >
<title>dds_handle_pin (13 samples, 0.68%)</title><rect x="384.8" y="1141" width="8.0" height="15.0" fill="rgb(231,150,7)" rx="2" ry="2" />
<text  x="387.75" y="1151.5" ></text>
</g>
<g >
<title>_int_free (1 samples, 0.05%)</title><rect x="970.1" y="949" width="0.6" height="15.0" fill="rgb(207,0,49)" rx="2" ry="2" />
<text  x="973.10" y="959.5" ></text>
</g>
<g >
<title>std::make_unique&lt;serdata_rmw, sertype_rmw const*&amp;, ddsi_serdata_kind&amp;&gt; (1 samples, 0.05%)</title><rect x="130.2" y="1253" width="0.6" height="15.0" fill="rgb(251,77,19)" rx="2" ry="2" />
<text  x="133.17" y="1263.5" ></text>
</g>
<g >
<title>tcache_get (1 samples, 0.05%)</title><rect x="1021.5" y="1093" width="0.6" height="15.0" fill="rgb(231,183,2)" rx="2" ry="2" />
<text  x="1024.52" y="1103.5" ></text>
</g>
<g >
<title>std::vector&lt;long, std::allocator&lt;long&gt; &gt;::size (8 samples, 0.42%)</title><rect x="501.8" y="1189" width="5.0" height="15.0" fill="rgb(205,69,30)" rx="2" ry="2" />
<text  x="504.82" y="1199.5" ></text>
</g>
<g >
<title>__GI___clock_gettime (1 samples, 0.05%)</title><rect x="155.6" y="1205" width="0.6" height="15.0" fill="rgb(248,162,11)" rx="2" ry="2" />
<text  x="158.56" y="1215.5" ></text>
</g>
<g >
<title>__wake_up_sync_key (6 samples, 0.31%)</title><rect x="1124.3" y="693" width="3.8" height="15.0" fill="rgb(224,212,19)" rx="2" ry="2" />
<text  x="1127.34" y="703.5" ></text>
</g>
<g >
<title>timerqueue_add (3 samples, 0.16%)</title><rect x="240.4" y="981" width="1.9" height="15.0" fill="rgb(209,134,41)" rx="2" ry="2" />
<text  x="243.43" y="991.5" ></text>
</g>
<g >
<title>dequeue_task_fair (15 samples, 0.79%)</title><rect x="249.7" y="981" width="9.3" height="15.0" fill="rgb(220,199,14)" rx="2" ry="2" />
<text  x="252.72" y="991.5" ></text>
</g>
<g >
<title>poll_schedule_timeout.constprop.0 (21 samples, 1.10%)</title><rect x="23.6" y="1045" width="13.0" height="15.0" fill="rgb(251,144,4)" rx="2" ry="2" />
<text  x="26.63" y="1055.5" ></text>
</g>
<g >
<title>[librclcpp.so] (1 samples, 0.05%)</title><rect x="983.7" y="1141" width="0.7" height="15.0" fill="rgb(242,25,39)" rx="2" ry="2" />
<text  x="986.73" y="1151.5" ></text>
</g>
<g >
<title>nn_xmsg_free (10 samples, 0.52%)</title><rect x="753.3" y="917" width="6.2" height="15.0" fill="rgb(229,180,6)" rx="2" ry="2" />
<text  x="756.31" y="927.5" ></text>
</g>
<g >
<title>[librmw_cyclonedds_cpp.so] (1 samples, 0.05%)</title><rect x="864.8" y="901" width="0.6" height="15.0" fill="rgb(249,64,20)" rx="2" ry="2" />
<text  x="867.80" y="911.5" ></text>
</g>
<g >
<title>security_socket_sendmsg (8 samples, 0.42%)</title><rect x="734.7" y="693" width="5.0" height="15.0" fill="rgb(228,113,23)" rx="2" ry="2" />
<text  x="737.72" y="703.5" ></text>
</g>
<g >
<title>rmw_cyclonedds_cpp::CDRWriter::serialize (12 samples, 0.63%)</title><rect x="797.9" y="789" width="7.4" height="15.0" fill="rgb(215,127,22)" rx="2" ry="2" />
<text  x="800.91" y="799.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;rmw_event_type_t, std::pair&lt;rmw_event_type_t const, unsigned int&gt;, std::allocator&lt;std::pair&lt;rmw_event_type_t const, unsigned int&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;rmw_event_type_t&gt;, std::hash&lt;rmw_event_type_t&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::count (52 samples, 2.73%)</title><rect x="404.6" y="1157" width="32.2" height="15.0" fill="rgb(237,4,18)" rx="2" ry="2" />
<text  x="407.57" y="1167.5" >st..</text>
</g>
<g >
<title>[libddsc.so.0.8.0] (1 samples, 0.05%)</title><rect x="132.6" y="1269" width="0.7" height="15.0" fill="rgb(243,157,17)" rx="2" ry="2" />
<text  x="135.65" y="1279.5" ></text>
</g>
<g >
<title>__x64_sys_sendmsg (1 samples, 0.05%)</title><rect x="1180.1" y="997" width="0.6" height="15.0" fill="rgb(242,21,19)" rx="2" ry="2" />
<text  x="1183.09" y="1007.5" ></text>
</g>
<g >
<title>psi_task_change (1 samples, 0.05%)</title><rect x="1112.6" y="1125" width="0.6" height="15.0" fill="rgb(231,28,11)" rx="2" ry="2" />
<text  x="1115.57" y="1135.5" ></text>
</g>
<g >
<title>tcache_put (1 samples, 0.05%)</title><rect x="970.1" y="933" width="0.6" height="15.0" fill="rgb(206,139,12)" rx="2" ry="2" />
<text  x="973.10" y="943.5" ></text>
</g>
<g >
<title>loopback_xmit (1 samples, 0.05%)</title><rect x="1128.1" y="965" width="0.6" height="15.0" fill="rgb(205,214,34)" rx="2" ry="2" />
<text  x="1131.06" y="975.5" ></text>
</g>
<g >
<title>do_futex (6 samples, 0.31%)</title><rect x="16.8" y="1077" width="3.7" height="15.0" fill="rgb(207,19,9)" rx="2" ry="2" />
<text  x="19.81" y="1087.5" ></text>
</g>
<g >
<title>ddsrt_sendmsg (235 samples, 12.34%)</title><rect x="603.4" y="853" width="145.6" height="15.0" fill="rgb(253,58,0)" rx="2" ry="2" />
<text  x="606.41" y="863.5" >ddsrt_sendmsg</text>
</g>
<g >
<title>dds_handle_unpin (4 samples, 0.21%)</title><rect x="215.6" y="1189" width="2.5" height="15.0" fill="rgb(243,126,45)" rx="2" ry="2" />
<text  x="218.65" y="1199.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.05%)</title><rect x="1180.1" y="709" width="0.6" height="15.0" fill="rgb(232,127,19)" rx="2" ry="2" />
<text  x="1183.09" y="719.5" ></text>
</g>
<g >
<title>udp_rcv (1 samples, 0.05%)</title><rect x="1180.1" y="565" width="0.6" height="15.0" fill="rgb(225,60,54)" rx="2" ry="2" />
<text  x="1183.09" y="575.5" ></text>
</g>
<g >
<title>rclcpp::spin (935 samples, 49.08%)</title><rect x="528.5" y="1221" width="579.1" height="15.0" fill="rgb(250,227,4)" rx="2" ry="2" />
<text  x="531.46" y="1231.5" >rclcpp::spin</text>
</g>
<g >
<title>rmw_cyclonedds_cpp::CDRWriter::get_serialized_size (107 samples, 5.62%)</title><rect x="762.0" y="901" width="66.3" height="15.0" fill="rgb(245,33,48)" rx="2" ry="2" />
<text  x="764.98" y="911.5" >rmw_cyc..</text>
</g>
<g >
<title>serialize_into_serdata_rmw_on_demand (1 samples, 0.05%)</title><rect x="931.7" y="901" width="0.6" height="15.0" fill="rgb(214,119,38)" rx="2" ry="2" />
<text  x="934.70" y="911.5" ></text>
</g>
<g >
<title>__pthread_mutex_unlock_usercnt (1 samples, 0.05%)</title><rect x="884.6" y="885" width="0.6" height="15.0" fill="rgb(209,63,9)" rx="2" ry="2" />
<text  x="887.62" y="895.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_ebo_helper&lt;0, std::__detail::_Select1st, true&gt;::_S_cget (1 samples, 0.05%)</title><rect x="122.1" y="1253" width="0.6" height="15.0" fill="rgb(228,56,3)" rx="2" ry="2" />
<text  x="125.12" y="1263.5" ></text>
</g>
<g >
<title>futex_wait (6 samples, 0.31%)</title><rect x="1183.8" y="1205" width="3.7" height="15.0" fill="rgb(247,229,12)" rx="2" ry="2" />
<text  x="1186.81" y="1215.5" ></text>
</g>
<g >
<title>native_sched_clock (1 samples, 0.05%)</title><rect x="342.6" y="917" width="0.6" height="15.0" fill="rgb(215,145,17)" rx="2" ry="2" />
<text  x="345.63" y="927.5" ></text>
</g>
<g >
<title>__cgroup_bpf_run_filter_skb (1 samples, 0.05%)</title><rect x="660.4" y="597" width="0.6" height="15.0" fill="rgb(212,53,4)" rx="2" ry="2" />
<text  x="663.39" y="607.5" ></text>
</g>
<g >
<title>std::__detail::_Hash_node_value_base&lt;std::pair&lt;rmw_cyclonedds_cpp::CDRWriter::CacheKey const, bool&gt; &gt;::_M_v (1 samples, 0.05%)</title><rect x="120.9" y="1253" width="0.6" height="15.0" fill="rgb(216,184,11)" rx="2" ry="2" />
<text  x="123.88" y="1263.5" ></text>
</g>
<g >
<title>std::__detail::_Map_base&lt;rmw_cyclonedds_cpp::CDRWriter::CacheKey, std::pair&lt;rmw_cyclonedds_cpp::CDRWriter::CacheKey const, bool&gt;, std::allocator&lt;std::pair&lt;rmw_cyclonedds_cpp::CDRWriter::CacheKey const, bool&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;rmw_cyclonedds_cpp::CDRWriter::CacheKey&gt;, rmw_cyclonedds_cpp::CDRWriter::CacheKey::Hash, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt;, true&gt;::at (6 samples, 0.31%)</title><rect x="836.9" y="789" width="3.7" height="15.0" fill="rgb(231,210,34)" rx="2" ry="2" />
<text  x="839.93" y="799.5" ></text>
</g>
<g >
<title>dq.builtins (10 samples, 0.52%)</title><rect x="10.0" y="1285" width="6.2" height="15.0" fill="rgb(241,97,32)" rx="2" ry="2" />
<text  x="13.00" y="1295.5" ></text>
</g>
<g >
<title>std::lock_guard&lt;std::mutex&gt;::~lock_guard (4 samples, 0.21%)</title><rect x="457.8" y="1205" width="2.5" height="15.0" fill="rgb(233,92,48)" rx="2" ry="2" />
<text  x="460.84" y="1215.5" ></text>
</g>
<g >
<title>writer_hbcontrol_create_heartbeat (6 samples, 0.31%)</title><rect x="935.4" y="901" width="3.7" height="15.0" fill="rgb(236,44,13)" rx="2" ry="2" />
<text  x="938.42" y="911.5" ></text>
</g>
<g >
<title>dqueue_thread (10 samples, 0.52%)</title><rect x="10.0" y="1205" width="6.2" height="15.0" fill="rgb(227,146,3)" rx="2" ry="2" />
<text  x="13.00" y="1215.5" ></text>
</g>
<g >
<title>rcl_timer_get_time_until_next_call (20 samples, 1.05%)</title><rect x="157.4" y="1221" width="12.4" height="15.0" fill="rgb(239,215,20)" rx="2" ry="2" />
<text  x="160.42" y="1231.5" ></text>
</g>
<g >
<title>__kmalloc_node_track_caller (5 samples, 0.26%)</title><rect x="625.1" y="549" width="3.1" height="15.0" fill="rgb(248,54,18)" rx="2" ry="2" />
<text  x="628.09" y="559.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;std_msgs::msg::MultiArrayDimension_&lt;std::allocator&lt;void&gt; &gt; &gt;::new_allocator (1 samples, 0.05%)</title><rect x="966.4" y="949" width="0.6" height="15.0" fill="rgb(219,13,30)" rx="2" ry="2" />
<text  x="969.39" y="959.5" ></text>
</g>
<g >
<title>[librcl.so] (1 samples, 0.05%)</title><rect x="1045.1" y="1093" width="0.6" height="15.0" fill="rgb(218,139,24)" rx="2" ry="2" />
<text  x="1048.06" y="1103.5" ></text>
</g>
<g >
<title>__libc_sendmsg (1 samples, 0.05%)</title><rect x="1180.1" y="1045" width="0.6" height="15.0" fill="rgb(220,14,34)" rx="2" ry="2" />
<text  x="1183.09" y="1055.5" ></text>
</g>
<g >
<title>pick_next_task_fair (1 samples, 0.05%)</title><rect x="1186.3" y="1141" width="0.6" height="15.0" fill="rgb(225,89,50)" rx="2" ry="2" />
<text  x="1189.28" y="1151.5" ></text>
</g>
<g >
<title>update_load_avg (2 samples, 0.10%)</title><rect x="1111.3" y="1093" width="1.3" height="15.0" fill="rgb(212,161,34)" rx="2" ry="2" />
<text  x="1114.33" y="1103.5" ></text>
</g>
<g >
<title>futex_wake (1 samples, 0.05%)</title><rect x="42.2" y="1077" width="0.6" height="15.0" fill="rgb(213,66,29)" rx="2" ry="2" />
<text  x="45.21" y="1087.5" ></text>
</g>
<g >
<title>[librmw_cyclonedds_cpp.so] (3 samples, 0.16%)</title><rect x="433.7" y="1077" width="1.8" height="15.0" fill="rgb(235,229,35)" rx="2" ry="2" />
<text  x="436.69" y="1087.5" ></text>
</g>
<g >
<title>addrset_eq_onesidederr (2 samples, 0.10%)</title><rect x="928.0" y="901" width="1.2" height="15.0" fill="rgb(226,166,54)" rx="2" ry="2" />
<text  x="930.98" y="911.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;byte, std::default_delete&lt;byte []&gt; &gt;::__uniq_ptr_impl (6 samples, 0.31%)</title><rect x="868.5" y="869" width="3.7" height="15.0" fill="rgb(245,55,23)" rx="2" ry="2" />
<text  x="871.52" y="879.5" ></text>
</g>
<g >
<title>do_syscall_64 (6 samples, 0.31%)</title><rect x="16.8" y="1109" width="3.7" height="15.0" fill="rgb(229,0,22)" rx="2" ry="2" />
<text  x="19.81" y="1119.5" ></text>
</g>
<g >
<title>[librcutils.so] (5 samples, 0.26%)</title><rect x="161.8" y="1173" width="3.1" height="15.0" fill="rgb(240,135,24)" rx="2" ry="2" />
<text  x="164.76" y="1183.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;rmw_cyclonedds_cpp::CDRWriter::CacheKey, std::pair&lt;rmw_cyclonedds_cpp::CDRWriter::CacheKey const, bool&gt;, std::allocator&lt;std::pair&lt;rmw_cyclonedds_cpp::CDRWriter::CacheKey const, bool&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;rmw_cyclonedds_cpp::CDRWriter::CacheKey&gt;, rmw_cyclonedds_cpp::CDRWriter::CacheKey::Hash, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_find_before_node (3 samples, 0.16%)</title><rect x="781.2" y="789" width="1.8" height="15.0" fill="rgb(208,91,17)" rx="2" ry="2" />
<text  x="784.18" y="799.5" ></text>
</g>
<g >
<title>__pthread_cond_wait_common (45 samples, 2.36%)</title><rect x="1140.4" y="1157" width="27.9" height="15.0" fill="rgb(211,164,53)" rx="2" ry="2" />
<text  x="1143.45" y="1167.5" >_..</text>
</g>
<g >
<title>std::unordered_map&lt;rmw_cyclonedds_cpp::CDRWriter::CacheKey, bool, rmw_cyclonedds_cpp::CDRWriter::CacheKey::Hash, std::equal_to&lt;rmw_cyclonedds_cpp::CDRWriter::CacheKey&gt;, std::allocator&lt;std::pair&lt;rmw_cyclonedds_cpp::CDRWriter::CacheKey const, bool&gt; &gt; &gt;::at (6 samples, 0.31%)</title><rect x="794.2" y="773" width="3.7" height="15.0" fill="rgb(228,15,9)" rx="2" ry="2" />
<text  x="797.19" y="783.5" ></text>
</g>
<g >
<title>std::_Bind&lt;void  (3 samples, 0.16%)</title><rect x="143.2" y="1141" width="1.8" height="15.0" fill="rgb(248,143,19)" rx="2" ry="2" />
<text  x="146.18" y="1151.5" ></text>
</g>
<g >
<title>ddsi_wctime_to_ddsi_time (2 samples, 0.10%)</title><rect x="908.8" y="901" width="1.2" height="15.0" fill="rgb(242,53,1)" rx="2" ry="2" />
<text  x="911.78" y="911.5" ></text>
</g>
<g >
<title>serdata_rmw::serdata_rmw (11 samples, 0.58%)</title><rect x="865.4" y="901" width="6.8" height="15.0" fill="rgb(232,202,7)" rx="2" ry="2" />
<text  x="868.42" y="911.5" ></text>
</g>
<g >
<title>ddsrt_avl_lookup_pred_eq (1 samples, 0.05%)</title><rect x="892.7" y="885" width="0.6" height="15.0" fill="rgb(219,67,8)" rx="2" ry="2" />
<text  x="895.68" y="895.5" ></text>
</g>
<g >
<title>__fget_light (4 samples, 0.21%)</title><rect x="745.9" y="725" width="2.5" height="15.0" fill="rgb(252,90,44)" rx="2" ry="2" />
<text  x="748.87" y="735.5" ></text>
</g>
<g >
<title>std::__uninitialized_default_n_a&lt;long*, unsigned long, long&gt; (9 samples, 0.47%)</title><rect x="486.3" y="1173" width="5.6" height="15.0" fill="rgb(241,55,53)" rx="2" ry="2" />
<text  x="489.34" y="1183.5" ></text>
</g>
<g >
<title>ddsi_udp_conn_read (8 samples, 0.42%)</title><rect x="37.3" y="1173" width="4.9" height="15.0" fill="rgb(254,145,1)" rx="2" ry="2" />
<text  x="40.25" y="1183.5" ></text>
</g>
<g >
<title>entidx_lookup_writer_guid (1 samples, 0.05%)</title><rect x="1175.1" y="1189" width="0.7" height="15.0" fill="rgb(211,181,29)" rx="2" ry="2" />
<text  x="1178.13" y="1199.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;rmw_cyclonedds_cpp::CDRWriter::CacheKey, std::pair&lt;rmw_cyclonedds_cpp::CDRWriter::CacheKey const, bool&gt;, std::allocator&lt;std::pair&lt;rmw_cyclonedds_cpp::CDRWriter::CacheKey const, bool&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;rmw_cyclonedds_cpp::CDRWriter::CacheKey&gt;, rmw_cyclonedds_cpp::CDRWriter::CacheKey::Hash, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_find_node (4 samples, 0.21%)</title><rect x="794.2" y="741" width="2.5" height="15.0" fill="rgb(224,118,19)" rx="2" ry="2" />
<text  x="797.19" y="751.5" ></text>
</g>
<g >
<title>os_startRoutineWrapper (10 samples, 0.52%)</title><rect x="37.3" y="1237" width="6.1" height="15.0" fill="rgb(218,108,35)" rx="2" ry="2" />
<text  x="40.25" y="1247.5" ></text>
</g>
<g >
<title>rclcpp::memory_strategies::allocator_memory_strategy::AllocatorMemoryStrategy&lt;std::allocator&lt;void&gt; &gt;::get_next_service (1 samples, 0.05%)</title><rect x="986.2" y="1141" width="0.6" height="15.0" fill="rgb(244,188,20)" rx="2" ry="2" />
<text  x="989.21" y="1151.5" ></text>
</g>
<g >
<title>encode_payload (1 samples, 0.05%)</title><rect x="915.6" y="901" width="0.6" height="15.0" fill="rgb(219,80,31)" rx="2" ry="2" />
<text  x="918.60" y="911.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (1 samples, 0.05%)</title><rect x="11.2" y="1157" width="0.7" height="15.0" fill="rgb(212,76,48)" rx="2" ry="2" />
<text  x="14.24" y="1167.5" ></text>
</g>
<g >
<title>std::unordered_map&lt;rmw_cyclonedds_cpp::CDRWriter::CacheKey, bool, rmw_cyclonedds_cpp::CDRWriter::CacheKey::Hash, std::equal_to&lt;rmw_cyclonedds_cpp::CDRWriter::CacheKey&gt;, std::allocator&lt;std::pair&lt;rmw_cyclonedds_cpp::CDRWriter::CacheKey const, bool&gt; &gt; &gt;::at (2 samples, 0.10%)</title><rect x="848.7" y="757" width="1.2" height="15.0" fill="rgb(234,103,23)" rx="2" ry="2" />
<text  x="851.70" y="767.5" ></text>
</g>
<g >
<title>do_futex (1 samples, 0.05%)</title><rect x="20.5" y="1221" width="0.6" height="15.0" fill="rgb(207,156,9)" rx="2" ry="2" />
<text  x="23.53" y="1231.5" ></text>
</g>
<g >
<title>ctx_sched_in (24 samples, 1.26%)</title><rect x="268.3" y="949" width="14.9" height="15.0" fill="rgb(238,62,25)" rx="2" ry="2" />
<text  x="271.30" y="959.5" ></text>
</g>
<g >
<title>perf_pmu_enable.part.0 (6 samples, 0.31%)</title><rect x="12.5" y="965" width="3.7" height="15.0" fill="rgb(240,87,35)" rx="2" ry="2" />
<text  x="15.48" y="975.5" ></text>
</g>
<g >
<title>std_msgs::msg::MultiArrayLayout_&lt;std::allocator&lt;void&gt; &gt;::~MultiArrayLayout_ (1 samples, 0.05%)</title><rect x="973.8" y="1045" width="0.6" height="15.0" fill="rgb(254,17,22)" rx="2" ry="2" />
<text  x="976.82" y="1055.5" ></text>
</g>
<g >
<title>[librmw_cyclonedds_cpp.so] (2 samples, 0.10%)</title><rect x="430.0" y="1109" width="1.2" height="15.0" fill="rgb(206,143,7)" rx="2" ry="2" />
<text  x="432.97" y="1119.5" ></text>
</g>
<g >
<title>recv_thread (26 samples, 1.36%)</title><rect x="21.1" y="1205" width="16.2" height="15.0" fill="rgb(211,46,30)" rx="2" ry="2" />
<text  x="24.15" y="1215.5" ></text>
</g>
<g >
<title>rclcpp::CallbackGroup::automatically_add_to_executor_with_node (1 samples, 0.05%)</title><rect x="1022.1" y="1125" width="0.7" height="15.0" fill="rgb(251,211,10)" rx="2" ry="2" />
<text  x="1025.14" y="1135.5" ></text>
</g>
<g >
<title>std::__detail::_Hash_code_base&lt;rmw_cyclonedds_cpp::CDRWriter::CacheKey, std::pair&lt;rmw_cyclonedds_cpp::CDRWriter::CacheKey const, bool&gt;, std::__detail::_Select1st, rmw_cyclonedds_cpp::CDRWriter::CacheKey::Hash, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, true&gt;::_M_bucket_index (1 samples, 0.05%)</title><rect x="808.4" y="677" width="0.7" height="15.0" fill="rgb(208,8,38)" rx="2" ry="2" />
<text  x="811.44" y="687.5" ></text>
</g>
<g >
<title>udp_queue_rcv_skb (51 samples, 2.68%)</title><rect x="687.0" y="293" width="31.6" height="15.0" fill="rgb(242,196,8)" rx="2" ry="2" />
<text  x="690.03" y="303.5" >ud..</text>
</g>
<g >
<title>std::_Hashtable&lt;rmw_cyclonedds_cpp::CDRWriter::CacheKey, std::pair&lt;rmw_cyclonedds_cpp::CDRWriter::CacheKey const, bool&gt;, std::allocator&lt;std::pair&lt;rmw_cyclonedds_cpp::CDRWriter::CacheKey const, bool&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;rmw_cyclonedds_cpp::CDRWriter::CacheKey&gt;, rmw_cyclonedds_cpp::CDRWriter::CacheKey::Hash, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_find_before_node (5 samples, 0.26%)</title><rect x="837.5" y="757" width="3.1" height="15.0" fill="rgb(221,206,20)" rx="2" ry="2" />
<text  x="840.55" y="767.5" ></text>
</g>
<g >
<title>__sched_text_start (6 samples, 0.31%)</title><rect x="1169.6" y="1029" width="3.7" height="15.0" fill="rgb(230,52,22)" rx="2" ry="2" />
<text  x="1172.56" y="1039.5" ></text>
</g>
<g >
<title>[libddsc.so.0.8.0] (2 samples, 0.10%)</title><rect x="586.7" y="917" width="1.2" height="15.0" fill="rgb(225,218,19)" rx="2" ry="2" />
<text  x="589.68" y="927.5" ></text>
</g>
<g >
<title>rcl_trigger_guard_condition (22 samples, 1.15%)</title><rect x="537.7" y="1157" width="13.7" height="15.0" fill="rgb(215,48,46)" rx="2" ry="2" />
<text  x="540.75" y="1167.5" ></text>
</g>
<g >
<title>rmw_cyclonedds_cpp::CDRWriter::lookup_trivially_serialized (6 samples, 0.31%)</title><rect x="836.9" y="821" width="3.7" height="15.0" fill="rgb(211,80,47)" rx="2" ry="2" />
<text  x="839.93" y="831.5" ></text>
</g>
<g >
<title>std::__detail::_Map_base&lt;rmw_cyclonedds_cpp::CDRWriter::CacheKey, std::pair&lt;rmw_cyclonedds_cpp::CDRWriter::CacheKey const, bool&gt;, std::allocator&lt;std::pair&lt;rmw_cyclonedds_cpp::CDRWriter::CacheKey const, bool&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;rmw_cyclonedds_cpp::CDRWriter::CacheKey&gt;, rmw_cyclonedds_cpp::CDRWriter::CacheKey::Hash, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt;, true&gt;::at (3 samples, 0.16%)</title><rect x="844.4" y="757" width="1.8" height="15.0" fill="rgb(249,68,8)" rx="2" ry="2" />
<text  x="847.36" y="767.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (33 samples, 1.73%)</title><rect x="1108.9" y="1269" width="20.4" height="15.0" fill="rgb(247,63,15)" rx="2" ry="2" />
<text  x="1111.86" y="1279.5" ></text>
</g>
<g >
<title>std::__detail::_Hash_code_base&lt;rmw_cyclonedds_cpp::CDRWriter::CacheKey, std::pair&lt;rmw_cyclonedds_cpp::CDRWriter::CacheKey const, bool&gt;, std::__detail::_Select1st, rmw_cyclonedds_cpp::CDRWriter::CacheKey::Hash, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, true&gt;::_M_bucket_index (1 samples, 0.05%)</title><rect x="780.6" y="789" width="0.6" height="15.0" fill="rgb(254,105,40)" rx="2" ry="2" />
<text  x="783.56" y="799.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;rmw_cyclonedds_cpp::CDRWriter::CacheKey, std::pair&lt;rmw_cyclonedds_cpp::CDRWriter::CacheKey const, bool&gt;, std::allocator&lt;std::pair&lt;rmw_cyclonedds_cpp::CDRWriter::CacheKey const, bool&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;rmw_cyclonedds_cpp::CDRWriter::CacheKey&gt;, rmw_cyclonedds_cpp::CDRWriter::CacheKey::Hash, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_find_before_node (3 samples, 0.16%)</title><rect x="794.8" y="725" width="1.9" height="15.0" fill="rgb(251,203,48)" rx="2" ry="2" />
<text  x="797.81" y="735.5" ></text>
</g>
<g >
<title>__GI___pthread_mutex_lock (7 samples, 0.37%)</title><rect x="1168.9" y="1173" width="4.4" height="15.0" fill="rgb(246,217,23)" rx="2" ry="2" />
<text  x="1171.94" y="1183.5" ></text>
</g>
<g >
<title>rclcpp::memory_strategies::allocator_memory_strategy::AllocatorMemoryStrategy&lt;std::allocator&lt;void&gt; &gt;::get_next_waitable (2 samples, 0.10%)</title><rect x="988.7" y="1141" width="1.2" height="15.0" fill="rgb(225,121,9)" rx="2" ry="2" />
<text  x="991.69" y="1151.5" ></text>
</g>
<g >
<title>futex_wait (182 samples, 9.55%)</title><rect x="236.7" y="1061" width="112.7" height="15.0" fill="rgb(245,7,41)" rx="2" ry="2" />
<text  x="239.71" y="1071.5" >futex_wait</text>
</g>
<g >
<title>rcl_timer_get_time_until_next_call (5 samples, 0.26%)</title><rect x="153.1" y="1237" width="3.1" height="15.0" fill="rgb(216,31,40)" rx="2" ry="2" />
<text  x="156.09" y="1247.5" ></text>
</g>
<g >
<title>__GI___pthread_mutex_lock (1 samples, 0.05%)</title><rect x="1058.7" y="1125" width="0.6" height="15.0" fill="rgb(242,186,10)" rx="2" ry="2" />
<text  x="1061.68" y="1135.5" ></text>
</g>
<g >
<title>std::__invoke&lt;void  (675 samples, 35.43%)</title><rect x="556.3" y="1093" width="418.1" height="15.0" fill="rgb(252,89,22)" rx="2" ry="2" />
<text  x="559.33" y="1103.5" >std::__invoke&lt;void </text>
</g>
<g >
<title>do_softirq_own_stack (81 samples, 4.25%)</title><rect x="672.2" y="517" width="50.1" height="15.0" fill="rgb(218,134,6)" rx="2" ry="2" />
<text  x="675.16" y="527.5" >do_so..</text>
</g>
<g >
<title>ddsrt_time_monotonic (1 samples, 0.05%)</title><rect x="100.4" y="1253" width="0.7" height="15.0" fill="rgb(208,5,35)" rx="2" ry="2" />
<text  x="103.44" y="1263.5" ></text>
</g>
<g >
<title>rclcpp::memory_strategy::MemoryStrategy::get_group_by_timer (6 samples, 0.31%)</title><rect x="1093.4" y="1141" width="3.7" height="15.0" fill="rgb(240,223,44)" rx="2" ry="2" />
<text  x="1096.37" y="1151.5" ></text>
</g>
<g >
<title>visit_groups_merge (18 samples, 0.94%)</title><rect x="272.0" y="933" width="11.2" height="15.0" fill="rgb(230,14,41)" rx="2" ry="2" />
<text  x="275.02" y="943.5" ></text>
</g>
<g >
<title>inet_sendmsg (2 samples, 0.10%)</title><rect x="1188.8" y="1157" width="1.2" height="15.0" fill="rgb(224,142,34)" rx="2" ry="2" />
<text  x="1191.76" y="1167.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;long, std::allocator&lt;long&gt; &gt;::_M_get_Tp_allocator (2 samples, 0.10%)</title><rect x="494.4" y="1157" width="1.2" height="15.0" fill="rgb(232,185,10)" rx="2" ry="2" />
<text  x="497.39" y="1167.5" ></text>
</g>
<g >
<title>nn_xmsg_setdstN (1 samples, 0.05%)</title><rect x="921.2" y="917" width="0.6" height="15.0" fill="rgb(218,80,6)" rx="2" ry="2" />
<text  x="924.17" y="927.5" ></text>
</g>
<g >
<title>[librmw_cyclonedds_cpp.so] (2 samples, 0.10%)</title><rect x="411.4" y="1125" width="1.2" height="15.0" fill="rgb(210,150,12)" rx="2" ry="2" />
<text  x="414.39" y="1135.5" ></text>
</g>
<g >
<title>std::__detail::_Map_base&lt;rmw_cyclonedds_cpp::CDRWriter::CacheKey, std::pair&lt;rmw_cyclonedds_cpp::CDRWriter::CacheKey const, bool&gt;, std::allocator&lt;std::pair&lt;rmw_cyclonedds_cpp::CDRWriter::CacheKey const, bool&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;rmw_cyclonedds_cpp::CDRWriter::CacheKey&gt;, rmw_cyclonedds_cpp::CDRWriter::CacheKey::Hash, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt;, true&gt;::at (6 samples, 0.31%)</title><rect x="794.2" y="757" width="3.7" height="15.0" fill="rgb(233,102,1)" rx="2" ry="2" />
<text  x="797.19" y="767.5" ></text>
</g>
<g >
<title>[[stack]] (39 samples, 2.05%)</title><rect x="107.9" y="1269" width="24.1" height="15.0" fill="rgb(247,82,31)" rx="2" ry="2" />
<text  x="110.87" y="1279.5" >[..</text>
</g>
<g >
<title>[librmw_cyclonedds_cpp.so] (1 samples, 0.05%)</title><rect x="396.5" y="1173" width="0.6" height="15.0" fill="rgb(223,26,5)" rx="2" ry="2" />
<text  x="399.52" y="1183.5" ></text>
</g>
<g >
<title>__ksize (1 samples, 0.05%)</title><rect x="628.2" y="565" width="0.6" height="15.0" fill="rgb(227,32,31)" rx="2" ry="2" />
<text  x="631.18" y="575.5" ></text>
</g>
<g >
<title>futex_wait (7 samples, 0.37%)</title><rect x="11.9" y="1061" width="4.3" height="15.0" fill="rgb(214,163,33)" rx="2" ry="2" />
<text  x="14.86" y="1071.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::_M_check_len (2 samples, 0.10%)</title><rect x="954.6" y="1013" width="1.3" height="15.0" fill="rgb(246,84,39)" rx="2" ry="2" />
<text  x="957.62" y="1023.5" ></text>
</g>
<g >
<title>nn_freelist_pushmany (4 samples, 0.21%)</title><rect x="895.8" y="869" width="2.5" height="15.0" fill="rgb(220,34,1)" rx="2" ry="2" />
<text  x="898.77" y="879.5" ></text>
</g>
<g >
<title>scheduler_tick (1 samples, 0.05%)</title><rect x="321.6" y="869" width="0.6" height="15.0" fill="rgb(237,131,2)" rx="2" ry="2" />
<text  x="324.57" y="879.5" ></text>
</g>
<g >
<title>ddsrt_select (23 samples, 1.21%)</title><rect x="23.0" y="1173" width="14.3" height="15.0" fill="rgb(221,23,34)" rx="2" ry="2" />
<text  x="26.01" y="1183.5" ></text>
</g>
<g >
<title>__netif_receive_skb_one_core (11 samples, 0.58%)</title><rect x="1121.2" y="901" width="6.9" height="15.0" fill="rgb(214,179,7)" rx="2" ry="2" />
<text  x="1124.24" y="911.5" ></text>
</g>
<g >
<title>__libc_recvmsg (8 samples, 0.42%)</title><rect x="37.3" y="1141" width="4.9" height="15.0" fill="rgb(233,200,47)" rx="2" ry="2" />
<text  x="40.25" y="1151.5" ></text>
</g>
<g >
<title>ddsi_tkmap_find (8 samples, 0.42%)</title><rect x="586.1" y="933" width="4.9" height="15.0" fill="rgb(206,127,16)" rx="2" ry="2" />
<text  x="589.06" y="943.5" ></text>
</g>
<g >
<title>recv_thread (10 samples, 0.52%)</title><rect x="37.3" y="1205" width="6.1" height="15.0" fill="rgb(219,174,39)" rx="2" ry="2" />
<text  x="40.25" y="1215.5" ></text>
</g>
<g >
<title>_raw_spin_lock_irqsave (4 samples, 0.21%)</title><rect x="692.0" y="117" width="2.5" height="15.0" fill="rgb(252,172,47)" rx="2" ry="2" />
<text  x="694.98" y="127.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_base&lt;rmw_cyclonedds_cpp::CDRWriter::CacheKey, std::pair&lt;rmw_cyclonedds_cpp::CDRWriter::CacheKey const, bool&gt;, std::__detail::_Select1st, std::equal_to&lt;rmw_cyclonedds_cpp::CDRWriter::CacheKey&gt;, rmw_cyclonedds_cpp::CDRWriter::CacheKey::Hash, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_eq (1 samples, 0.05%)</title><rect x="840.0" y="725" width="0.6" height="15.0" fill="rgb(244,219,27)" rx="2" ry="2" />
<text  x="843.03" y="735.5" ></text>
</g>
<g >
<title>__GI___libc_free (1 samples, 0.05%)</title><rect x="1008.5" y="1109" width="0.6" height="15.0" fill="rgb(225,163,40)" rx="2" ry="2" />
<text  x="1011.51" y="1119.5" ></text>
</g>
<g >
<title>__strcmp_avx2 (5 samples, 0.26%)</title><rect x="776.8" y="821" width="3.1" height="15.0" fill="rgb(240,2,49)" rx="2" ry="2" />
<text  x="779.85" y="831.5" ></text>
</g>
<g >
<title>ip_finish_output (1 samples, 0.05%)</title><rect x="1180.1" y="821" width="0.6" height="15.0" fill="rgb(249,20,21)" rx="2" ry="2" />
<text  x="1183.09" y="831.5" ></text>
</g>
<g >
<title>rcutils_string_map_getn (2 samples, 0.10%)</title><rect x="524.7" y="1253" width="1.3" height="15.0" fill="rgb(253,128,0)" rx="2" ry="2" />
<text  x="527.74" y="1263.5" ></text>
</g>
<g >
<title>__GI___pthread_mutex_lock (1 samples, 0.05%)</title><rect x="999.2" y="1141" width="0.6" height="15.0" fill="rgb(251,100,39)" rx="2" ry="2" />
<text  x="1002.22" y="1151.5" ></text>
</g>
<g >
<title>std::__uninitialized_default_n_1&lt;true&gt;::__uninit_default_n&lt;long*, unsigned long&gt; (7 samples, 0.37%)</title><rect x="487.0" y="1141" width="4.3" height="15.0" fill="rgb(217,67,26)" rx="2" ry="2" />
<text  x="489.96" y="1151.5" ></text>
</g>
<g >
<title>psi_task_change (13 samples, 0.68%)</title><rect x="701.9" y="85" width="8.0" height="15.0" fill="rgb(242,29,39)" rx="2" ry="2" />
<text  x="704.90" y="95.5" ></text>
</g>
<g >
<title>std::min&lt;unsigned long&gt; (1 samples, 0.05%)</title><rect x="130.8" y="1253" width="0.6" height="15.0" fill="rgb(230,133,22)" rx="2" ry="2" />
<text  x="133.79" y="1263.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;byte, std::default_delete&lt;byte []&gt; &gt;::__uniq_ptr_impl (1 samples, 0.05%)</title><rect x="127.7" y="1253" width="0.6" height="15.0" fill="rgb(213,107,2)" rx="2" ry="2" />
<text  x="130.69" y="1263.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;rmw_event_type_t, std::pair&lt;rmw_event_type_t const, unsigned int&gt;, std::allocator&lt;std::pair&lt;rmw_event_type_t const, unsigned int&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;rmw_event_type_t&gt;, std::hash&lt;rmw_event_type_t&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_find_node (4 samples, 0.21%)</title><rect x="398.4" y="1141" width="2.5" height="15.0" fill="rgb(213,85,4)" rx="2" ry="2" />
<text  x="401.38" y="1151.5" ></text>
</g>
<g >
<title>enqueue_hrtimer (3 samples, 0.16%)</title><rect x="240.4" y="997" width="1.9" height="15.0" fill="rgb(248,87,33)" rx="2" ry="2" />
<text  x="243.43" y="1007.5" ></text>
</g>
<g >
<title>visit_groups_merge (3 samples, 0.16%)</title><rect x="1113.8" y="1077" width="1.9" height="15.0" fill="rgb(242,121,4)" rx="2" ry="2" />
<text  x="1116.81" y="1087.5" ></text>
</g>
<g >
<title>receiver_wake_function (35 samples, 1.84%)</title><rect x="690.7" y="181" width="21.7" height="15.0" fill="rgb(219,188,4)" rx="2" ry="2" />
<text  x="693.75" y="191.5" >r..</text>
</g>
<g >
<title>perf_pmu_enable.part.0 (1 samples, 0.05%)</title><rect x="20.5" y="1109" width="0.6" height="15.0" fill="rgb(238,87,32)" rx="2" ry="2" />
<text  x="23.53" y="1119.5" ></text>
</g>
<g >
<title>rmw_cyclonedds_cpp::CDRWriter::serialize (1 samples, 0.05%)</title><rect x="846.2" y="789" width="0.6" height="15.0" fill="rgb(238,132,35)" rx="2" ry="2" />
<text  x="849.22" y="799.5" ></text>
</g>
<g >
<title>os_startRoutineWrapper (7 samples, 0.37%)</title><rect x="16.2" y="1237" width="4.3" height="15.0" fill="rgb(236,172,45)" rx="2" ry="2" />
<text  x="19.19" y="1247.5" ></text>
</g>
<g >
<title>__x64_sys_recvmsg (8 samples, 0.42%)</title><rect x="37.3" y="1077" width="4.9" height="15.0" fill="rgb(242,82,50)" rx="2" ry="2" />
<text  x="40.25" y="1087.5" ></text>
</g>
<g >
<title>sock_sendmsg (20 samples, 1.05%)</title><rect x="1116.3" y="1173" width="12.4" height="15.0" fill="rgb(238,128,16)" rx="2" ry="2" />
<text  x="1119.29" y="1183.5" ></text>
</g>
<g >
<title>rmw_cyclonedds_cpp::DataCursor::put_bytes (1 samples, 0.05%)</title><rect x="118.4" y="1253" width="0.6" height="15.0" fill="rgb(228,78,29)" rx="2" ry="2" />
<text  x="121.40" y="1263.5" ></text>
</g>
<g >
<title>std::__niter_base&lt;int*&gt; (2 samples, 0.10%)</title><rect x="956.5" y="965" width="1.2" height="15.0" fill="rgb(252,93,27)" rx="2" ry="2" />
<text  x="959.48" y="975.5" ></text>
</g>
<g >
<title>__gthread_mutex_lock (1 samples, 0.05%)</title><rect x="109.7" y="1253" width="0.6" height="15.0" fill="rgb(206,207,54)" rx="2" ry="2" />
<text  x="112.73" y="1263.5" ></text>
</g>
<g >
<title>sock_alloc_send_pskb (1 samples, 0.05%)</title><rect x="624.5" y="629" width="0.6" height="15.0" fill="rgb(208,59,26)" rx="2" ry="2" />
<text  x="627.47" y="639.5" ></text>
</g>
<g >
<title>guid_prefix_eq (3 samples, 0.16%)</title><rect x="929.2" y="901" width="1.9" height="15.0" fill="rgb(245,146,3)" rx="2" ry="2" />
<text  x="932.22" y="911.5" ></text>
</g>
<g >
<title>ddsrt_mutex_lock (4 samples, 0.21%)</title><rect x="392.8" y="1157" width="2.5" height="15.0" fill="rgb(214,227,42)" rx="2" ry="2" />
<text  x="395.80" y="1167.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;rmw_cyclonedds_cpp::CDRWriter::CacheKey, std::pair&lt;rmw_cyclonedds_cpp::CDRWriter::CacheKey const, bool&gt;, std::allocator&lt;std::pair&lt;rmw_cyclonedds_cpp::CDRWriter::CacheKey const, bool&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;rmw_cyclonedds_cpp::CDRWriter::CacheKey&gt;, rmw_cyclonedds_cpp::CDRWriter::CacheKey::Hash, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_find_before_node (1 samples, 0.05%)</title><rect x="812.2" y="709" width="0.6" height="15.0" fill="rgb(229,117,6)" rx="2" ry="2" />
<text  x="815.15" y="719.5" ></text>
</g>
<g >
<title>put_prev_task_fair (2 samples, 0.10%)</title><rect x="344.5" y="981" width="1.2" height="15.0" fill="rgb(214,125,52)" rx="2" ry="2" />
<text  x="347.49" y="991.5" ></text>
</g>
<g >
<title>futex_wait_setup (2 samples, 0.10%)</title><rect x="1165.2" y="1045" width="1.3" height="15.0" fill="rgb(240,34,23)" rx="2" ry="2" />
<text  x="1168.22" y="1055.5" ></text>
</g>
<g >
<title>ieee80211_subif_start_xmit (1 samples, 0.05%)</title><rect x="1177.6" y="757" width="0.6" height="15.0" fill="rgb(217,227,12)" rx="2" ry="2" />
<text  x="1180.61" y="767.5" ></text>
</g>
<g >
<title>__wake_up_sync_key (39 samples, 2.05%)</title><rect x="689.5" y="229" width="24.2" height="15.0" fill="rgb(230,57,43)" rx="2" ry="2" />
<text  x="692.51" y="239.5" >_..</text>
</g>
<g >
<title>ip_finish_output2 (114 samples, 5.98%)</title><rect x="662.3" y="565" width="70.6" height="15.0" fill="rgb(232,40,48)" rx="2" ry="2" />
<text  x="665.25" y="575.5" >ip_fini..</text>
</g>
<g >
<title>__GI___clone (7 samples, 0.37%)</title><rect x="16.2" y="1269" width="4.3" height="15.0" fill="rgb(254,130,35)" rx="2" ry="2" />
<text  x="19.19" y="1279.5" ></text>
</g>
<g >
<title>rclcpp::Executor::execute_timer (1 samples, 0.05%)</title><rect x="551.4" y="1157" width="0.6" height="15.0" fill="rgb(217,210,29)" rx="2" ry="2" />
<text  x="554.38" y="1167.5" ></text>
</g>
<g >
<title>____sys_recvmsg (8 samples, 0.42%)</title><rect x="37.3" y="1029" width="4.9" height="15.0" fill="rgb(219,204,9)" rx="2" ry="2" />
<text  x="40.25" y="1039.5" ></text>
</g>
<g >
<title>[libddsc.so.0.8.0] (9 samples, 0.47%)</title><rect x="205.7" y="1189" width="5.6" height="15.0" fill="rgb(211,165,48)" rx="2" ry="2" />
<text  x="208.74" y="1199.5" ></text>
</g>
<g >
<title>udp_queue_rcv_skb (1 samples, 0.05%)</title><rect x="1180.1" y="517" width="0.6" height="15.0" fill="rgb(249,82,5)" rx="2" ry="2" />
<text  x="1183.09" y="527.5" ></text>
</g>
<g >
<title>futex_abstimed_wait_cancelable (6 samples, 0.31%)</title><rect x="16.8" y="1141" width="3.7" height="15.0" fill="rgb(213,152,40)" rx="2" ry="2" />
<text  x="19.81" y="1151.5" ></text>
</g>
<g >
<title>[libddsc.so.0.8.0] (1 samples, 0.05%)</title><rect x="383.5" y="1157" width="0.6" height="15.0" fill="rgb(250,114,3)" rx="2" ry="2" />
<text  x="386.51" y="1167.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_base&lt;rmw_cyclonedds_cpp::CDRWriter::CacheKey, std::pair&lt;rmw_cyclonedds_cpp::CDRWriter::CacheKey const, bool&gt;, std::__detail::_Select1st, std::equal_to&lt;rmw_cyclonedds_cpp::CDRWriter::CacheKey&gt;, rmw_cyclonedds_cpp::CDRWriter::CacheKey::Hash, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_equals (1 samples, 0.05%)</title><rect x="850.6" y="693" width="0.6" height="15.0" fill="rgb(245,112,41)" rx="2" ry="2" />
<text  x="853.56" y="703.5" ></text>
</g>
<g >
<title>apic_timer_interrupt (1 samples, 0.05%)</title><rect x="1107.6" y="1269" width="0.6" height="15.0" fill="rgb(216,64,18)" rx="2" ry="2" />
<text  x="1110.62" y="1279.5" ></text>
</g>
<g >
<title>entidx_lookup_guid_untyped (2 samples, 0.10%)</title><rect x="752.1" y="901" width="1.2" height="15.0" fill="rgb(231,174,9)" rx="2" ry="2" />
<text  x="755.07" y="911.5" ></text>
</g>
<g >
<title>__lock_text_start (1 samples, 0.05%)</title><rect x="327.1" y="949" width="0.7" height="15.0" fill="rgb(222,48,31)" rx="2" ry="2" />
<text  x="330.14" y="959.5" ></text>
</g>
<g >
<title>rmw_cyclonedds_cpp::CDRWriter::serialize (39 samples, 2.05%)</title><rect x="830.1" y="837" width="24.2" height="15.0" fill="rgb(214,88,35)" rx="2" ry="2" />
<text  x="833.12" y="847.5" >r..</text>
</g>
<g >
<title>dds_waitset_wait_impl (273 samples, 14.33%)</title><rect x="203.3" y="1205" width="169.1" height="15.0" fill="rgb(232,46,44)" rx="2" ry="2" />
<text  x="206.26" y="1215.5" >dds_waitset_wait_impl</text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;long&gt; &gt;::construct&lt;long, long&gt; (4 samples, 0.21%)</title><rect x="475.8" y="1173" width="2.5" height="15.0" fill="rgb(228,166,7)" rx="2" ry="2" />
<text  x="478.81" y="1183.5" ></text>
</g>
<g >
<title>nn_xpack_send (2 samples, 0.10%)</title><rect x="1175.8" y="1189" width="1.2" height="15.0" fill="rgb(244,112,28)" rx="2" ry="2" />
<text  x="1178.75" y="1199.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.05%)</title><rect x="21.8" y="1109" width="0.6" height="15.0" fill="rgb(230,62,34)" rx="2" ry="2" />
<text  x="24.77" y="1119.5" ></text>
</g>
<g >
<title>get_futex_key (1 samples, 0.05%)</title><rect x="1115.7" y="1205" width="0.6" height="15.0" fill="rgb(252,66,28)" rx="2" ry="2" />
<text  x="1118.67" y="1215.5" ></text>
</g>
<g >
<title>update_process_times (1 samples, 0.05%)</title><rect x="321.6" y="885" width="0.6" height="15.0" fill="rgb(238,38,5)" rx="2" ry="2" />
<text  x="324.57" y="895.5" ></text>
</g>
<g >
<title>task_ctx_sched_out (1 samples, 0.05%)</title><rect x="1110.7" y="1125" width="0.6" height="15.0" fill="rgb(252,201,13)" rx="2" ry="2" />
<text  x="1113.71" y="1135.5" ></text>
</g>
<g >
<title>__condvar_confirm_wakeup (1 samples, 0.05%)</title><rect x="1141.1" y="1141" width="0.6" height="15.0" fill="rgb(212,192,16)" rx="2" ry="2" />
<text  x="1144.07" y="1151.5" ></text>
</g>
<g >
<title>__pthread_mutex_unlock_usercnt (1 samples, 0.05%)</title><rect x="202.0" y="1141" width="0.6" height="15.0" fill="rgb(208,98,17)" rx="2" ry="2" />
<text  x="205.02" y="1151.5" ></text>
</g>
<g >
<title>std::__uninitialized_default_n&lt;int*, unsigned long&gt; (7 samples, 0.37%)</title><rect x="950.3" y="997" width="4.3" height="15.0" fill="rgb(208,193,36)" rx="2" ry="2" />
<text  x="953.28" y="1007.5" ></text>
</g>
<g >
<title>__x64_sys_sendmsg (224 samples, 11.76%)</title><rect x="609.6" y="773" width="138.8" height="15.0" fill="rgb(227,182,42)" rx="2" ry="2" />
<text  x="612.60" y="783.5" >__x64_sys_sendmsg</text>
</g>
<g >
<title>std_msgs::msg::Int32MultiArray_&lt;std::allocator&lt;void&gt; &gt;::~Int32MultiArray_ (11 samples, 0.58%)</title><rect x="967.0" y="1045" width="6.8" height="15.0" fill="rgb(233,181,7)" rx="2" ry="2" />
<text  x="970.01" y="1055.5" ></text>
</g>
<g >
<title>std::vector&lt;CddsSubscription*, std::allocator&lt;CddsSubscription*&gt; &gt;::data (6 samples, 0.31%)</title><rect x="446.7" y="1189" width="3.7" height="15.0" fill="rgb(222,16,44)" rx="2" ry="2" />
<text  x="449.69" y="1199.5" ></text>
</g>
<g >
<title>ctx_sched_in (1 samples, 0.05%)</title><rect x="24.2" y="917" width="0.7" height="15.0" fill="rgb(250,169,29)" rx="2" ry="2" />
<text  x="27.25" y="927.5" ></text>
</g>
<g >
<title>ddsrt_mutex_lock (1 samples, 0.05%)</title><rect x="548.9" y="1061" width="0.6" height="15.0" fill="rgb(251,7,43)" rx="2" ry="2" />
<text  x="551.90" y="1071.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;byte [], std::default_delete&lt;byte []&gt; &gt;::~unique_ptr (11 samples, 0.58%)</title><rect x="898.3" y="837" width="6.8" height="15.0" fill="rgb(226,227,51)" rx="2" ry="2" />
<text  x="901.25" y="847.5" ></text>
</g>
<g >
<title>ip_route_output_key_hash (31 samples, 1.63%)</title><rect x="636.2" y="645" width="19.2" height="15.0" fill="rgb(228,146,24)" rx="2" ry="2" />
<text  x="639.24" y="655.5" ></text>
</g>
<g >
<title>pthread_mutex_lock (1 samples, 0.05%)</title><rect x="999.8" y="1141" width="0.7" height="15.0" fill="rgb(238,17,44)" rx="2" ry="2" />
<text  x="1002.84" y="1151.5" ></text>
</g>
<g >
<title>rt_add_uncached_list (1 samples, 0.05%)</title><rect x="651.7" y="613" width="0.6" height="15.0" fill="rgb(223,36,44)" rx="2" ry="2" />
<text  x="654.72" y="623.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::_S_relocate (2 samples, 0.10%)</title><rect x="956.5" y="1013" width="1.2" height="15.0" fill="rgb(237,158,30)" rx="2" ry="2" />
<text  x="959.48" y="1023.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (1 samples, 0.05%)</title><rect x="321.6" y="933" width="0.6" height="15.0" fill="rgb(242,99,19)" rx="2" ry="2" />
<text  x="324.57" y="943.5" ></text>
</g>
<g >
<title>prandom_u32 (1 samples, 0.05%)</title><rect x="633.8" y="613" width="0.6" height="15.0" fill="rgb(207,92,16)" rx="2" ry="2" />
<text  x="636.76" y="623.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (37 samples, 1.94%)</title><rect x="1145.4" y="1125" width="22.9" height="15.0" fill="rgb(246,184,35)" rx="2" ry="2" />
<text  x="1148.40" y="1135.5" >e..</text>
</g>
<g >
<title>ctx_sched_in (1 samples, 0.05%)</title><rect x="37.3" y="837" width="0.6" height="15.0" fill="rgb(241,80,41)" rx="2" ry="2" />
<text  x="40.25" y="847.5" ></text>
</g>
<g >
<title>rclcpp::node_interfaces::NodeBase::get_callback_groups (1 samples, 0.05%)</title><rect x="1022.8" y="1125" width="0.6" height="15.0" fill="rgb(229,198,52)" rx="2" ry="2" />
<text  x="1025.76" y="1135.5" ></text>
</g>
<g >
<title>alloc_skb_with_frags (14 samples, 0.73%)</title><rect x="625.1" y="597" width="8.7" height="15.0" fill="rgb(206,109,38)" rx="2" ry="2" />
<text  x="628.09" y="607.5" ></text>
</g>
<g >
<title>__x64_sys_futex (19 samples, 1.00%)</title><rect x="356.3" y="1109" width="11.7" height="15.0" fill="rgb(254,194,0)" rx="2" ry="2" />
<text  x="359.26" y="1119.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::~vector (7 samples, 0.37%)</title><rect x="967.0" y="1029" width="4.3" height="15.0" fill="rgb(209,222,20)" rx="2" ry="2" />
<text  x="970.01" y="1039.5" ></text>
</g>
<g >
<title>__libc_recvmsg (8 samples, 0.42%)</title><rect x="37.3" y="1125" width="4.9" height="15.0" fill="rgb(221,146,15)" rx="2" ry="2" />
<text  x="40.25" y="1135.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;long*, std::vector&lt;long, std::allocator&lt;long&gt; &gt; &gt;::base (1 samples, 0.05%)</title><rect x="466.5" y="1157" width="0.6" height="15.0" fill="rgb(239,219,27)" rx="2" ry="2" />
<text  x="469.51" y="1167.5" ></text>
</g>
<g >
<title>futex_wait (1 samples, 0.05%)</title><rect x="20.5" y="1205" width="0.6" height="15.0" fill="rgb(215,167,33)" rx="2" ry="2" />
<text  x="23.53" y="1215.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;serdata_rmw, std::default_delete&lt;serdata_rmw&gt; &gt;::__uniq_ptr_impl (1 samples, 0.05%)</title><rect x="128.9" y="1253" width="0.6" height="15.0" fill="rgb(241,100,31)" rx="2" ry="2" />
<text  x="131.93" y="1263.5" ></text>
</g>
<g >
<title>_nohz_idle_balance (3 samples, 0.16%)</title><rect x="1160.9" y="965" width="1.8" height="15.0" fill="rgb(216,191,15)" rx="2" ry="2" />
<text  x="1163.89" y="975.5" ></text>
</g>
<g >
<title>autoremove_wake_function (6 samples, 0.31%)</title><rect x="1124.3" y="629" width="3.8" height="15.0" fill="rgb(240,13,0)" rx="2" ry="2" />
<text  x="1127.34" y="639.5" ></text>
</g>
<g >
<title>___sys_sendmsg (21 samples, 1.10%)</title><rect x="1116.3" y="1205" width="13.0" height="15.0" fill="rgb(220,12,19)" rx="2" ry="2" />
<text  x="1119.29" y="1215.5" ></text>
</g>
<g >
<title>rmw_cyclonedds_cpp::CDRWriter::serialize (28 samples, 1.47%)</title><rect x="789.9" y="805" width="17.3" height="15.0" fill="rgb(227,113,25)" rx="2" ry="2" />
<text  x="792.85" y="815.5" ></text>
</g>
<g >
<title>std::fill_n&lt;long*, unsigned long, long&gt; (6 samples, 0.31%)</title><rect x="487.6" y="1125" width="3.7" height="15.0" fill="rgb(219,14,21)" rx="2" ry="2" />
<text  x="490.57" y="1135.5" ></text>
</g>
<g >
<title>std::swap&lt;byte*&gt; (2 samples, 0.10%)</title><rect x="863.6" y="869" width="1.2" height="15.0" fill="rgb(207,91,2)" rx="2" ry="2" />
<text  x="866.56" y="879.5" ></text>
</g>
<g >
<title>rmw_cyclonedds_cpp::DataCursor::put_bytes (2 samples, 0.10%)</title><rect x="852.4" y="789" width="1.3" height="15.0" fill="rgb(216,34,12)" rx="2" ry="2" />
<text  x="855.41" y="799.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;byte [], std::default_delete&lt;byte []&gt; &gt;::reset&lt;byte*, void&gt; (9 samples, 0.47%)</title><rect x="859.2" y="885" width="5.6" height="15.0" fill="rgb(229,150,28)" rx="2" ry="2" />
<text  x="862.23" y="895.5" ></text>
</g>
<g >
<title>__GI___pthread_mutex_lock (1 samples, 0.05%)</title><rect x="350.7" y="1173" width="0.6" height="15.0" fill="rgb(245,17,48)" rx="2" ry="2" />
<text  x="353.68" y="1183.5" ></text>
</g>
<g >
<title>native_write_msr (11 samples, 0.58%)</title><rect x="1153.5" y="917" width="6.8" height="15.0" fill="rgb(241,92,19)" rx="2" ry="2" />
<text  x="1156.45" y="927.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, rmw_event_type_t const, unsigned int&gt; (3 samples, 0.16%)</title><rect x="433.7" y="1093" width="1.8" height="15.0" fill="rgb(209,87,31)" rx="2" ry="2" />
<text  x="436.69" y="1103.5" ></text>
</g>
<g >
<title>x86_pmu_enable (60 samples, 3.15%)</title><rect x="284.4" y="949" width="37.2" height="15.0" fill="rgb(228,61,2)" rx="2" ry="2" />
<text  x="287.40" y="959.5" >x86..</text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.05%)</title><rect x="20.5" y="1269" width="0.6" height="15.0" fill="rgb(235,61,53)" rx="2" ry="2" />
<text  x="23.53" y="1279.5" ></text>
</g>
<g >
<title>copy_msghdr_from_user (1 samples, 0.05%)</title><rect x="743.4" y="741" width="0.6" height="15.0" fill="rgb(233,146,25)" rx="2" ry="2" />
<text  x="746.40" y="751.5" ></text>
</g>
<g >
<title>__sys_sendmsg (2 samples, 0.10%)</title><rect x="1177.0" y="1013" width="1.2" height="15.0" fill="rgb(240,88,50)" rx="2" ry="2" />
<text  x="1179.99" y="1023.5" ></text>
</g>
<g >
<title>dds_time (5 samples, 0.26%)</title><rect x="574.3" y="949" width="3.1" height="15.0" fill="rgb(208,41,41)" rx="2" ry="2" />
<text  x="577.29" y="959.5" ></text>
</g>
<g >
<title>enqueue_hrtimer (1 samples, 0.05%)</title><rect x="1109.5" y="1141" width="0.6" height="15.0" fill="rgb(209,159,33)" rx="2" ry="2" />
<text  x="1112.48" y="1151.5" ></text>
</g>
<g >
<title>rmw_cyclonedds_cpp::CallbackSpanSequenceValueType::element_value_type (1 samples, 0.05%)</title><rect x="846.8" y="789" width="0.7" height="15.0" fill="rgb(232,90,36)" rx="2" ry="2" />
<text  x="849.84" y="799.5" ></text>
</g>
<g >
<title>std::_Function_base::_Base_manager&lt;unsigned long  (3 samples, 0.16%)</title><rect x="801.6" y="725" width="1.9" height="15.0" fill="rgb(244,181,3)" rx="2" ry="2" />
<text  x="804.62" y="735.5" ></text>
</g>
<g >
<title>std::__remove_if&lt;__gnu_cxx::__normal_iterator&lt;std::shared_ptr&lt;rcl_service_t const&gt;*, std::vector&lt;std::shared_ptr&lt;rcl_service_t const&gt;, std::allocator&lt;std::shared_ptr&lt;rcl_service_t const&gt; &gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_equals_val&lt;decltype (2 samples, 0.10%)</title><rect x="105.4" y="1253" width="1.2" height="15.0" fill="rgb(208,114,26)" rx="2" ry="2" />
<text  x="108.39" y="1263.5" ></text>
</g>
<g >
<title>__fget_light (1 samples, 0.05%)</title><rect x="745.3" y="709" width="0.6" height="15.0" fill="rgb(252,92,28)" rx="2" ry="2" />
<text  x="748.25" y="719.5" ></text>
</g>
<g >
<title>__pthread_cond_wait_common (6 samples, 0.31%)</title><rect x="16.8" y="1157" width="3.7" height="15.0" fill="rgb(239,13,1)" rx="2" ry="2" />
<text  x="19.81" y="1167.5" ></text>
</g>
<g >
<title>flexible_sched_in (1 samples, 0.05%)</title><rect x="269.5" y="933" width="0.7" height="15.0" fill="rgb(222,192,24)" rx="2" ry="2" />
<text  x="272.54" y="943.5" ></text>
</g>
<g >
<title>start_thread (26 samples, 1.36%)</title><rect x="21.1" y="1253" width="16.2" height="15.0" fill="rgb(238,127,50)" rx="2" ry="2" />
<text  x="24.15" y="1263.5" ></text>
</g>
<g >
<title>__slab_alloc (1 samples, 0.05%)</title><rect x="626.9" y="533" width="0.7" height="15.0" fill="rgb(207,59,48)" rx="2" ry="2" />
<text  x="629.94" y="543.5" ></text>
</g>
<g >
<title>intel_pmu_enable_all (5 samples, 0.26%)</title><rect x="1170.2" y="949" width="3.1" height="15.0" fill="rgb(219,208,4)" rx="2" ry="2" />
<text  x="1173.18" y="959.5" ></text>
</g>
<g >
<title>sock_alloc_send_skb (1 samples, 0.05%)</title><rect x="1117.5" y="1093" width="0.6" height="15.0" fill="rgb(243,11,12)" rx="2" ry="2" />
<text  x="1120.53" y="1103.5" ></text>
</g>
<g >
<title>sock_poll (1 samples, 0.05%)</title><rect x="36.6" y="1045" width="0.7" height="15.0" fill="rgb(225,36,5)" rx="2" ry="2" />
<text  x="39.64" y="1055.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;rmw_cyclonedds_cpp::CDRWriter::CacheKey, std::pair&lt;rmw_cyclonedds_cpp::CDRWriter::CacheKey const, bool&gt;, std::allocator&lt;std::pair&lt;rmw_cyclonedds_cpp::CDRWriter::CacheKey const, bool&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;rmw_cyclonedds_cpp::CDRWriter::CacheKey&gt;, rmw_cyclonedds_cpp::CDRWriter::CacheKey::Hash, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_find_node (3 samples, 0.16%)</title><rect x="844.4" y="741" width="1.8" height="15.0" fill="rgb(218,177,4)" rx="2" ry="2" />
<text  x="847.36" y="751.5" ></text>
</g>
<g >
<title>__ip_make_skb (2 samples, 0.10%)</title><rect x="633.8" y="645" width="1.2" height="15.0" fill="rgb(237,40,18)" rx="2" ry="2" />
<text  x="636.76" y="655.5" ></text>
</g>
<g >
<title>wake_up_q (1 samples, 0.05%)</title><rect x="42.2" y="981" width="0.6" height="15.0" fill="rgb(207,181,42)" rx="2" ry="2" />
<text  x="45.21" y="991.5" ></text>
</g>
<g >
<title>rcl_service_get_rmw_handle (6 samples, 0.31%)</title><rect x="1032.7" y="1109" width="3.7" height="15.0" fill="rgb(209,71,25)" rx="2" ry="2" />
<text  x="1035.67" y="1119.5" ></text>
</g>
<g >
<title>copy_user_enhanced_fast_string (2 samples, 0.10%)</title><rect x="623.2" y="597" width="1.3" height="15.0" fill="rgb(234,212,16)" rx="2" ry="2" />
<text  x="626.23" y="607.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::max_size (6 samples, 0.31%)</title><rect x="957.7" y="1013" width="3.7" height="15.0" fill="rgb(245,28,22)" rx="2" ry="2" />
<text  x="960.72" y="1023.5" ></text>
</g>
<g >
<title>[libddsc.so.0.8.0] (1 samples, 0.05%)</title><rect x="932.9" y="901" width="0.7" height="15.0" fill="rgb(222,78,11)" rx="2" ry="2" />
<text  x="935.94" y="911.5" ></text>
</g>
<g >
<title>std::default_delete&lt;byte []&gt;::operator (3 samples, 0.16%)</title><rect x="898.3" y="821" width="1.8" height="15.0" fill="rgb(216,168,40)" rx="2" ry="2" />
<text  x="901.25" y="831.5" ></text>
</g>
<g >
<title>ddsrt_atomic_inc32 (1 samples, 0.05%)</title><rect x="919.9" y="869" width="0.7" height="15.0" fill="rgb(246,124,47)" rx="2" ry="2" />
<text  x="922.93" y="879.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;std_msgs::msg::MultiArrayDimension_&lt;std::allocator&lt;void&gt; &gt;, std::allocator&lt;std_msgs::msg::MultiArrayDimension_&lt;std::allocator&lt;void&gt; &gt; &gt; &gt;::_Vector_impl_data::_Vector_impl_data (1 samples, 0.05%)</title><rect x="964.5" y="965" width="0.6" height="15.0" fill="rgb(238,22,30)" rx="2" ry="2" />
<text  x="967.53" y="975.5" ></text>
</g>
<g >
<title>whc_delete_one_intv (3 samples, 0.16%)</title><rect x="143.2" y="901" width="1.8" height="15.0" fill="rgb(253,41,31)" rx="2" ry="2" />
<text  x="146.18" y="911.5" ></text>
</g>
<g >
<title>deliver_locally_allinsync (3 samples, 0.16%)</title><rect x="591.6" y="933" width="1.9" height="15.0" fill="rgb(215,98,27)" rx="2" ry="2" />
<text  x="594.64" y="943.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (25 samples, 1.31%)</title><rect x="353.8" y="1141" width="15.5" height="15.0" fill="rgb(221,79,15)" rx="2" ry="2" />
<text  x="356.78" y="1151.5" ></text>
</g>
<g >
<title>enqueue_to_backlog (1 samples, 0.05%)</title><rect x="1128.1" y="933" width="0.6" height="15.0" fill="rgb(225,37,21)" rx="2" ry="2" />
<text  x="1131.06" y="943.5" ></text>
</g>
<g >
<title>ip_output (119 samples, 6.25%)</title><rect x="659.8" y="613" width="73.7" height="15.0" fill="rgb(243,156,32)" rx="2" ry="2" />
<text  x="662.77" y="623.5" >ip_output</text>
</g>
<g >
<title>pick_next_task_idle (3 samples, 0.16%)</title><rect x="343.9" y="997" width="1.8" height="15.0" fill="rgb(244,183,43)" rx="2" ry="2" />
<text  x="346.87" y="1007.5" ></text>
</g>
<g >
<title>apparmor_socket_recvmsg (1 samples, 0.05%)</title><rect x="21.8" y="981" width="0.6" height="15.0" fill="rgb(243,49,51)" rx="2" ry="2" />
<text  x="24.77" y="991.5" ></text>
</g>
<g >
<title>futex_wait_queue_me (7 samples, 0.37%)</title><rect x="11.9" y="1045" width="4.3" height="15.0" fill="rgb(248,6,11)" rx="2" ry="2" />
<text  x="14.86" y="1055.5" ></text>
</g>
<g >
<title>perf_event_update_userpage (4 samples, 0.21%)</title><rect x="277.6" y="853" width="2.5" height="15.0" fill="rgb(214,204,26)" rx="2" ry="2" />
<text  x="280.59" y="863.5" ></text>
</g>
<g >
<title>activate_task (4 samples, 0.21%)</title><rect x="1125.6" y="565" width="2.5" height="15.0" fill="rgb(220,11,50)" rx="2" ry="2" />
<text  x="1128.58" y="575.5" ></text>
</g>
<g >
<title>rclcpp::Waitable::get_number_of_ready_events (2 samples, 0.10%)</title><rect x="1064.9" y="1125" width="1.2" height="15.0" fill="rgb(246,156,26)" rx="2" ry="2" />
<text  x="1067.88" y="1135.5" ></text>
</g>
<g >
<title>[librcl.so] (1 samples, 0.05%)</title><rect x="159.3" y="1189" width="0.6" height="15.0" fill="rgb(210,67,14)" rx="2" ry="2" />
<text  x="162.28" y="1199.5" ></text>
</g>
<g >
<title>rmw_cyclonedds_cpp::CDRWriter::lookup_trivially_serialized (5 samples, 0.26%)</title><rect x="779.9" y="853" width="3.1" height="15.0" fill="rgb(211,26,22)" rx="2" ry="2" />
<text  x="782.94" y="863.5" ></text>
</g>
<g >
<title>deactivate_task (1 samples, 0.05%)</title><rect x="1183.8" y="1141" width="0.6" height="15.0" fill="rgb(211,10,49)" rx="2" ry="2" />
<text  x="1186.81" y="1151.5" ></text>
</g>
<g >
<title>__udp4_lib_rcv (59 samples, 3.10%)</title><rect x="682.1" y="325" width="36.5" height="15.0" fill="rgb(251,174,6)" rx="2" ry="2" />
<text  x="685.07" y="335.5" >__u..</text>
</g>
<g >
<title>[librclcpp.so] (2 samples, 0.10%)</title><rect x="981.9" y="1157" width="1.2" height="15.0" fill="rgb(244,43,9)" rx="2" ry="2" />
<text  x="984.87" y="1167.5" ></text>
</g>
<g >
<title>__fdget (1 samples, 0.05%)</title><rect x="745.3" y="725" width="0.6" height="15.0" fill="rgb(230,203,44)" rx="2" ry="2" />
<text  x="748.25" y="735.5" ></text>
</g>
<g >
<title>futex_wait_queue_me (29 samples, 1.52%)</title><rect x="1147.3" y="1045" width="17.9" height="15.0" fill="rgb(247,159,2)" rx="2" ry="2" />
<text  x="1150.26" y="1055.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.05%)</title><rect x="672.8" y="469" width="0.6" height="15.0" fill="rgb(232,56,42)" rx="2" ry="2" />
<text  x="675.78" y="479.5" ></text>
</g>
<g >
<title>std::allocator&lt;std_msgs::msg::MultiArrayDimension_&lt;std::allocator&lt;void&gt; &gt; &gt;::allocator (3 samples, 0.16%)</title><rect x="965.1" y="965" width="1.9" height="15.0" fill="rgb(241,139,26)" rx="2" ry="2" />
<text  x="968.15" y="975.5" ></text>
</g>
<g >
<title>std::__detail::_Hash_code_base&lt;rmw_event_type_t, std::pair&lt;rmw_event_type_t const, unsigned int&gt;, std::__detail::_Select1st, std::hash&lt;rmw_event_type_t&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false&gt;::_M_h2 (1 samples, 0.05%)</title><rect x="422.5" y="1125" width="0.7" height="15.0" fill="rgb(237,195,44)" rx="2" ry="2" />
<text  x="425.54" y="1135.5" ></text>
</g>
<g >
<title>__GI___select (23 samples, 1.21%)</title><rect x="23.0" y="1157" width="14.3" height="15.0" fill="rgb(231,168,7)" rx="2" ry="2" />
<text  x="26.01" y="1167.5" ></text>
</g>
<g >
<title>ros_trace_callback_start (2 samples, 0.10%)</title><rect x="979.4" y="1141" width="1.2" height="15.0" fill="rgb(231,180,11)" rx="2" ry="2" />
<text  x="982.40" y="1151.5" ></text>
</g>
<g >
<title>__x64_sys_futex (185 samples, 9.71%)</title><rect x="235.5" y="1093" width="114.6" height="15.0" fill="rgb(250,161,47)" rx="2" ry="2" />
<text  x="238.47" y="1103.5" >__x64_sys_futex</text>
</g>
<g >
<title>apparmor_socket_sendmsg (3 samples, 0.16%)</title><rect x="737.8" y="677" width="1.9" height="15.0" fill="rgb(247,99,8)" rx="2" ry="2" />
<text  x="740.82" y="687.5" ></text>
</g>
<g >
<title>std::unordered_map&lt;rmw_event_type_t, unsigned int, std::hash&lt;rmw_event_type_t&gt;, std::equal_to&lt;rmw_event_type_t&gt;, std::allocator&lt;std::pair&lt;rmw_event_type_t const, unsigned int&gt; &gt; &gt;::count (56 samples, 2.94%)</title><rect x="402.1" y="1173" width="34.7" height="15.0" fill="rgb(229,12,38)" rx="2" ry="2" />
<text  x="405.09" y="1183.5" >st..</text>
</g>
<g >
<title>std::_Head_base&lt;0ul, rmw_cyclonedds_cpp::StructValueType const*, false&gt;::_M_head (1 samples, 0.05%)</title><rect x="827.6" y="773" width="0.7" height="15.0" fill="rgb(227,42,37)" rx="2" ry="2" />
<text  x="830.64" y="783.5" ></text>
</g>
<g >
<title>rcutils_allocator_is_valid (1 samples, 0.05%)</title><rect x="1047.5" y="1061" width="0.7" height="15.0" fill="rgb(221,103,15)" rx="2" ry="2" />
<text  x="1050.53" y="1071.5" ></text>
</g>
<g >
<title>__x64_sys_sendmsg (21 samples, 1.10%)</title><rect x="1116.3" y="1237" width="13.0" height="15.0" fill="rgb(235,86,7)" rx="2" ry="2" />
<text  x="1119.29" y="1247.5" ></text>
</g>
<g >
<title>std::equal_to&lt;rmw_cyclonedds_cpp::CDRWriter::CacheKey&gt;::operator (1 samples, 0.05%)</title><rect x="129.5" y="1253" width="0.7" height="15.0" fill="rgb(218,130,17)" rx="2" ry="2" />
<text  x="132.55" y="1263.5" ></text>
</g>
<g >
<title>do_futex (34 samples, 1.78%)</title><rect x="1146.0" y="1077" width="21.1" height="15.0" fill="rgb(205,74,35)" rx="2" ry="2" />
<text  x="1149.02" y="1087.5" ></text>
</g>
<g >
<title>do_syscall_64 (1 samples, 0.05%)</title><rect x="20.5" y="1253" width="0.6" height="15.0" fill="rgb(233,210,35)" rx="2" ry="2" />
<text  x="23.53" y="1263.5" ></text>
</g>
<g >
<title>std::__fill_n_a&lt;long*, unsigned long, long&gt; (4 samples, 0.21%)</title><rect x="488.8" y="1109" width="2.5" height="15.0" fill="rgb(223,150,7)" rx="2" ry="2" />
<text  x="491.81" y="1119.5" ></text>
</g>
<g >
<title>activate_task (22 samples, 1.15%)</title><rect x="696.3" y="101" width="13.6" height="15.0" fill="rgb(239,46,41)" rx="2" ry="2" />
<text  x="699.32" y="111.5" ></text>
</g>
<g >
<title>std::vector&lt;std_msgs::msg::MultiArrayDimension_&lt;std::allocator&lt;void&gt; &gt;, std::allocator&lt;std_msgs::msg::MultiArrayDimension_&lt;std::allocator&lt;void&gt; &gt; &gt; &gt;::size (1 samples, 0.05%)</title><rect x="804.7" y="709" width="0.6" height="15.0" fill="rgb(230,128,45)" rx="2" ry="2" />
<text  x="807.72" y="719.5" ></text>
</g>
<g >
<title>_start (935 samples, 49.08%)</title><rect x="528.5" y="1269" width="579.1" height="15.0" fill="rgb(214,13,19)" rx="2" ry="2" />
<text  x="531.46" y="1279.5" >_start</text>
</g>
<g >
<title>__gnu_cxx::operator!=&lt;long*, std::vector&lt;long, std::allocator&lt;long&gt; &gt; &gt; (8 samples, 0.42%)</title><rect x="462.2" y="1173" width="4.9" height="15.0" fill="rgb(242,46,49)" rx="2" ry="2" />
<text  x="465.18" y="1183.5" ></text>
</g>
<g >
<title>__pthread_cond_broadcast (5 samples, 0.26%)</title><rect x="545.8" y="1045" width="3.1" height="15.0" fill="rgb(211,136,35)" rx="2" ry="2" />
<text  x="548.80" y="1055.5" ></text>
</g>
<g >
<title>netif_rx_internal (2 samples, 0.10%)</title><rect x="726.7" y="469" width="1.2" height="15.0" fill="rgb(220,75,18)" rx="2" ry="2" />
<text  x="729.67" y="479.5" ></text>
</g>
<g >
<title>__libc_sendmsg (234 samples, 12.28%)</title><rect x="604.0" y="837" width="145.0" height="15.0" fill="rgb(231,75,54)" rx="2" ry="2" />
<text  x="607.03" y="847.5" >__libc_sendmsg</text>
</g>
<g >
<title>rclcpp::memory_strategies::allocator_memory_strategy::AllocatorMemoryStrategy&lt;std::allocator&lt;void&gt; &gt;::get_next_timer (28 samples, 1.47%)</title><rect x="1085.3" y="1157" width="17.4" height="15.0" fill="rgb(207,16,51)" rx="2" ry="2" />
<text  x="1088.32" y="1167.5" ></text>
</g>
<g >
<title>flexible_sched_in (3 samples, 0.16%)</title><rect x="1113.8" y="1061" width="1.9" height="15.0" fill="rgb(244,98,6)" rx="2" ry="2" />
<text  x="1116.81" y="1071.5" ></text>
</g>
<g >
<title>[libddsc.so.0.8.0] (1 samples, 0.05%)</title><rect x="216.3" y="1157" width="0.6" height="15.0" fill="rgb(208,34,1)" rx="2" ry="2" />
<text  x="219.27" y="1167.5" ></text>
</g>
<g >
<title>resched_xevent_if_earlier (1 samples, 0.05%)</title><rect x="42.2" y="1125" width="0.6" height="15.0" fill="rgb(243,228,36)" rx="2" ry="2" />
<text  x="45.21" y="1135.5" ></text>
</g>
<g >
<title>rmw_cyclonedds_cpp::ROSIDLCPP_StructValueType::n_members (2 samples, 0.10%)</title><rect x="824.5" y="869" width="1.3" height="15.0" fill="rgb(228,38,14)" rx="2" ry="2" />
<text  x="827.54" y="879.5" ></text>
</g>
<g >
<title>inet_sendmsg (2 samples, 0.10%)</title><rect x="1177.0" y="949" width="1.2" height="15.0" fill="rgb(224,211,0)" rx="2" ry="2" />
<text  x="1179.99" y="959.5" ></text>
</g>
<g >
<title>__sys_recvmsg (8 samples, 0.42%)</title><rect x="37.3" y="1061" width="4.9" height="15.0" fill="rgb(215,219,3)" rx="2" ry="2" />
<text  x="40.25" y="1071.5" ></text>
</g>
<g >
<title>__GI___pthread_mutex_lock (1 samples, 0.05%)</title><rect x="543.3" y="1061" width="0.6" height="15.0" fill="rgb(214,29,0)" rx="2" ry="2" />
<text  x="546.32" y="1071.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;rmw_cyclonedds_cpp::CDRWriter::CacheKey, std::pair&lt;rmw_cyclonedds_cpp::CDRWriter::CacheKey const, bool&gt;, std::allocator&lt;std::pair&lt;rmw_cyclonedds_cpp::CDRWriter::CacheKey const, bool&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;rmw_cyclonedds_cpp::CDRWriter::CacheKey&gt;, rmw_cyclonedds_cpp::CDRWriter::CacheKey::Hash, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_find_before_node (3 samples, 0.16%)</title><rect x="844.4" y="725" width="1.8" height="15.0" fill="rgb(231,94,23)" rx="2" ry="2" />
<text  x="847.36" y="735.5" ></text>
</g>
<g >
<title>entidx_lookup_writer_guid (3 samples, 0.16%)</title><rect x="751.4" y="917" width="1.9" height="15.0" fill="rgb(207,136,46)" rx="2" ry="2" />
<text  x="754.45" y="927.5" ></text>
</g>
<g >
<title>std::__detail::_Hash_node_value_base&lt;std::pair&lt;rmw_event_type_t const, unsigned int&gt; &gt;::_M_v (1 samples, 0.05%)</title><rect x="431.2" y="1109" width="0.6" height="15.0" fill="rgb(214,48,14)" rx="2" ry="2" />
<text  x="434.21" y="1119.5" ></text>
</g>
<g >
<title>std::__detail::_Hash_code_base&lt;rmw_event_type_t, std::pair&lt;rmw_event_type_t const, unsigned int&gt;, std::__detail::_Select1st, std::hash&lt;rmw_event_type_t&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false&gt;::_M_h2 (2 samples, 0.10%)</title><rect x="414.5" y="1109" width="1.2" height="15.0" fill="rgb(207,197,49)" rx="2" ry="2" />
<text  x="417.48" y="1119.5" ></text>
</g>
<g >
<title>std::vector&lt;CddsEvent, std::allocator&lt;CddsEvent&gt; &gt;::_M_range_check (2 samples, 0.10%)</title><rect x="438.6" y="1173" width="1.3" height="15.0" fill="rgb(235,74,8)" rx="2" ry="2" />
<text  x="441.64" y="1183.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, byte*, std::default_delete&lt;byte []&gt; &gt;::_M_head (1 samples, 0.05%)</title><rect x="862.9" y="821" width="0.7" height="15.0" fill="rgb(214,190,35)" rx="2" ry="2" />
<text  x="865.94" y="831.5" ></text>
</g>
<g >
<title>__GI___pthread_mutex_lock (1 samples, 0.05%)</title><rect x="906.9" y="805" width="0.6" height="15.0" fill="rgb(235,75,12)" rx="2" ry="2" />
<text  x="909.92" y="815.5" ></text>
</g>
<g >
<title>nn_xmsg_new (2 samples, 0.10%)</title><rect x="101.1" y="1253" width="1.2" height="15.0" fill="rgb(250,113,15)" rx="2" ry="2" />
<text  x="104.06" y="1263.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (7 samples, 0.37%)</title><rect x="11.9" y="1125" width="4.3" height="15.0" fill="rgb(247,113,8)" rx="2" ry="2" />
<text  x="14.86" y="1135.5" ></text>
</g>
<g >
<title>receiver_wake_function (1 samples, 0.05%)</title><rect x="1180.1" y="405" width="0.6" height="15.0" fill="rgb(205,117,5)" rx="2" ry="2" />
<text  x="1183.09" y="415.5" ></text>
</g>
<g >
<title>serdata_rmw_from_sample (190 samples, 9.97%)</title><rect x="759.5" y="933" width="117.7" height="15.0" fill="rgb(254,21,28)" rx="2" ry="2" />
<text  x="762.50" y="943.5" >serdata_rmw_fr..</text>
</g>
<g >
<title>update_cfs_group (1 samples, 0.05%)</title><rect x="252.2" y="949" width="0.6" height="15.0" fill="rgb(206,139,32)" rx="2" ry="2" />
<text  x="255.19" y="959.5" ></text>
</g>
<g >
<title>__GI___clock_gettime (1 samples, 0.05%)</title><rect x="1136.1" y="1253" width="0.6" height="15.0" fill="rgb(241,26,40)" rx="2" ry="2" />
<text  x="1139.11" y="1263.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;std_msgs::msg::MultiArrayDimension_&lt;std::allocator&lt;void&gt; &gt;, std::allocator&lt;std_msgs::msg::MultiArrayDimension_&lt;std::allocator&lt;void&gt; &gt; &gt; &gt;::_Vector_impl::_Vector_impl (6 samples, 0.31%)</title><rect x="963.3" y="981" width="3.7" height="15.0" fill="rgb(235,70,35)" rx="2" ry="2" />
<text  x="966.29" y="991.5" ></text>
</g>
<g >
<title>rmw_cyclonedds_cpp::CDRWriter::lookup_many_trivially_serialized (7 samples, 0.37%)</title><rect x="807.2" y="789" width="4.3" height="15.0" fill="rgb(231,71,7)" rx="2" ry="2" />
<text  x="810.20" y="799.5" ></text>
</g>
<g >
<title>std::_Bind&lt;void  (683 samples, 35.85%)</title><rect x="555.1" y="1125" width="423.1" height="15.0" fill="rgb(234,115,4)" rx="2" ry="2" />
<text  x="558.09" y="1135.5" >std::_Bind&lt;void </text>
</g>
<g >
<title>rclcpp::Context::is_valid (4 samples, 0.21%)</title><rect x="1105.1" y="1157" width="2.5" height="15.0" fill="rgb(241,74,50)" rx="2" ry="2" />
<text  x="1108.14" y="1167.5" ></text>
</g>
<g >
<title>[libstdc++.so.6.0.28] (2 samples, 0.10%)</title><rect x="898.9" y="805" width="1.2" height="15.0" fill="rgb(213,199,11)" rx="2" ry="2" />
<text  x="901.87" y="815.5" ></text>
</g>
<g >
<title>__GI___pthread_mutex_lock (3 samples, 0.16%)</title><rect x="453.5" y="1157" width="1.9" height="15.0" fill="rgb(234,181,0)" rx="2" ry="2" />
<text  x="456.51" y="1167.5" ></text>
</g>
<g >
<title>nn_freelist_pop (3 samples, 0.16%)</title><rect x="912.5" y="901" width="1.9" height="15.0" fill="rgb(244,58,28)" rx="2" ry="2" />
<text  x="915.50" y="911.5" ></text>
</g>
<g >
<title>[librmw_cyclonedds_cpp.so] (2 samples, 0.10%)</title><rect x="474.6" y="1173" width="1.2" height="15.0" fill="rgb(208,27,13)" rx="2" ry="2" />
<text  x="477.57" y="1183.5" ></text>
</g>
<g >
<title>__GI___pthread_mutex_trylock (1 samples, 0.05%)</title><rect x="755.2" y="869" width="0.6" height="15.0" fill="rgb(250,188,12)" rx="2" ry="2" />
<text  x="758.17" y="879.5" ></text>
</g>
<g >
<title>ddsrt_chh_lookup_internal (2 samples, 0.10%)</title><rect x="99.2" y="1253" width="1.2" height="15.0" fill="rgb(211,76,50)" rx="2" ry="2" />
<text  x="102.20" y="1263.5" ></text>
</g>
<g >
<title>__sched_text_start (161 samples, 8.45%)</title><rect x="246.0" y="1013" width="99.7" height="15.0" fill="rgb(233,62,51)" rx="2" ry="2" />
<text  x="249.00" y="1023.5" >__sched_text..</text>
</g>
<g >
<title>rmw_cyclonedds_cpp::CDRWriter::serialize_top_level (42 samples, 2.20%)</title><rect x="828.3" y="885" width="26.0" height="15.0" fill="rgb(242,95,28)" rx="2" ry="2" />
<text  x="831.26" y="895.5" >r..</text>
</g>
<g >
<title>perf_event_sched_in (1 samples, 0.05%)</title><rect x="1169.6" y="981" width="0.6" height="15.0" fill="rgb(218,184,27)" rx="2" ry="2" />
<text  x="1172.56" y="991.5" ></text>
</g>
<g >
<title>create_thread_wrapper (26 samples, 1.36%)</title><rect x="21.1" y="1221" width="16.2" height="15.0" fill="rgb(246,201,3)" rx="2" ry="2" />
<text  x="24.15" y="1231.5" ></text>
</g>
<g >
<title>ddsi_udp_conn_write (2 samples, 0.10%)</title><rect x="1177.0" y="1125" width="1.2" height="15.0" fill="rgb(251,78,42)" rx="2" ry="2" />
<text  x="1179.99" y="1135.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;serdata_rmw, std::default_delete&lt;serdata_rmw&gt; &gt;::_M_ptr (1 samples, 0.05%)</title><rect x="526.6" y="1253" width="0.6" height="15.0" fill="rgb(218,161,28)" rx="2" ry="2" />
<text  x="529.60" y="1263.5" ></text>
</g>
<g >
<title>__ip_finish_output (14 samples, 0.73%)</title><rect x="1120.0" y="1045" width="8.7" height="15.0" fill="rgb(215,0,7)" rx="2" ry="2" />
<text  x="1123.01" y="1055.5" ></text>
</g>
<g >
<title>std::__relocate_a&lt;int*, int*, std::allocator&lt;int&gt; &gt; (2 samples, 0.10%)</title><rect x="956.5" y="981" width="1.2" height="15.0" fill="rgb(244,46,7)" rx="2" ry="2" />
<text  x="959.48" y="991.5" ></text>
</g>
<g >
<title>std::vector&lt;long, std::allocator&lt;long&gt; &gt;::_S_max_size (6 samples, 0.31%)</title><rect x="495.6" y="1157" width="3.7" height="15.0" fill="rgb(219,75,8)" rx="2" ry="2" />
<text  x="498.63" y="1167.5" ></text>
</g>
<g >
<title>__alloc_skb (14 samples, 0.73%)</title><rect x="625.1" y="581" width="8.7" height="15.0" fill="rgb(235,2,15)" rx="2" ry="2" />
<text  x="628.09" y="591.5" ></text>
</g>
<g >
<title>all (1,905 samples, 100%)</title><rect x="10.0" y="1301" width="1180.0" height="15.0" fill="rgb(250,137,6)" rx="2" ry="2" />
<text  x="13.00" y="1311.5" ></text>
</g>
<g >
<title>schedule (8 samples, 0.42%)</title><rect x="1110.7" y="1173" width="5.0" height="15.0" fill="rgb(250,104,6)" rx="2" ry="2" />
<text  x="1113.71" y="1183.5" ></text>
</g>
<g >
<title>do_page_fault (1 samples, 0.05%)</title><rect x="42.8" y="1157" width="0.6" height="15.0" fill="rgb(218,186,23)" rx="2" ry="2" />
<text  x="45.83" y="1167.5" ></text>
</g>
<g >
<title>std::vector&lt;long, std::allocator&lt;long&gt; &gt;::resize (44 samples, 2.31%)</title><rect x="479.5" y="1205" width="27.3" height="15.0" fill="rgb(213,222,40)" rx="2" ry="2" />
<text  x="482.52" y="1215.5" >s..</text>
</g>
<g >
<title>rclcpp::memory_strategies::allocator_memory_strategy::AllocatorMemoryStrategy&lt;std::allocator&lt;void&gt; &gt;::number_of_ready_services (2 samples, 0.10%)</title><rect x="1064.9" y="1141" width="1.2" height="15.0" fill="rgb(219,190,13)" rx="2" ry="2" />
<text  x="1067.88" y="1151.5" ></text>
</g>
<g >
<title>perf_swevent_add (4 samples, 0.21%)</title><rect x="277.6" y="869" width="2.5" height="15.0" fill="rgb(226,38,33)" rx="2" ry="2" />
<text  x="280.59" y="879.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (2 samples, 0.10%)</title><rect x="1177.0" y="1061" width="1.2" height="15.0" fill="rgb(249,151,19)" rx="2" ry="2" />
<text  x="1179.99" y="1071.5" ></text>
</g>
<g >
<title>std::__detail::_Map_base&lt;rmw_cyclonedds_cpp::CDRWriter::CacheKey, std::pair&lt;rmw_cyclonedds_cpp::CDRWriter::CacheKey const, bool&gt;, std::allocator&lt;std::pair&lt;rmw_cyclonedds_cpp::CDRWriter::CacheKey const, bool&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;rmw_cyclonedds_cpp::CDRWriter::CacheKey&gt;, rmw_cyclonedds_cpp::CDRWriter::CacheKey::Hash, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt;, true&gt;::at (1 samples, 0.05%)</title><rect x="122.7" y="1253" width="0.7" height="15.0" fill="rgb(225,101,30)" rx="2" ry="2" />
<text  x="125.73" y="1263.5" ></text>
</g>
<g >
<title>rmw_trigger_guard_condition (19 samples, 1.00%)</title><rect x="539.6" y="1141" width="11.8" height="15.0" fill="rgb(223,151,37)" rx="2" ry="2" />
<text  x="542.61" y="1151.5" ></text>
</g>
<g >
<title>__x64_sys_futex (6 samples, 0.31%)</title><rect x="16.8" y="1093" width="3.7" height="15.0" fill="rgb(237,18,43)" rx="2" ry="2" />
<text  x="19.81" y="1103.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, rmw_event_type_t const, unsigned int&gt; (1 samples, 0.05%)</title><rect x="421.9" y="1093" width="0.6" height="15.0" fill="rgb(246,3,40)" rx="2" ry="2" />
<text  x="424.92" y="1103.5" ></text>
</g>
<g >
<title>__perf_event_task_sched_in (21 samples, 1.10%)</title><rect x="23.6" y="949" width="13.0" height="15.0" fill="rgb(207,211,16)" rx="2" ry="2" />
<text  x="26.63" y="959.5" ></text>
</g>
<g >
<title>rmw_cyclonedds_cpp::CDRWriter::serialize_many (10 samples, 0.52%)</title><rect x="807.2" y="805" width="6.2" height="15.0" fill="rgb(229,178,38)" rx="2" ry="2" />
<text  x="810.20" y="815.5" ></text>
</g>
<g >
<title>whc_node_hash (1 samples, 0.05%)</title><rect x="893.9" y="869" width="0.6" height="15.0" fill="rgb(243,92,54)" rx="2" ry="2" />
<text  x="896.92" y="879.5" ></text>
</g>
<g >
<title>dequeue_entity (4 samples, 0.21%)</title><rect x="1147.9" y="965" width="2.5" height="15.0" fill="rgb(254,225,35)" rx="2" ry="2" />
<text  x="1150.88" y="975.5" ></text>
</g>
<g >
<title>write_pmd_message (1 samples, 0.05%)</title><rect x="1180.1" y="1189" width="0.6" height="15.0" fill="rgb(248,150,49)" rx="2" ry="2" />
<text  x="1183.09" y="1199.5" ></text>
</g>
<g >
<title>ipv4_pktinfo_prepare (5 samples, 0.26%)</title><rect x="713.7" y="261" width="3.1" height="15.0" fill="rgb(214,121,43)" rx="2" ry="2" />
<text  x="716.66" y="271.5" ></text>
</g>
<g >
<title>perf_swevent_add (1 samples, 0.05%)</title><rect x="1114.4" y="1013" width="0.6" height="15.0" fill="rgb(212,164,31)" rx="2" ry="2" />
<text  x="1117.43" y="1023.5" ></text>
</g>
<g >
<title>ksoftirqd_running (1 samples, 0.05%)</title><rect x="722.3" y="533" width="0.7" height="15.0" fill="rgb(241,144,18)" rx="2" ry="2" />
<text  x="725.34" y="543.5" ></text>
</g>
<g >
<title>flexible_sched_in (2 samples, 0.10%)</title><rect x="1152.2" y="917" width="1.3" height="15.0" fill="rgb(247,33,14)" rx="2" ry="2" />
<text  x="1155.22" y="927.5" ></text>
</g>
<g >
<title>ip_route_output_key_hash_rcu (2 samples, 0.10%)</title><rect x="655.4" y="645" width="1.3" height="15.0" fill="rgb(238,161,24)" rx="2" ry="2" />
<text  x="658.44" y="655.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;rmw_event_type_t, std::pair&lt;rmw_event_type_t const, unsigned int&gt;, std::allocator&lt;std::pair&lt;rmw_event_type_t const, unsigned int&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;rmw_event_type_t&gt;, std::hash&lt;rmw_event_type_t&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_bucket_begin (3 samples, 0.16%)</title><rect x="409.5" y="1141" width="1.9" height="15.0" fill="rgb(206,84,33)" rx="2" ry="2" />
<text  x="412.53" y="1151.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;rmw_cyclonedds_cpp::CDRWriter::CacheKey, std::pair&lt;rmw_cyclonedds_cpp::CDRWriter::CacheKey const, bool&gt;, std::allocator&lt;std::pair&lt;rmw_cyclonedds_cpp::CDRWriter::CacheKey const, bool&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;rmw_cyclonedds_cpp::CDRWriter::CacheKey&gt;, rmw_cyclonedds_cpp::CDRWriter::CacheKey::Hash, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_find_before_node (1 samples, 0.05%)</title><rect x="850.6" y="709" width="0.6" height="15.0" fill="rgb(212,210,41)" rx="2" ry="2" />
<text  x="853.56" y="719.5" ></text>
</g>
<g >
<title>rcl_clock_get_now (3 samples, 0.16%)</title><rect x="153.1" y="1221" width="1.8" height="15.0" fill="rgb(236,42,53)" rx="2" ry="2" />
<text  x="156.09" y="1231.5" ></text>
</g>
<g >
<title>main (3 samples, 0.16%)</title><rect x="143.2" y="1253" width="1.8" height="15.0" fill="rgb(214,128,46)" rx="2" ry="2" />
<text  x="146.18" y="1263.5" ></text>
</g>
<g >
<title>do_syscall_64 (8 samples, 0.42%)</title><rect x="37.3" y="1093" width="4.9" height="15.0" fill="rgb(218,9,15)" rx="2" ry="2" />
<text  x="40.25" y="1103.5" ></text>
</g>
<g >
<title>get_futex_key_refs.isra.0 (1 samples, 0.05%)</title><rect x="1187.5" y="1189" width="0.6" height="15.0" fill="rgb(220,12,53)" rx="2" ry="2" />
<text  x="1190.52" y="1199.5" ></text>
</g>
<g >
<title>encode_datawriter_submsg (1 samples, 0.05%)</title><rect x="142.6" y="1253" width="0.6" height="15.0" fill="rgb(210,91,29)" rx="2" ry="2" />
<text  x="145.56" y="1263.5" ></text>
</g>
<g >
<title>__GI___libc_malloc (2 samples, 0.10%)</title><rect x="1020.9" y="1109" width="1.2" height="15.0" fill="rgb(253,66,18)" rx="2" ry="2" />
<text  x="1023.90" y="1119.5" ></text>
</g>
<g >
<title>update_min_vruntime (4 samples, 0.21%)</title><rect x="256.5" y="949" width="2.5" height="15.0" fill="rgb(229,46,37)" rx="2" ry="2" />
<text  x="259.53" y="959.5" ></text>
</g>
<g >
<title>[libddsc.so.0.8.0] (5 samples, 0.26%)</title><rect x="881.5" y="917" width="3.1" height="15.0" fill="rgb(224,118,30)" rx="2" ry="2" />
<text  x="884.53" y="927.5" ></text>
</g>
<g >
<title>schedule (6 samples, 0.31%)</title><rect x="1183.8" y="1173" width="3.7" height="15.0" fill="rgb(210,223,52)" rx="2" ry="2" />
<text  x="1186.81" y="1183.5" ></text>
</g>
<g >
<title>std::__detail::_Map_base&lt;rmw_event_type_t, std::pair&lt;rmw_event_type_t const, unsigned int&gt;, std::allocator&lt;std::pair&lt;rmw_event_type_t const, unsigned int&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;rmw_event_type_t&gt;, std::hash&lt;rmw_event_type_t&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt;, true&gt;::at (1 samples, 0.05%)</title><rect x="123.4" y="1253" width="0.6" height="15.0" fill="rgb(220,135,35)" rx="2" ry="2" />
<text  x="126.35" y="1263.5" ></text>
</g>
<g >
<title>[libstdc++.so.6.0.28] (1 samples, 0.05%)</title><rect x="855.5" y="885" width="0.6" height="15.0" fill="rgb(236,115,23)" rx="2" ry="2" />
<text  x="858.51" y="895.5" ></text>
</g>
<g >
<title>[libddsc.so.0.8.0] (1 samples, 0.05%)</title><rect x="1138.6" y="1189" width="0.6" height="15.0" fill="rgb(217,129,25)" rx="2" ry="2" />
<text  x="1141.59" y="1199.5" ></text>
</g>
<g >
<title>ip_generic_getfrag (2 samples, 0.10%)</title><rect x="635.0" y="645" width="1.2" height="15.0" fill="rgb(247,53,20)" rx="2" ry="2" />
<text  x="638.00" y="655.5" ></text>
</g>
<g >
<title>try_to_wake_up (1 samples, 0.05%)</title><rect x="1180.1" y="357" width="0.6" height="15.0" fill="rgb(244,48,32)" rx="2" ry="2" />
<text  x="1183.09" y="367.5" ></text>
</g>
<g >
<title>rmw_cyclonedds_cpp::CDRWriter::lookup_trivially_serialized (2 samples, 0.10%)</title><rect x="811.5" y="773" width="1.3" height="15.0" fill="rgb(240,166,35)" rx="2" ry="2" />
<text  x="814.53" y="783.5" ></text>
</g>
<g >
<title>futex_wait_queue_me (178 samples, 9.34%)</title><rect x="236.7" y="1045" width="110.3" height="15.0" fill="rgb(253,93,15)" rx="2" ry="2" />
<text  x="239.71" y="1055.5" >futex_wait_qu..</text>
</g>
<g >
<title>udp_send_skb.isra.0 (2 samples, 0.10%)</title><rect x="1177.0" y="917" width="1.2" height="15.0" fill="rgb(227,23,3)" rx="2" ry="2" />
<text  x="1179.99" y="927.5" ></text>
</g>
<g >
<title>ip_local_out (121 samples, 6.35%)</title><rect x="659.2" y="629" width="74.9" height="15.0" fill="rgb(235,31,12)" rx="2" ry="2" />
<text  x="662.15" y="639.5" >ip_local..</text>
</g>
<g >
<title>udp_poll (1 samples, 0.05%)</title><rect x="36.6" y="1029" width="0.7" height="15.0" fill="rgb(242,147,6)" rx="2" ry="2" />
<text  x="39.64" y="1039.5" ></text>
</g>
<g >
<title>rmw_cyclonedds_cpp::CDRWriter::serialize (40 samples, 2.10%)</title><rect x="829.5" y="869" width="24.8" height="15.0" fill="rgb(251,218,29)" rx="2" ry="2" />
<text  x="832.50" y="879.5" >r..</text>
</g>
<g >
<title>std::__detail::_Hashtable_base&lt;rmw_cyclonedds_cpp::CDRWriter::CacheKey, std::pair&lt;rmw_cyclonedds_cpp::CDRWriter::CacheKey const, bool&gt;, std::__detail::_Select1st, std::equal_to&lt;rmw_cyclonedds_cpp::CDRWriter::CacheKey&gt;, rmw_cyclonedds_cpp::CDRWriter::CacheKey::Hash, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_equals (4 samples, 0.21%)</title><rect x="809.1" y="693" width="2.4" height="15.0" fill="rgb(249,83,52)" rx="2" ry="2" />
<text  x="812.06" y="703.5" ></text>
</g>
<g >
<title>rclcpp::memory_strategies::allocator_memory_strategy::AllocatorMemoryStrategy&lt;std::allocator&lt;void&gt; &gt;::remove_null_handles (24 samples, 1.26%)</title><rect x="1068.6" y="1141" width="14.9" height="15.0" fill="rgb(228,125,7)" rx="2" ry="2" />
<text  x="1071.59" y="1151.5" ></text>
</g>
<g >
<title>operator delete (1 samples, 0.05%)</title><rect x="970.7" y="949" width="0.6" height="15.0" fill="rgb(207,31,10)" rx="2" ry="2" />
<text  x="973.72" y="959.5" ></text>
</g>
<g >
<title>__local_bh_enable_ip (11 samples, 0.58%)</title><rect x="1121.2" y="1013" width="6.9" height="15.0" fill="rgb(236,64,38)" rx="2" ry="2" />
<text  x="1124.24" y="1023.5" ></text>
</g>
<g >
<title>do_softirq_own_stack (11 samples, 0.58%)</title><rect x="1121.2" y="981" width="6.9" height="15.0" fill="rgb(205,36,24)" rx="2" ry="2" />
<text  x="1124.24" y="991.5" ></text>
</g>
<g >
<title>rclcpp::memory_strategies::allocator_memory_strategy::AllocatorMemoryStrategy&lt;std::allocator&lt;void&gt; &gt;::get_next_waitable (2 samples, 0.10%)</title><rect x="1102.7" y="1157" width="1.2" height="15.0" fill="rgb(207,107,23)" rx="2" ry="2" />
<text  x="1105.66" y="1167.5" ></text>
</g>
<g >
<title>whc_idxnode_eq_key (1 samples, 0.05%)</title><rect x="894.5" y="869" width="0.7" height="15.0" fill="rgb(229,60,16)" rx="2" ry="2" />
<text  x="897.54" y="879.5" ></text>
</g>
<g >
<title>__memcmp_avx2_movbe (3 samples, 0.16%)</title><rect x="440.5" y="1189" width="1.9" height="15.0" fill="rgb(222,191,3)" rx="2" ry="2" />
<text  x="443.50" y="1199.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, byte*, std::default_delete&lt;byte []&gt; &gt;::_Tuple_impl (2 samples, 0.10%)</title><rect x="871.0" y="837" width="1.2" height="15.0" fill="rgb(211,132,1)" rx="2" ry="2" />
<text  x="874.00" y="847.5" ></text>
</g>
<g >
<title>start_thread (7 samples, 0.37%)</title><rect x="16.2" y="1253" width="4.3" height="15.0" fill="rgb(217,111,33)" rx="2" ry="2" />
<text  x="19.19" y="1263.5" ></text>
</g>
<g >
<title>rcl_wait_set_add_timer (7 samples, 0.37%)</title><rect x="1040.1" y="1125" width="4.3" height="15.0" fill="rgb(248,199,43)" rx="2" ry="2" />
<text  x="1043.10" y="1135.5" ></text>
</g>
<g >
<title>rcutils_logging_get_logger_leveln (21 samples, 1.10%)</title><rect x="510.5" y="1221" width="13.0" height="15.0" fill="rgb(216,226,34)" rx="2" ry="2" />
<text  x="513.49" y="1231.5" ></text>
</g>
<g >
<title>ip_generic_getfrag (1 samples, 0.05%)</title><rect x="1189.4" y="1093" width="0.6" height="15.0" fill="rgb(228,214,50)" rx="2" ry="2" />
<text  x="1192.38" y="1103.5" ></text>
</g>
<g >
<title>schedule (6 samples, 0.31%)</title><rect x="1169.6" y="1045" width="3.7" height="15.0" fill="rgb(241,50,17)" rx="2" ry="2" />
<text  x="1172.56" y="1055.5" ></text>
</g>
<g >
<title>is_event_supported (56 samples, 2.94%)</title><rect x="402.1" y="1189" width="34.7" height="15.0" fill="rgb(212,40,16)" rx="2" ry="2" />
<text  x="405.09" y="1199.5" >is..</text>
</g>
<g >
<title>std::__detail::_Hashtable_base&lt;rmw_cyclonedds_cpp::CDRWriter::CacheKey, std::pair&lt;rmw_cyclonedds_cpp::CDRWriter::CacheKey const, bool&gt;, std::__detail::_Select1st, std::equal_to&lt;rmw_cyclonedds_cpp::CDRWriter::CacheKey&gt;, rmw_cyclonedds_cpp::CDRWriter::CacheKey::Hash, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_equals (2 samples, 0.10%)</title><rect x="845.0" y="709" width="1.2" height="15.0" fill="rgb(230,207,54)" rx="2" ry="2" />
<text  x="847.98" y="719.5" ></text>
</g>
<g >
<title>[librcl.so] (2 samples, 0.10%)</title><rect x="1037.0" y="1093" width="1.2" height="15.0" fill="rgb(230,26,32)" rx="2" ry="2" />
<text  x="1040.00" y="1103.5" ></text>
</g>
<g >
<title>__GI___pthread_mutex_lock (3 samples, 0.16%)</title><rect x="549.5" y="1061" width="1.9" height="15.0" fill="rgb(220,203,49)" rx="2" ry="2" />
<text  x="552.52" y="1071.5" ></text>
</g>
<g >
<title>std::forward&lt;long&gt; (1 samples, 0.05%)</title><rect x="477.7" y="1157" width="0.6" height="15.0" fill="rgb(211,120,23)" rx="2" ry="2" />
<text  x="480.66" y="1167.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;long&gt;::max_size (2 samples, 0.10%)</title><rect x="498.1" y="1125" width="1.2" height="15.0" fill="rgb(213,138,21)" rx="2" ry="2" />
<text  x="501.10" y="1135.5" ></text>
</g>
<g >
<title>[libddsc.so.0.8.0] (2 samples, 0.10%)</title><rect x="572.4" y="949" width="1.3" height="15.0" fill="rgb(207,73,22)" rx="2" ry="2" />
<text  x="575.44" y="959.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;int&gt;::max_size (2 samples, 0.10%)</title><rect x="959.0" y="965" width="1.2" height="15.0" fill="rgb(222,74,19)" rx="2" ry="2" />
<text  x="961.96" y="975.5" ></text>
</g>
<g >
<title>___sys_sendmsg (2 samples, 0.10%)</title><rect x="1177.0" y="997" width="1.2" height="15.0" fill="rgb(237,2,18)" rx="2" ry="2" />
<text  x="1179.99" y="1007.5" ></text>
</g>
<g >
<title>aa_sk_perm (3 samples, 0.16%)</title><rect x="737.8" y="661" width="1.9" height="15.0" fill="rgb(225,136,38)" rx="2" ry="2" />
<text  x="740.82" y="671.5" ></text>
</g>
<g >
<title>rcl_publish (3 samples, 0.16%)</title><rect x="143.2" y="1029" width="1.8" height="15.0" fill="rgb(211,218,14)" rx="2" ry="2" />
<text  x="146.18" y="1039.5" ></text>
</g>
<g >
<title>__virt_addr_valid (6 samples, 0.31%)</title><rect x="619.5" y="597" width="3.7" height="15.0" fill="rgb(226,220,37)" rx="2" ry="2" />
<text  x="622.51" y="607.5" ></text>
</g>
<g >
<title>nn_xmsg_submsg_setnext (1 samples, 0.05%)</title><rect x="911.3" y="901" width="0.6" height="15.0" fill="rgb(249,45,4)" rx="2" ry="2" />
<text  x="914.26" y="911.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_base&lt;rmw_cyclonedds_cpp::CDRWriter::CacheKey, std::pair&lt;rmw_cyclonedds_cpp::CDRWriter::CacheKey const, bool&gt;, std::__detail::_Select1st, std::equal_to&lt;rmw_cyclonedds_cpp::CDRWriter::CacheKey&gt;, rmw_cyclonedds_cpp::CDRWriter::CacheKey::Hash, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_equals (4 samples, 0.21%)</title><rect x="838.2" y="741" width="2.4" height="15.0" fill="rgb(250,19,22)" rx="2" ry="2" />
<text  x="841.17" y="751.5" ></text>
</g>
<g >
<title>[librmw_cyclonedds_cpp.so] (2 samples, 0.10%)</title><rect x="861.7" y="837" width="1.2" height="15.0" fill="rgb(254,175,10)" rx="2" ry="2" />
<text  x="864.71" y="847.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;long&gt; &gt;::max_size (4 samples, 0.21%)</title><rect x="496.9" y="1141" width="2.4" height="15.0" fill="rgb(245,133,46)" rx="2" ry="2" />
<text  x="499.87" y="1151.5" ></text>
</g>
<g >
<title>ttwu_do_activate (24 samples, 1.26%)</title><rect x="696.3" y="117" width="14.9" height="15.0" fill="rgb(206,213,23)" rx="2" ry="2" />
<text  x="699.32" y="127.5" ></text>
</g>
<g >
<title>group_sched_in (9 samples, 0.47%)</title><rect x="277.6" y="901" width="5.6" height="15.0" fill="rgb(212,77,32)" rx="2" ry="2" />
<text  x="280.59" y="911.5" ></text>
</g>
<g >
<title>__libc_sendmsg (2 samples, 0.10%)</title><rect x="1177.0" y="1093" width="1.2" height="15.0" fill="rgb(206,186,49)" rx="2" ry="2" />
<text  x="1179.99" y="1103.5" ></text>
</g>
<g >
<title>std::__uninitialized_default_n_a&lt;int*, unsigned long, int&gt; (7 samples, 0.37%)</title><rect x="950.3" y="1013" width="4.3" height="15.0" fill="rgb(217,23,53)" rx="2" ry="2" />
<text  x="953.28" y="1023.5" ></text>
</g>
<g >
<title>std::_Rb_tree_increment (1 samples, 0.05%)</title><rect x="1060.5" y="1125" width="0.7" height="15.0" fill="rgb(228,161,9)" rx="2" ry="2" />
<text  x="1063.54" y="1135.5" ></text>
</g>
<g >
<title>call_rcu (1 samples, 0.05%)</title><rect x="713.7" y="245" width="0.6" height="15.0" fill="rgb(217,205,22)" rx="2" ry="2" />
<text  x="716.66" y="255.5" ></text>
</g>
<g >
<title>[librcutils.so] (1 samples, 0.05%)</title><rect x="175.4" y="1205" width="0.6" height="15.0" fill="rgb(242,2,38)" rx="2" ry="2" />
<text  x="178.39" y="1215.5" ></text>
</g>
<g >
<title>perf_pmu_enable.part.0 (6 samples, 0.31%)</title><rect x="37.9" y="853" width="3.7" height="15.0" fill="rgb(249,62,12)" rx="2" ry="2" />
<text  x="40.87" y="863.5" ></text>
</g>
<g >
<title>dds_waitset_wait (1 samples, 0.05%)</title><rect x="202.6" y="1205" width="0.7" height="15.0" fill="rgb(241,141,0)" rx="2" ry="2" />
<text  x="205.64" y="1215.5" ></text>
</g>
<g >
<title>autoremove_wake_function (33 samples, 1.73%)</title><rect x="690.7" y="165" width="20.5" height="15.0" fill="rgb(206,107,6)" rx="2" ry="2" />
<text  x="693.75" y="175.5" ></text>
</g>
<g >
<title>rmw_cyclonedds_cpp::DataCursor::offset (1 samples, 0.05%)</title><rect x="846.2" y="741" width="0.6" height="15.0" fill="rgb(230,1,9)" rx="2" ry="2" />
<text  x="849.22" y="751.5" ></text>
</g>
<g >
<title>rclcpp::memory_strategies::allocator_memory_strategy::AllocatorMemoryStrategy&lt;std::allocator&lt;void&gt; &gt;::collect_entities (20 samples, 1.05%)</title><rect x="1048.8" y="1141" width="12.4" height="15.0" fill="rgb(208,158,52)" rx="2" ry="2" />
<text  x="1051.77" y="1151.5" ></text>
</g>
<g >
<title>dev_hard_start_xmit (1 samples, 0.05%)</title><rect x="732.2" y="533" width="0.7" height="15.0" fill="rgb(212,169,27)" rx="2" ry="2" />
<text  x="735.25" y="543.5" ></text>
</g>
<g >
<title>schedule (28 samples, 1.47%)</title><rect x="1147.9" y="1029" width="17.3" height="15.0" fill="rgb(239,218,37)" rx="2" ry="2" />
<text  x="1150.88" y="1039.5" ></text>
</g>
<g >
<title>std::unordered_map&lt;rmw_cyclonedds_cpp::CDRWriter::CacheKey, bool, rmw_cyclonedds_cpp::CDRWriter::CacheKey::Hash, std::equal_to&lt;rmw_cyclonedds_cpp::CDRWriter::CacheKey&gt;, std::allocator&lt;std::pair&lt;rmw_cyclonedds_cpp::CDRWriter::CacheKey const, bool&gt; &gt; &gt;::at (7 samples, 0.37%)</title><rect x="785.5" y="805" width="4.4" height="15.0" fill="rgb(207,9,40)" rx="2" ry="2" />
<text  x="788.52" y="815.5" ></text>
</g>
<g >
<title>[librmw_cyclonedds_cpp.so] (1 samples, 0.05%)</title><rect x="841.9" y="789" width="0.6" height="15.0" fill="rgb(234,45,46)" rx="2" ry="2" />
<text  x="844.88" y="799.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;byte [], std::default_delete&lt;byte []&gt; &gt;::get (1 samples, 0.05%)</title><rect x="858.6" y="885" width="0.6" height="15.0" fill="rgb(220,59,16)" rx="2" ry="2" />
<text  x="861.61" y="895.5" ></text>
</g>
<g >
<title>update_rq_clock (2 samples, 0.10%)</title><rect x="341.4" y="917" width="1.2" height="15.0" fill="rgb(213,93,2)" rx="2" ry="2" />
<text  x="344.39" y="927.5" ></text>
</g>
<g >
<title>udp_queue_rcv_one_skb (1 samples, 0.05%)</title><rect x="1123.7" y="757" width="0.6" height="15.0" fill="rgb(246,166,26)" rx="2" ry="2" />
<text  x="1126.72" y="767.5" ></text>
</g>
<g >
<title>__gthread_active_p (1 samples, 0.05%)</title><rect x="97.3" y="1253" width="0.7" height="15.0" fill="rgb(206,164,8)" rx="2" ry="2" />
<text  x="100.34" y="1263.5" ></text>
</g>
<g >
<title>native_write_msr (1 samples, 0.05%)</title><rect x="20.5" y="1061" width="0.6" height="15.0" fill="rgb(242,31,7)" rx="2" ry="2" />
<text  x="23.53" y="1071.5" ></text>
</g>
<g >
<title>__fget (1 samples, 0.05%)</title><rect x="745.3" y="693" width="0.6" height="15.0" fill="rgb(208,160,25)" rx="2" ry="2" />
<text  x="748.25" y="703.5" ></text>
</g>
<g >
<title>__calc_delta (1 samples, 0.05%)</title><rect x="1149.1" y="933" width="0.6" height="15.0" fill="rgb(223,194,19)" rx="2" ry="2" />
<text  x="1152.12" y="943.5" ></text>
</g>
<g >
<title>rcutils_logging_get_logger_effective_level (15 samples, 0.79%)</title><rect x="172.9" y="1221" width="9.3" height="15.0" fill="rgb(245,157,10)" rx="2" ry="2" />
<text  x="175.91" y="1231.5" ></text>
</g>
<g >
<title>__GI___pthread_mutex_unlock (1 samples, 0.05%)</title><rect x="392.2" y="1109" width="0.6" height="15.0" fill="rgb(232,165,33)" rx="2" ry="2" />
<text  x="395.18" y="1119.5" ></text>
</g>
<g >
<title>[librmw_cyclonedds_cpp.so] (1 samples, 0.05%)</title><rect x="870.4" y="853" width="0.6" height="15.0" fill="rgb(246,10,31)" rx="2" ry="2" />
<text  x="873.38" y="863.5" ></text>
</g>
<g >
<title>rcutils_string_map_getn (11 samples, 0.58%)</title><rect x="513.6" y="1205" width="6.8" height="15.0" fill="rgb(252,46,34)" rx="2" ry="2" />
<text  x="516.59" y="1215.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (8 samples, 0.42%)</title><rect x="1123.1" y="837" width="5.0" height="15.0" fill="rgb(208,15,26)" rx="2" ry="2" />
<text  x="1126.10" y="847.5" ></text>
</g>
<g >
<title>__update_idle_core (1 samples, 0.05%)</title><rect x="343.9" y="981" width="0.6" height="15.0" fill="rgb(210,143,40)" rx="2" ry="2" />
<text  x="346.87" y="991.5" ></text>
</g>
<g >
<title>ipv4_mtu (1 samples, 0.05%)</title><rect x="732.9" y="565" width="0.6" height="15.0" fill="rgb(252,169,18)" rx="2" ry="2" />
<text  x="735.87" y="575.5" ></text>
</g>
<g >
<title>std::__detail::_Hash_code_base&lt;rmw_cyclonedds_cpp::CDRWriter::CacheKey, std::pair&lt;rmw_cyclonedds_cpp::CDRWriter::CacheKey const, bool&gt;, std::__detail::_Select1st, rmw_cyclonedds_cpp::CDRWriter::CacheKey::Hash, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, true&gt;::_M_extract (1 samples, 0.05%)</title><rect x="810.9" y="677" width="0.6" height="15.0" fill="rgb(227,22,17)" rx="2" ry="2" />
<text  x="813.91" y="687.5" ></text>
</g>
<g >
<title>[libddsc.so.0.8.0] (1 samples, 0.05%)</title><rect x="144.4" y="885" width="0.6" height="15.0" fill="rgb(229,38,19)" rx="2" ry="2" />
<text  x="147.41" y="895.5" ></text>
</g>
<g >
<title>serialize_into_serdata_rmw_on_demand (1 samples, 0.05%)</title><rect x="920.6" y="885" width="0.6" height="15.0" fill="rgb(238,67,51)" rx="2" ry="2" />
<text  x="923.55" y="895.5" ></text>
</g>
<g >
<title>std::mutex::lock (8 samples, 0.42%)</title><rect x="452.9" y="1189" width="4.9" height="15.0" fill="rgb(221,155,15)" rx="2" ry="2" />
<text  x="455.89" y="1199.5" ></text>
</g>
<g >
<title>whc_default_insert (28 samples, 1.47%)</title><rect x="890.2" y="901" width="17.3" height="15.0" fill="rgb(239,78,34)" rx="2" ry="2" />
<text  x="893.20" y="911.5" ></text>
</g>
<g >
<title>ip_local_out (15 samples, 0.79%)</title><rect x="1119.4" y="1093" width="9.3" height="15.0" fill="rgb(249,103,21)" rx="2" ry="2" />
<text  x="1122.39" y="1103.5" ></text>
</g>
<g >
<title>do_futex (9 samples, 0.47%)</title><rect x="1182.6" y="1221" width="5.5" height="15.0" fill="rgb(231,189,18)" rx="2" ry="2" />
<text  x="1185.57" y="1231.5" ></text>
</g>
<g >
<title>rmw_wait (525 samples, 27.56%)</title><rect x="182.2" y="1237" width="325.2" height="15.0" fill="rgb(222,129,7)" rx="2" ry="2" />
<text  x="185.20" y="1247.5" >rmw_wait</text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.05%)</title><rect x="42.2" y="1061" width="0.6" height="15.0" fill="rgb(226,85,16)" rx="2" ry="2" />
<text  x="45.21" y="1071.5" ></text>
</g>
<g >
<title>__get_index_of_key_if_exists (2 samples, 0.10%)</title><rect x="522.3" y="1189" width="1.2" height="15.0" fill="rgb(239,126,8)" rx="2" ry="2" />
<text  x="525.26" y="1199.5" ></text>
</g>
<g >
<title>dds_write (594 samples, 31.18%)</title><rect x="571.8" y="965" width="368.0" height="15.0" fill="rgb(231,8,7)" rx="2" ry="2" />
<text  x="574.82" y="975.5" >dds_write</text>
</g>
<g >
<title>check_preempt_curr (1 samples, 0.05%)</title><rect x="710.6" y="85" width="0.6" height="15.0" fill="rgb(213,195,29)" rx="2" ry="2" />
<text  x="713.57" y="95.5" ></text>
</g>
<g >
<title>udp_send_skb.isra.0 (1 samples, 0.05%)</title><rect x="1180.1" y="885" width="0.6" height="15.0" fill="rgb(228,51,10)" rx="2" ry="2" />
<text  x="1183.09" y="895.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;rmw_cyclonedds_cpp::CDRWriter::CacheKey, std::pair&lt;rmw_cyclonedds_cpp::CDRWriter::CacheKey const, bool&gt;, std::allocator&lt;std::pair&lt;rmw_cyclonedds_cpp::CDRWriter::CacheKey const, bool&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;rmw_cyclonedds_cpp::CDRWriter::CacheKey&gt;, rmw_cyclonedds_cpp::CDRWriter::CacheKey::Hash, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_bucket_index (1 samples, 0.05%)</title><rect x="808.4" y="693" width="0.7" height="15.0" fill="rgb(213,45,9)" rx="2" ry="2" />
<text  x="811.44" y="703.5" ></text>
</g>
<g >
<title>[librmw_cyclonedds_cpp.so] (1 samples, 0.05%)</title><rect x="486.3" y="1157" width="0.7" height="15.0" fill="rgb(221,63,53)" rx="2" ry="2" />
<text  x="489.34" y="1167.5" ></text>
</g>
<g >
<title>ddsrt_free (1 samples, 0.05%)</title><rect x="753.9" y="901" width="0.6" height="15.0" fill="rgb(230,94,26)" rx="2" ry="2" />
<text  x="756.93" y="911.5" ></text>
</g>
<g >
<title>[librmw_cyclonedds_cpp.so] (6 samples, 0.31%)</title><rect x="462.8" y="1157" width="3.7" height="15.0" fill="rgb(253,218,12)" rx="2" ry="2" />
<text  x="465.80" y="1167.5" ></text>
</g>
<g >
<title>[libddsc.so.0.8.0] (4 samples, 0.21%)</title><rect x="596.6" y="901" width="2.5" height="15.0" fill="rgb(224,130,16)" rx="2" ry="2" />
<text  x="599.59" y="911.5" ></text>
</g>
<g >
<title>__GI___pthread_mutex_unlock (1 samples, 0.05%)</title><rect x="202.0" y="1157" width="0.6" height="15.0" fill="rgb(214,133,36)" rx="2" ry="2" />
<text  x="205.02" y="1167.5" ></text>
</g>
<g >
<title>nn_xpack_send_real (1 samples, 0.05%)</title><rect x="1180.1" y="1157" width="0.6" height="15.0" fill="rgb(216,109,12)" rx="2" ry="2" />
<text  x="1183.09" y="1167.5" ></text>
</g>
<g >
<title>find_busiest_group (1 samples, 0.05%)</title><rect x="343.2" y="965" width="0.7" height="15.0" fill="rgb(215,213,32)" rx="2" ry="2" />
<text  x="346.25" y="975.5" ></text>
</g>
<g >
<title>nn_xmsg_new (1 samples, 0.05%)</title><rect x="1178.2" y="1157" width="0.7" height="15.0" fill="rgb(254,97,9)" rx="2" ry="2" />
<text  x="1181.23" y="1167.5" ></text>
</g>
<g >
<title>[libstd_msgs__rosidl_typesupport_introspection_cpp.so] (1 samples, 0.05%)</title><rect x="822.1" y="741" width="0.6" height="15.0" fill="rgb(234,128,31)" rx="2" ry="2" />
<text  x="825.06" y="751.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, serdata_rmw*, std::default_delete&lt;serdata_rmw&gt; &gt;::_Tuple_impl (2 samples, 0.10%)</title><rect x="875.3" y="853" width="1.3" height="15.0" fill="rgb(205,181,29)" rx="2" ry="2" />
<text  x="878.33" y="863.5" ></text>
</g>
<g >
<title>std_msgs::msg::MultiArrayLayout_&lt;std::allocator&lt;void&gt; &gt;::MultiArrayLayout_ (8 samples, 0.42%)</title><rect x="962.1" y="1029" width="4.9" height="15.0" fill="rgb(226,140,47)" rx="2" ry="2" />
<text  x="965.05" y="1039.5" ></text>
</g>
<g >
<title>ddsrt_atomic_dec32_ov (1 samples, 0.05%)</title><rect x="758.3" y="869" width="0.6" height="15.0" fill="rgb(213,63,29)" rx="2" ry="2" />
<text  x="761.26" y="879.5" ></text>
</g>
<g >
<title>__gthread_mutex_lock (1 samples, 0.05%)</title><rect x="931.7" y="853" width="0.6" height="15.0" fill="rgb(215,2,43)" rx="2" ry="2" />
<text  x="934.70" y="863.5" ></text>
</g>
<g >
<title>_raw_spin_lock (1 samples, 0.05%)</title><rect x="1146.0" y="1061" width="0.6" height="15.0" fill="rgb(235,78,35)" rx="2" ry="2" />
<text  x="1149.02" y="1071.5" ></text>
</g>
<g >
<title>[libddsc.so.0.8.0] (1 samples, 0.05%)</title><rect x="915.6" y="885" width="0.6" height="15.0" fill="rgb(223,31,4)" rx="2" ry="2" />
<text  x="918.60" y="895.5" ></text>
</g>
<g >
<title>intel_pmu_enable_all (1 samples, 0.05%)</title><rect x="283.8" y="949" width="0.6" height="15.0" fill="rgb(241,129,14)" rx="2" ry="2" />
<text  x="286.78" y="959.5" ></text>
</g>
<g >
<title>[librmw_cyclonedds_cpp.so] (2 samples, 0.10%)</title><rect x="425.0" y="1109" width="1.3" height="15.0" fill="rgb(243,125,47)" rx="2" ry="2" />
<text  x="428.01" y="1119.5" ></text>
</g>
<g >
<title>__GI___clock_gettime (1 samples, 0.05%)</title><rect x="576.8" y="933" width="0.6" height="15.0" fill="rgb(232,152,38)" rx="2" ry="2" />
<text  x="579.77" y="943.5" ></text>
</g>
<g >
<title>__skb_recv_udp (7 samples, 0.37%)</title><rect x="37.3" y="965" width="4.3" height="15.0" fill="rgb(254,116,22)" rx="2" ry="2" />
<text  x="40.25" y="975.5" ></text>
</g>
<g >
<title>futex_abstimed_wait_cancelable (202 samples, 10.60%)</title><rect x="225.6" y="1141" width="125.1" height="15.0" fill="rgb(217,220,46)" rx="2" ry="2" />
<text  x="228.56" y="1151.5" >futex_abstimed_..</text>
</g>
<g >
<title>__update_load_avg_cfs_rq (1 samples, 0.05%)</title><rect x="699.4" y="37" width="0.6" height="15.0" fill="rgb(219,64,53)" rx="2" ry="2" />
<text  x="702.42" y="47.5" ></text>
</g>
<g >
<title>nn_freelist_push (2 samples, 0.10%)</title><rect x="754.5" y="901" width="1.3" height="15.0" fill="rgb(243,180,16)" rx="2" ry="2" />
<text  x="757.55" y="911.5" ></text>
</g>
<g >
<title>std::vector&lt;rmw_cyclonedds_cpp::Member, std::allocator&lt;rmw_cyclonedds_cpp::Member&gt; &gt;::_M_range_check (3 samples, 0.16%)</title><rect x="822.7" y="805" width="1.8" height="15.0" fill="rgb(233,95,17)" rx="2" ry="2" />
<text  x="825.68" y="815.5" ></text>
</g>
<g >
<title>__GI___clone (26 samples, 1.36%)</title><rect x="21.1" y="1269" width="16.2" height="15.0" fill="rgb(251,154,11)" rx="2" ry="2" />
<text  x="24.15" y="1279.5" ></text>
</g>
<g >
<title>process_backlog (79 samples, 4.15%)</title><rect x="673.4" y="469" width="48.9" height="15.0" fill="rgb(219,20,39)" rx="2" ry="2" />
<text  x="676.40" y="479.5" >proc..</text>
</g>
<g >
<title>schedule (166 samples, 8.71%)</title><rect x="244.1" y="1029" width="102.9" height="15.0" fill="rgb(206,80,33)" rx="2" ry="2" />
<text  x="247.14" y="1039.5" >schedule</text>
</g>
<g >
<title>[librmw_cyclonedds_cpp.so] (3 samples, 0.16%)</title><rect x="500.0" y="1173" width="1.8" height="15.0" fill="rgb(239,224,18)" rx="2" ry="2" />
<text  x="502.96" y="1183.5" ></text>
</g>
<g >
<title>rcutils_steady_time_now (1 samples, 0.05%)</title><rect x="524.1" y="1253" width="0.6" height="15.0" fill="rgb(252,188,39)" rx="2" ry="2" />
<text  x="527.12" y="1263.5" ></text>
</g>
<g >
<title>do_syscall_64 (37 samples, 1.94%)</title><rect x="1145.4" y="1109" width="22.9" height="15.0" fill="rgb(224,4,36)" rx="2" ry="2" />
<text  x="1148.40" y="1119.5" >d..</text>
</g>
<g >
<title>std::__detail::_Hash_code_base&lt;rmw_cyclonedds_cpp::CDRWriter::CacheKey, std::pair&lt;rmw_cyclonedds_cpp::CDRWriter::CacheKey const, bool&gt;, std::__detail::_Select1st, rmw_cyclonedds_cpp::CDRWriter::CacheKey::Hash, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, true&gt;::_M_h2 (1 samples, 0.05%)</title><rect x="780.6" y="773" width="0.6" height="15.0" fill="rgb(225,198,0)" rx="2" ry="2" />
<text  x="783.56" y="783.5" ></text>
</g>
<g >
<title>rw_copy_check_uvector (1 samples, 0.05%)</title><rect x="742.2" y="693" width="0.6" height="15.0" fill="rgb(225,180,21)" rx="2" ry="2" />
<text  x="745.16" y="703.5" ></text>
</g>
<g >
<title>try_to_wake_up (6 samples, 0.31%)</title><rect x="1124.3" y="597" width="3.8" height="15.0" fill="rgb(232,146,20)" rx="2" ry="2" />
<text  x="1127.34" y="607.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;rmw_event_type_t, std::pair&lt;rmw_event_type_t const, unsigned int&gt;, std::allocator&lt;std::pair&lt;rmw_event_type_t const, unsigned int&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;rmw_event_type_t&gt;, std::hash&lt;rmw_event_type_t&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_bucket_index (19 samples, 1.00%)</title><rect x="411.4" y="1141" width="11.8" height="15.0" fill="rgb(226,83,7)" rx="2" ry="2" />
<text  x="414.39" y="1151.5" ></text>
</g>
<g >
<title>psi_task_change (1 samples, 0.05%)</title><rect x="42.2" y="917" width="0.6" height="15.0" fill="rgb(216,61,8)" rx="2" ry="2" />
<text  x="45.21" y="927.5" ></text>
</g>
<g >
<title>ctx_sched_in (4 samples, 0.21%)</title><rect x="1113.2" y="1093" width="2.5" height="15.0" fill="rgb(227,100,35)" rx="2" ry="2" />
<text  x="1116.19" y="1103.5" ></text>
</g>
<g >
<title>dds_entity_pin (2 samples, 0.10%)</title><rect x="542.1" y="1077" width="1.2" height="15.0" fill="rgb(247,69,13)" rx="2" ry="2" />
<text  x="545.08" y="1087.5" ></text>
</g>
<g >
<title>__skb_wait_for_more_packets (7 samples, 0.37%)</title><rect x="37.3" y="949" width="4.3" height="15.0" fill="rgb(209,172,17)" rx="2" ry="2" />
<text  x="40.25" y="959.5" ></text>
</g>
<g >
<title>writer_hbcontrol_piggyback (8 samples, 0.42%)</title><rect x="934.2" y="917" width="4.9" height="15.0" fill="rgb(248,123,12)" rx="2" ry="2" />
<text  x="937.18" y="927.5" ></text>
</g>
<g >
<title>kern_select (22 samples, 1.15%)</title><rect x="23.6" y="1093" width="13.7" height="15.0" fill="rgb(238,165,54)" rx="2" ry="2" />
<text  x="26.63" y="1103.5" ></text>
</g>
<g >
<title>rcl_publish (603 samples, 31.65%)</title><rect x="566.2" y="1013" width="373.6" height="15.0" fill="rgb(241,216,43)" rx="2" ry="2" />
<text  x="569.24" y="1023.5" >rcl_publish</text>
</g>
<g >
<title>__gthread_active_p (4 samples, 0.21%)</title><rect x="455.4" y="1157" width="2.4" height="15.0" fill="rgb(216,43,4)" rx="2" ry="2" />
<text  x="458.36" y="1167.5" ></text>
</g>
<g >
<title>sock_alloc_send_pskb (1 samples, 0.05%)</title><rect x="1117.5" y="1077" width="0.6" height="15.0" fill="rgb(246,139,10)" rx="2" ry="2" />
<text  x="1120.53" y="1087.5" ></text>
</g>
<g >
<title>__ip_finish_output (1 samples, 0.05%)</title><rect x="1180.1" y="805" width="0.6" height="15.0" fill="rgb(219,110,41)" rx="2" ry="2" />
<text  x="1183.09" y="815.5" ></text>
</g>
<g >
<title>[librcl.so] (2 samples, 0.10%)</title><rect x="151.8" y="1237" width="1.3" height="15.0" fill="rgb(213,216,8)" rx="2" ry="2" />
<text  x="154.85" y="1247.5" ></text>
</g>
<g >
<title>__libc_start_main (935 samples, 49.08%)</title><rect x="528.5" y="1253" width="579.1" height="15.0" fill="rgb(236,132,5)" rx="2" ry="2" />
<text  x="531.46" y="1263.5" >__libc_start_main</text>
</g>
<g >
<title>[librcl.so] (1 samples, 0.05%)</title><rect x="1033.3" y="1093" width="0.6" height="15.0" fill="rgb(216,155,16)" rx="2" ry="2" />
<text  x="1036.29" y="1103.5" ></text>
</g>
<g >
<title>rcl_wait_set_clear (4 samples, 0.21%)</title><rect x="1000.5" y="1141" width="2.4" height="15.0" fill="rgb(210,36,30)" rx="2" ry="2" />
<text  x="1003.46" y="1151.5" ></text>
</g>
<g >
<title>std::__detail::_Hash_code_base&lt;rmw_cyclonedds_cpp::CDRWriter::CacheKey, std::pair&lt;rmw_cyclonedds_cpp::CDRWriter::CacheKey const, bool&gt;, std::__detail::_Select1st, rmw_cyclonedds_cpp::CDRWriter::CacheKey::Hash, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, true&gt;::_M_bucket_index (2 samples, 0.10%)</title><rect x="807.2" y="709" width="1.2" height="15.0" fill="rgb(234,147,8)" rx="2" ry="2" />
<text  x="810.20" y="719.5" ></text>
</g>
<g >
<title>futex_wait (11 samples, 0.58%)</title><rect x="1108.9" y="1205" width="6.8" height="15.0" fill="rgb(213,144,33)" rx="2" ry="2" />
<text  x="1111.86" y="1215.5" ></text>
</g>
<g >
<title>std::vector&lt;CddsService*, std::allocator&lt;CddsService*&gt; &gt;::size (1 samples, 0.05%)</title><rect x="442.4" y="1189" width="0.6" height="15.0" fill="rgb(210,133,27)" rx="2" ry="2" />
<text  x="445.36" y="1199.5" ></text>
</g>
<g >
<title>netif_rx_internal (2 samples, 0.10%)</title><rect x="727.9" y="485" width="1.2" height="15.0" fill="rgb(233,61,39)" rx="2" ry="2" />
<text  x="730.91" y="495.5" ></text>
</g>
<g >
<title>rclcpp::memory_strategy::MemoryStrategy::get_timer_by_handle (8 samples, 0.42%)</title><rect x="1097.7" y="1141" width="5.0" height="15.0" fill="rgb(253,103,42)" rx="2" ry="2" />
<text  x="1100.71" y="1151.5" ></text>
</g>
<g >
<title>rcl_timer_is_ready (1 samples, 0.05%)</title><rect x="145.0" y="1253" width="0.7" height="15.0" fill="rgb(229,134,1)" rx="2" ry="2" />
<text  x="148.03" y="1263.5" ></text>
</g>
<g >
<title>[librmw_cyclonedds_cpp.so] (1 samples, 0.05%)</title><rect x="377.9" y="1189" width="0.7" height="15.0" fill="rgb(207,160,27)" rx="2" ry="2" />
<text  x="380.94" y="1199.5" ></text>
</g>
<g >
<title>rb_next (1 samples, 0.05%)</title><rect x="1151.6" y="933" width="0.6" height="15.0" fill="rgb(234,208,50)" rx="2" ry="2" />
<text  x="1154.60" y="943.5" ></text>
</g>
<g >
<title>get_futex_key (1 samples, 0.05%)</title><rect x="367.4" y="1077" width="0.6" height="15.0" fill="rgb(246,209,24)" rx="2" ry="2" />
<text  x="370.41" y="1087.5" ></text>
</g>
<g >
<title>native_queued_spin_lock_slowpath (1 samples, 0.05%)</title><rect x="1177.0" y="757" width="0.6" height="15.0" fill="rgb(219,31,0)" rx="2" ry="2" />
<text  x="1179.99" y="767.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_ebo_helper&lt;2, std::__detail::_Mod_range_hashing, true&gt;::_S_cget (1 samples, 0.05%)</title><rect x="780.6" y="757" width="0.6" height="15.0" fill="rgb(231,143,13)" rx="2" ry="2" />
<text  x="783.56" y="767.5" ></text>
</g>
<g >
<title>finish_task_switch (7 samples, 0.37%)</title><rect x="37.3" y="885" width="4.3" height="15.0" fill="rgb(224,102,26)" rx="2" ry="2" />
<text  x="40.25" y="895.5" ></text>
</g>
<g >
<title>visit_groups_merge (2 samples, 0.10%)</title><rect x="1185.0" y="1077" width="1.3" height="15.0" fill="rgb(218,229,15)" rx="2" ry="2" />
<text  x="1188.04" y="1087.5" ></text>
</g>
<g >
<title>rclcpp::memory_strategy::MemoryStrategy::get_node_by_group (1 samples, 0.05%)</title><rect x="1097.1" y="1141" width="0.6" height="15.0" fill="rgb(230,69,37)" rx="2" ry="2" />
<text  x="1100.09" y="1151.5" ></text>
</g>
<g >
<title>sockfd_lookup_light (6 samples, 0.31%)</title><rect x="744.6" y="741" width="3.8" height="15.0" fill="rgb(237,100,11)" rx="2" ry="2" />
<text  x="747.64" y="751.5" ></text>
</g>
<g >
<title>std::_Destroy&lt;int*, int&gt; (2 samples, 0.10%)</title><rect x="967.6" y="1013" width="1.3" height="15.0" fill="rgb(220,170,2)" rx="2" ry="2" />
<text  x="970.63" y="1023.5" ></text>
</g>
<g >
<title>finish_task_switch (1 samples, 0.05%)</title><rect x="20.5" y="1141" width="0.6" height="15.0" fill="rgb(210,138,9)" rx="2" ry="2" />
<text  x="23.53" y="1151.5" ></text>
</g>
<g >
<title>__get_index_of_key_if_exists (1 samples, 0.05%)</title><rect x="513.0" y="1205" width="0.6" height="15.0" fill="rgb(230,99,22)" rx="2" ry="2" />
<text  x="515.97" y="1215.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_base&lt;rmw_event_type_t, std::pair&lt;rmw_event_type_t const, unsigned int&gt;, std::__detail::_Select1st, std::equal_to&lt;rmw_event_type_t&gt;, std::hash&lt;rmw_event_type_t&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_equals (1 samples, 0.05%)</title><rect x="400.2" y="1109" width="0.7" height="15.0" fill="rgb(225,41,32)" rx="2" ry="2" />
<text  x="403.24" y="1119.5" ></text>
</g>
<g >
<title>ip_route_output_key_hash_rcu (30 samples, 1.57%)</title><rect x="636.9" y="629" width="18.5" height="15.0" fill="rgb(226,124,33)" rx="2" ry="2" />
<text  x="639.86" y="639.5" ></text>
</g>
<g >
<title>std::forward&lt;std::pair&lt;rmw_cyclonedds_cpp::CDRWriter::CacheKey const, bool&gt;&amp;&gt; (1 samples, 0.05%)</title><rect x="788.6" y="693" width="0.6" height="15.0" fill="rgb(225,125,21)" rx="2" ry="2" />
<text  x="791.61" y="703.5" ></text>
</g>
<g >
<title>dds_entity_pin (2 samples, 0.10%)</title><rect x="211.3" y="1189" width="1.3" height="15.0" fill="rgb(248,108,0)" rx="2" ry="2" />
<text  x="214.31" y="1199.5" ></text>
</g>
<g >
<title>std::function&lt;unsigned long  (2 samples, 0.10%)</title><rect x="821.4" y="789" width="1.3" height="15.0" fill="rgb(229,139,12)" rx="2" ry="2" />
<text  x="824.44" y="799.5" ></text>
</g>
<g >
<title>ctx_sched_out (1 samples, 0.05%)</title><rect x="1110.7" y="1109" width="0.6" height="15.0" fill="rgb(220,183,3)" rx="2" ry="2" />
<text  x="1113.71" y="1119.5" ></text>
</g>
<g >
<title>__GI___pthread_mutex_lock (1 samples, 0.05%)</title><rect x="931.7" y="837" width="0.6" height="15.0" fill="rgb(211,62,30)" rx="2" ry="2" />
<text  x="934.70" y="847.5" ></text>
</g>
<g >
<title>__ip_append_data.isra.0 (26 samples, 1.36%)</title><rect x="617.7" y="645" width="16.1" height="15.0" fill="rgb(224,54,30)" rx="2" ry="2" />
<text  x="620.65" y="655.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.05%)</title><rect x="1180.1" y="613" width="0.6" height="15.0" fill="rgb(213,28,30)" rx="2" ry="2" />
<text  x="1183.09" y="623.5" ></text>
</g>
<g >
<title>checked_request2size (1 samples, 0.05%)</title><rect x="1007.9" y="1093" width="0.6" height="15.0" fill="rgb(221,23,7)" rx="2" ry="2" />
<text  x="1010.89" y="1103.5" ></text>
</g>
<g >
<title>__pthread_cond_wait_common (212 samples, 11.13%)</title><rect x="219.4" y="1157" width="131.3" height="15.0" fill="rgb(251,141,31)" rx="2" ry="2" />
<text  x="222.36" y="1167.5" >__pthread_cond_w..</text>
</g>
<g >
<title>rmw_cyclonedds_cpp::ROSIDLCPP_StructValueType::get_member (3 samples, 0.16%)</title><rect x="822.7" y="837" width="1.8" height="15.0" fill="rgb(232,135,1)" rx="2" ry="2" />
<text  x="825.68" y="847.5" ></text>
</g>
<g >
<title>__lll_lock_wait (6 samples, 0.31%)</title><rect x="1169.6" y="1157" width="3.7" height="15.0" fill="rgb(234,187,19)" rx="2" ry="2" />
<text  x="1172.56" y="1167.5" ></text>
</g>
<g >
<title>ddsrt_mutex_lock (1 samples, 0.05%)</title><rect x="350.7" y="1189" width="0.6" height="15.0" fill="rgb(212,21,50)" rx="2" ry="2" />
<text  x="353.68" y="1199.5" ></text>
</g>
<g >
<title>available_idle_cpu (1 samples, 0.05%)</title><rect x="1125.0" y="549" width="0.6" height="15.0" fill="rgb(219,79,25)" rx="2" ry="2" />
<text  x="1127.96" y="559.5" ></text>
</g>
<g >
<title>rmw_cyclonedds_cpp::CDRWriter::serialize (21 samples, 1.10%)</title><rect x="840.6" y="821" width="13.1" height="15.0" fill="rgb(233,190,4)" rx="2" ry="2" />
<text  x="843.65" y="831.5" ></text>
</g>
<g >
<title>rclcpp::Publisher&lt;std_msgs::msg::Int32MultiArray_&lt;std::allocator&lt;void&gt; &gt;, std::allocator&lt;void&gt; &gt;::publish (3 samples, 0.16%)</title><rect x="143.2" y="1061" width="1.8" height="15.0" fill="rgb(230,174,3)" rx="2" ry="2" />
<text  x="146.18" y="1071.5" ></text>
</g>
<g >
<title>cpus_share_cache (1 samples, 0.05%)</title><rect x="695.7" y="85" width="0.6" height="15.0" fill="rgb(210,18,11)" rx="2" ry="2" />
<text  x="698.70" y="95.5" ></text>
</g>
<g >
<title>do_softirq.part.0 (1 samples, 0.05%)</title><rect x="1180.1" y="757" width="0.6" height="15.0" fill="rgb(213,211,19)" rx="2" ry="2" />
<text  x="1183.09" y="767.5" ></text>
</g>
<g >
<title>std::fill_n&lt;int*, unsigned long, int&gt; (7 samples, 0.37%)</title><rect x="950.3" y="965" width="4.3" height="15.0" fill="rgb(219,106,41)" rx="2" ry="2" />
<text  x="953.28" y="975.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::max_size (1 samples, 0.05%)</title><rect x="527.2" y="1253" width="0.6" height="15.0" fill="rgb(236,70,35)" rx="2" ry="2" />
<text  x="530.22" y="1263.5" ></text>
</g>
<g >
<title>std::__detail::_Hash_code_base&lt;rmw_event_type_t, std::pair&lt;rmw_event_type_t const, unsigned int&gt;, std::__detail::_Select1st, std::hash&lt;rmw_event_type_t&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false&gt;::_M_hash_code (7 samples, 0.37%)</title><rect x="423.2" y="1141" width="4.3" height="15.0" fill="rgb(234,200,41)" rx="2" ry="2" />
<text  x="426.15" y="1151.5" ></text>
</g>
<g >
<title>__GI___libc_malloc (1 samples, 0.05%)</title><rect x="132.0" y="1253" width="0.6" height="15.0" fill="rgb(211,71,21)" rx="2" ry="2" />
<text  x="135.03" y="1263.5" ></text>
</g>
<g >
<title>udp_queue_rcv_one_skb (1 samples, 0.05%)</title><rect x="1180.1" y="501" width="0.6" height="15.0" fill="rgb(212,55,41)" rx="2" ry="2" />
<text  x="1183.09" y="511.5" ></text>
</g>
<g >
<title>std::unordered_map&lt;rmw_event_type_t, unsigned int, std::hash&lt;rmw_event_type_t&gt;, std::equal_to&lt;rmw_event_type_t&gt;, std::allocator&lt;std::pair&lt;rmw_event_type_t const, unsigned int&gt; &gt; &gt;::at (1 samples, 0.05%)</title><rect x="436.8" y="1189" width="0.6" height="15.0" fill="rgb(239,109,11)" rx="2" ry="2" />
<text  x="439.78" y="1199.5" ></text>
</g>
<g >
<title>rmw_cyclonedds_cpp::CDRWriter::serialize (64 samples, 3.36%)</title><rect x="783.0" y="837" width="39.7" height="15.0" fill="rgb(236,191,15)" rx="2" ry="2" />
<text  x="786.04" y="847.5" >rmw..</text>
</g>
<g >
<title>[libstd_msgs__rosidl_typesupport_introspection_cpp.so] (2 samples, 0.10%)</title><rect x="803.5" y="709" width="1.2" height="15.0" fill="rgb(231,6,19)" rx="2" ry="2" />
<text  x="806.48" y="719.5" ></text>
</g>
<g >
<title>require_reattach&lt;CddsSubscription&gt; (12 samples, 0.63%)</title><rect x="443.0" y="1205" width="7.4" height="15.0" fill="rgb(229,38,0)" rx="2" ry="2" />
<text  x="445.98" y="1215.5" ></text>
</g>
<g >
<title>rmw_cyclonedds_cpp::CDRWriter::serialize (2 samples, 0.10%)</title><rect x="811.5" y="789" width="1.3" height="15.0" fill="rgb(220,17,32)" rx="2" ry="2" />
<text  x="814.53" y="799.5" ></text>
</g>
<g >
<title>ddsrt_avl_walk (1 samples, 0.05%)</title><rect x="42.2" y="1157" width="0.6" height="15.0" fill="rgb(219,22,8)" rx="2" ry="2" />
<text  x="45.21" y="1167.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (1 samples, 0.05%)</title><rect x="1160.3" y="933" width="0.6" height="15.0" fill="rgb(245,41,4)" rx="2" ry="2" />
<text  x="1163.27" y="943.5" ></text>
</g>
<g >
<title>x86_pmu_enable (11 samples, 0.58%)</title><rect x="1153.5" y="949" width="6.8" height="15.0" fill="rgb(224,164,26)" rx="2" ry="2" />
<text  x="1156.45" y="959.5" ></text>
</g>
<g >
<title>[[vdso]] (1 samples, 0.05%)</title><rect x="576.8" y="901" width="0.6" height="15.0" fill="rgb(234,184,13)" rx="2" ry="2" />
<text  x="579.77" y="911.5" ></text>
</g>
<g >
<title>dev_queue_xmit (1 samples, 0.05%)</title><rect x="1128.1" y="1013" width="0.6" height="15.0" fill="rgb(237,142,12)" rx="2" ry="2" />
<text  x="1131.06" y="1023.5" ></text>
</g>
<g >
<title>rcl_event_is_valid (1 samples, 0.05%)</title><rect x="102.9" y="1253" width="0.6" height="15.0" fill="rgb(245,89,41)" rx="2" ry="2" />
<text  x="105.91" y="1263.5" ></text>
</g>
<g >
<title>std::__detail::_Select1st::operator (1 samples, 0.05%)</title><rect x="526.0" y="1253" width="0.6" height="15.0" fill="rgb(212,109,11)" rx="2" ry="2" />
<text  x="528.98" y="1263.5" ></text>
</g>
<g >
<title>schedule (5 samples, 0.26%)</title><rect x="16.8" y="1029" width="3.1" height="15.0" fill="rgb(227,207,11)" rx="2" ry="2" />
<text  x="19.81" y="1039.5" ></text>
</g>
<g >
<title>_raw_spin_lock (2 samples, 0.10%)</title><rect x="1182.6" y="1205" width="1.2" height="15.0" fill="rgb(222,141,12)" rx="2" ry="2" />
<text  x="1185.57" y="1215.5" ></text>
</g>
<g >
<title>do_softirq.part.0 (81 samples, 4.25%)</title><rect x="672.2" y="533" width="50.1" height="15.0" fill="rgb(235,220,1)" rx="2" ry="2" />
<text  x="675.16" y="543.5" >do_so..</text>
</g>
<g >
<title>perf_pmu_enable.part.0 (19 samples, 1.00%)</title><rect x="24.9" y="933" width="11.7" height="15.0" fill="rgb(249,197,3)" rx="2" ry="2" />
<text  x="27.87" y="943.5" ></text>
</g>
<g >
<title>ddsrt_avl_walk (2 samples, 0.10%)</title><rect x="1177.0" y="1157" width="1.2" height="15.0" fill="rgb(207,52,25)" rx="2" ry="2" />
<text  x="1179.99" y="1167.5" ></text>
</g>
<g >
<title>[librmw_cyclonedds_cpp.so] (3 samples, 0.16%)</title><rect x="765.7" y="853" width="1.9" height="15.0" fill="rgb(229,204,35)" rx="2" ry="2" />
<text  x="768.70" y="863.5" ></text>
</g>
<g >
<title>[librclcpp.so] (1 samples, 0.05%)</title><rect x="1084.7" y="1157" width="0.6" height="15.0" fill="rgb(229,20,16)" rx="2" ry="2" />
<text  x="1087.70" y="1167.5" ></text>
</g>
<g >
<title>write_sample_eot.isra.0.constprop.0 (100 samples, 5.25%)</title><rect x="877.2" y="933" width="61.9" height="15.0" fill="rgb(253,11,32)" rx="2" ry="2" />
<text  x="880.19" y="943.5" >write_..</text>
</g>
<g >
<title>rmw_cyclonedds_cpp::CDRWriter::lookup_trivially_serialized (7 samples, 0.37%)</title><rect x="785.5" y="821" width="4.4" height="15.0" fill="rgb(249,181,8)" rx="2" ry="2" />
<text  x="788.52" y="831.5" ></text>
</g>
<g >
<title>os_startRoutineWrapper (10 samples, 0.52%)</title><rect x="10.0" y="1237" width="6.2" height="15.0" fill="rgb(208,174,20)" rx="2" ry="2" />
<text  x="13.00" y="1247.5" ></text>
</g>
<g >
<title>create_thread_wrapper (74 samples, 3.88%)</title><rect x="1136.7" y="1221" width="45.9" height="15.0" fill="rgb(225,72,11)" rx="2" ry="2" />
<text  x="1139.73" y="1231.5" >crea..</text>
</g>
<g >
<title>ddsrt_mutex_unlock (1 samples, 0.05%)</title><rect x="202.0" y="1173" width="0.6" height="15.0" fill="rgb(227,136,33)" rx="2" ry="2" />
<text  x="205.02" y="1183.5" ></text>
</g>
<g >
<title>__GI___pthread_mutex_unlock (1 samples, 0.05%)</title><rect x="984.4" y="1141" width="0.6" height="15.0" fill="rgb(247,162,23)" rx="2" ry="2" />
<text  x="987.35" y="1151.5" ></text>
</g>
<g >
<title>ddsrt_avl_walk (1 samples, 0.05%)</title><rect x="1180.1" y="1125" width="0.6" height="15.0" fill="rgb(219,111,51)" rx="2" ry="2" />
<text  x="1183.09" y="1135.5" ></text>
</g>
<g >
<title>[anon] (1 samples, 0.05%)</title><rect x="132.0" y="1269" width="0.6" height="15.0" fill="rgb(210,229,36)" rx="2" ry="2" />
<text  x="135.03" y="1279.5" ></text>
</g>
<g >
<title>copy_user_generic_unrolled (1 samples, 0.05%)</title><rect x="741.5" y="709" width="0.7" height="15.0" fill="rgb(212,26,6)" rx="2" ry="2" />
<text  x="744.54" y="719.5" ></text>
</g>
<g >
<title>_raw_spin_lock (1 samples, 0.05%)</title><rect x="690.7" y="133" width="0.7" height="15.0" fill="rgb(254,53,11)" rx="2" ry="2" />
<text  x="693.75" y="143.5" ></text>
</g>
<g >
<title>__x64_sys_futex (1 samples, 0.05%)</title><rect x="353.8" y="1125" width="0.6" height="15.0" fill="rgb(239,154,41)" rx="2" ry="2" />
<text  x="356.78" y="1135.5" ></text>
</g>
<g >
<title>_raw_spin_lock_irqsave (1 samples, 0.05%)</title><rect x="712.4" y="197" width="0.6" height="15.0" fill="rgb(217,90,0)" rx="2" ry="2" />
<text  x="715.43" y="207.5" ></text>
</g>
<g >
<title>std::__sort&lt;__gnu_cxx::__normal_iterator&lt;long*, std::vector&lt;long, std::allocator&lt;long&gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_less_iter&gt; (13 samples, 0.68%)</title><rect x="460.3" y="1189" width="8.1" height="15.0" fill="rgb(245,183,45)" rx="2" ry="2" />
<text  x="463.32" y="1199.5" ></text>
</g>
<g >
<title>serdata_rmw_size (1 samples, 0.05%)</title><rect x="906.9" y="885" width="0.6" height="15.0" fill="rgb(210,6,38)" rx="2" ry="2" />
<text  x="909.92" y="895.5" ></text>
</g>
<g >
<title>kfree (1 samples, 0.05%)</title><rect x="41.6" y="901" width="0.6" height="15.0" fill="rgb(220,209,49)" rx="2" ry="2" />
<text  x="44.59" y="911.5" ></text>
</g>
<g >
<title>__x64_sys_futex (12 samples, 0.63%)</title><rect x="1108.9" y="1237" width="7.4" height="15.0" fill="rgb(210,28,31)" rx="2" ry="2" />
<text  x="1111.86" y="1247.5" ></text>
</g>
<g >
<title>ddsi_make_writer_info (1 samples, 0.05%)</title><rect x="585.4" y="933" width="0.7" height="15.0" fill="rgb(218,139,42)" rx="2" ry="2" />
<text  x="588.44" y="943.5" ></text>
</g>
<g >
<title>_rcutils_fault_injection_maybe_fail (9 samples, 0.47%)</title><rect x="159.9" y="1189" width="5.6" height="15.0" fill="rgb(217,13,27)" rx="2" ry="2" />
<text  x="162.90" y="1199.5" ></text>
</g>
<g >
<title>[libddsc.so.0.8.0] (1 samples, 0.05%)</title><rect x="885.2" y="901" width="0.7" height="15.0" fill="rgb(236,84,20)" rx="2" ry="2" />
<text  x="888.24" y="911.5" ></text>
</g>
<g >
<title>entidx_lookup_guid_untyped (1 samples, 0.05%)</title><rect x="1175.1" y="1173" width="0.7" height="15.0" fill="rgb(243,69,2)" rx="2" ry="2" />
<text  x="1178.13" y="1183.5" ></text>
</g>
<g >
<title>finish_task_switch (17 samples, 0.89%)</title><rect x="1150.4" y="997" width="10.5" height="15.0" fill="rgb(212,53,12)" rx="2" ry="2" />
<text  x="1153.36" y="1007.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;std_msgs::msg::MultiArrayDimension_&lt;std::allocator&lt;void&gt; &gt;, std::allocator&lt;std_msgs::msg::MultiArrayDimension_&lt;std::allocator&lt;void&gt; &gt; &gt; &gt;::_M_get_Tp_allocator (2 samples, 0.10%)</title><rect x="972.6" y="997" width="1.2" height="15.0" fill="rgb(212,68,49)" rx="2" ry="2" />
<text  x="975.58" y="1007.5" ></text>
</g>
<g >
<title>__pthread_mutex_unlock_usercnt (1 samples, 0.05%)</title><rect x="939.1" y="917" width="0.7" height="15.0" fill="rgb(214,222,14)" rx="2" ry="2" />
<text  x="942.13" y="927.5" ></text>
</g>
<g >
<title>dst_release (4 samples, 0.21%)</title><rect x="714.3" y="245" width="2.5" height="15.0" fill="rgb(205,144,26)" rx="2" ry="2" />
<text  x="717.28" y="255.5" ></text>
</g>
<g >
<title>[librmw_cyclonedds_cpp.so] (7 samples, 0.37%)</title><rect x="417.6" y="1093" width="4.3" height="15.0" fill="rgb(247,44,4)" rx="2" ry="2" />
<text  x="420.58" y="1103.5" ></text>
</g>
<g >
<title>[talker] (2 samples, 0.10%)</title><rect x="552.6" y="1141" width="1.3" height="15.0" fill="rgb(245,76,16)" rx="2" ry="2" />
<text  x="555.61" y="1151.5" ></text>
</g>
<g >
<title>ddsrt_avl_find_min (1 samples, 0.05%)</title><rect x="933.6" y="901" width="0.6" height="15.0" fill="rgb(239,97,5)" rx="2" ry="2" />
<text  x="936.56" y="911.5" ></text>
</g>
<g >
<title>udp_recvmsg (8 samples, 0.42%)</title><rect x="37.3" y="981" width="4.9" height="15.0" fill="rgb(232,169,47)" rx="2" ry="2" />
<text  x="40.25" y="991.5" ></text>
</g>
<g >
<title>percpu_counter_add_batch (1 samples, 0.05%)</title><rect x="652.3" y="565" width="0.7" height="15.0" fill="rgb(219,200,43)" rx="2" ry="2" />
<text  x="655.34" y="575.5" ></text>
</g>
<g >
<title>rclcpp::ServiceBase::get_service_handle (1 samples, 0.05%)</title><rect x="1059.9" y="1125" width="0.6" height="15.0" fill="rgb(249,10,41)" rx="2" ry="2" />
<text  x="1062.92" y="1135.5" ></text>
</g>
<g >
<title>intel_pmu_enable_all (4 samples, 0.21%)</title><rect x="16.8" y="933" width="2.5" height="15.0" fill="rgb(248,114,5)" rx="2" ry="2" />
<text  x="19.81" y="943.5" ></text>
</g>
<g >
<title>update_process_times (1 samples, 0.05%)</title><rect x="1160.3" y="885" width="0.6" height="15.0" fill="rgb(208,34,14)" rx="2" ry="2" />
<text  x="1163.27" y="895.5" ></text>
</g>
<g >
<title>std::__detail::_Hash_code_base&lt;rmw_cyclonedds_cpp::CDRWriter::CacheKey, std::pair&lt;rmw_cyclonedds_cpp::CDRWriter::CacheKey const, bool&gt;, std::__detail::_Select1st, rmw_cyclonedds_cpp::CDRWriter::CacheKey::Hash, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, true&gt;::_M_bucket_index (1 samples, 0.05%)</title><rect x="837.5" y="725" width="0.7" height="15.0" fill="rgb(238,149,15)" rx="2" ry="2" />
<text  x="840.55" y="735.5" ></text>
</g>
<g >
<title>perf_swevent_add (5 samples, 0.26%)</title><rect x="280.1" y="885" width="3.1" height="15.0" fill="rgb(207,206,20)" rx="2" ry="2" />
<text  x="283.07" y="895.5" ></text>
</g>
<g >
<title>[librcl.so] (1 samples, 0.05%)</title><rect x="1036.4" y="1109" width="0.6" height="15.0" fill="rgb(236,104,17)" rx="2" ry="2" />
<text  x="1039.38" y="1119.5" ></text>
</g>
<g >
<title>ip_finish_output (2 samples, 0.10%)</title><rect x="1177.0" y="853" width="1.2" height="15.0" fill="rgb(219,20,21)" rx="2" ry="2" />
<text  x="1179.99" y="863.5" ></text>
</g>
<g >
<title>ddsrt_chh_lookup (3 samples, 0.16%)</title><rect x="587.9" y="917" width="1.9" height="15.0" fill="rgb(217,123,25)" rx="2" ry="2" />
<text  x="590.92" y="927.5" ></text>
</g>
<g >
<title>__x64_sys_futex (37 samples, 1.94%)</title><rect x="1145.4" y="1093" width="22.9" height="15.0" fill="rgb(243,214,33)" rx="2" ry="2" />
<text  x="1148.40" y="1103.5" >_..</text>
</g>
<g >
<title>ip_local_deliver_finish (62 samples, 3.25%)</title><rect x="681.5" y="373" width="38.4" height="15.0" fill="rgb(231,140,9)" rx="2" ry="2" />
<text  x="684.45" y="383.5" >ip_..</text>
</g>
<g >
<title>futex_wait_setup (1 samples, 0.05%)</title><rect x="349.4" y="1061" width="0.7" height="15.0" fill="rgb(254,1,40)" rx="2" ry="2" />
<text  x="352.44" y="1071.5" ></text>
</g>
<g >
<title>[librmw_cyclonedds_cpp.so] (2 samples, 0.10%)</title><rect x="443.6" y="1189" width="1.2" height="15.0" fill="rgb(252,112,28)" rx="2" ry="2" />
<text  x="446.60" y="1199.5" ></text>
</g>
<g >
<title>copy_msghdr_from_user (6 samples, 0.31%)</title><rect x="739.7" y="725" width="3.7" height="15.0" fill="rgb(227,97,9)" rx="2" ry="2" />
<text  x="742.68" y="735.5" ></text>
</g>
<g >
<title>[libddsc.so.0.8.0] (1 samples, 0.05%)</title><rect x="21.1" y="1173" width="0.7" height="15.0" fill="rgb(237,198,52)" rx="2" ry="2" />
<text  x="24.15" y="1183.5" ></text>
</g>
<g >
<title>__cxxabiv1::__si_class_type_info::__do_dyncast (3 samples, 0.16%)</title><rect x="95.5" y="1253" width="1.8" height="15.0" fill="rgb(242,84,38)" rx="2" ry="2" />
<text  x="98.48" y="1263.5" ></text>
</g>
<g >
<title>std::forward&lt;long&gt; (2 samples, 0.10%)</title><rect x="478.3" y="1173" width="1.2" height="15.0" fill="rgb(227,49,8)" rx="2" ry="2" />
<text  x="481.28" y="1183.5" ></text>
</g>
<g >
<title>apic_timer_interrupt (1 samples, 0.05%)</title><rect x="321.6" y="981" width="0.6" height="15.0" fill="rgb(222,32,46)" rx="2" ry="2" />
<text  x="324.57" y="991.5" ></text>
</g>
<g >
<title>task_ctx_sched_out (1 samples, 0.05%)</title><rect x="1164.6" y="997" width="0.6" height="15.0" fill="rgb(233,163,41)" rx="2" ry="2" />
<text  x="1167.60" y="1007.5" ></text>
</g>
<g >
<title>move_addr_to_kernel.part.0 (1 samples, 0.05%)</title><rect x="1128.7" y="1173" width="0.6" height="15.0" fill="rgb(235,39,26)" rx="2" ry="2" />
<text  x="1131.68" y="1183.5" ></text>
</g>
<g >
<title>update_rq_clock (1 samples, 0.05%)</title><rect x="1162.1" y="949" width="0.6" height="15.0" fill="rgb(207,188,49)" rx="2" ry="2" />
<text  x="1165.13" y="959.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, MinimalPublisher*&gt; (1 samples, 0.05%)</title><rect x="124.0" y="1253" width="0.6" height="15.0" fill="rgb(212,149,41)" rx="2" ry="2" />
<text  x="126.97" y="1263.5" ></text>
</g>
<g >
<title>nn_xpack_send_real (267 samples, 14.02%)</title><rect x="594.1" y="933" width="165.4" height="15.0" fill="rgb(242,202,34)" rx="2" ry="2" />
<text  x="597.12" y="943.5" >nn_xpack_send_real</text>
</g>
<g >
<title>ip_route_output_flow (2 samples, 0.10%)</title><rect x="1118.1" y="1125" width="1.3" height="15.0" fill="rgb(219,89,22)" rx="2" ry="2" />
<text  x="1121.15" y="1135.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;int&gt; &gt;::allocate (5 samples, 0.26%)</title><rect x="945.3" y="997" width="3.1" height="15.0" fill="rgb(205,18,50)" rx="2" ry="2" />
<text  x="948.33" y="1007.5" ></text>
</g>
<g >
<title>nn_xpack_send1v (2 samples, 0.10%)</title><rect x="1177.0" y="1141" width="1.2" height="15.0" fill="rgb(233,153,13)" rx="2" ry="2" />
<text  x="1179.99" y="1151.5" ></text>
</g>
<g >
<title>_raw_spin_lock_bh (1 samples, 0.05%)</title><rect x="1116.9" y="1125" width="0.6" height="15.0" fill="rgb(237,135,26)" rx="2" ry="2" />
<text  x="1119.91" y="1135.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.05%)</title><rect x="1180.1" y="677" width="0.6" height="15.0" fill="rgb(207,10,16)" rx="2" ry="2" />
<text  x="1183.09" y="687.5" ></text>
</g>
<g >
<title>pick_next_task_fair (32 samples, 1.68%)</title><rect x="324.0" y="997" width="19.9" height="15.0" fill="rgb(230,142,0)" rx="2" ry="2" />
<text  x="327.05" y="1007.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;int&gt;::deallocate (4 samples, 0.21%)</title><rect x="968.9" y="965" width="2.4" height="15.0" fill="rgb(246,125,38)" rx="2" ry="2" />
<text  x="971.87" y="975.5" ></text>
</g>
<g >
<title>rcl_event_get_rmw_handle (4 samples, 0.21%)</title><rect x="1045.7" y="1093" width="2.5" height="15.0" fill="rgb(209,204,46)" rx="2" ry="2" />
<text  x="1048.67" y="1103.5" ></text>
</g>
<g >
<title>__calc_delta (2 samples, 0.10%)</title><rect x="253.4" y="933" width="1.3" height="15.0" fill="rgb(216,205,22)" rx="2" ry="2" />
<text  x="256.43" y="943.5" ></text>
</g>
<g >
<title>rcl_publisher_is_valid (3 samples, 0.16%)</title><rect x="568.7" y="997" width="1.9" height="15.0" fill="rgb(243,150,37)" rx="2" ry="2" />
<text  x="571.72" y="1007.5" ></text>
</g>
<g >
<title>_nohz_idle_balance (28 samples, 1.47%)</title><rect x="325.9" y="965" width="17.3" height="15.0" fill="rgb(213,101,41)" rx="2" ry="2" />
<text  x="328.91" y="975.5" ></text>
</g>
<g >
<title>rcutils_steady_time_now (5 samples, 0.26%)</title><rect x="166.7" y="1205" width="3.1" height="15.0" fill="rgb(213,64,33)" rx="2" ry="2" />
<text  x="169.71" y="1215.5" ></text>
</g>
<g >
<title>inet_sendmsg (197 samples, 10.34%)</title><rect x="612.7" y="693" width="122.0" height="15.0" fill="rgb(241,130,4)" rx="2" ry="2" />
<text  x="615.70" y="703.5" >inet_sendmsg</text>
</g>
<g >
<title>handle_Heartbeat (1 samples, 0.05%)</title><rect x="42.2" y="1173" width="0.6" height="15.0" fill="rgb(216,168,39)" rx="2" ry="2" />
<text  x="45.21" y="1183.5" ></text>
</g>
<g >
<title>do_syscall_64 (2 samples, 0.10%)</title><rect x="1173.3" y="1125" width="1.2" height="15.0" fill="rgb(217,131,23)" rx="2" ry="2" />
<text  x="1176.28" y="1135.5" ></text>
</g>
<g >
<title>handle_active_events (105 samples, 5.51%)</title><rect x="372.4" y="1205" width="65.0" height="15.0" fill="rgb(209,207,54)" rx="2" ry="2" />
<text  x="375.36" y="1215.5" >handle_..</text>
</g>
<g >
<title>rclcpp::CallbackGroup::can_be_taken_from (4 samples, 0.21%)</title><rect x="1090.9" y="1141" width="2.5" height="15.0" fill="rgb(250,116,28)" rx="2" ry="2" />
<text  x="1093.89" y="1151.5" ></text>
</g>
<g >
<title>ieee80211_lookup_ra_sta (1 samples, 0.05%)</title><rect x="1177.6" y="725" width="0.6" height="15.0" fill="rgb(211,43,52)" rx="2" ry="2" />
<text  x="1180.61" y="735.5" ></text>
</g>
<g >
<title>check_cfs_rq_runtime (1 samples, 0.05%)</title><rect x="344.5" y="965" width="0.6" height="15.0" fill="rgb(207,38,5)" rx="2" ry="2" />
<text  x="347.49" y="975.5" ></text>
</g>
<g >
<title>__sched_text_start (5 samples, 0.26%)</title><rect x="16.8" y="1013" width="3.1" height="15.0" fill="rgb(233,187,28)" rx="2" ry="2" />
<text  x="19.81" y="1023.5" ></text>
</g>
<g >
<title>pthread_mutex_unlock (1 samples, 0.05%)</title><rect x="459.7" y="1157" width="0.6" height="15.0" fill="rgb(247,125,32)" rx="2" ry="2" />
<text  x="462.70" y="1167.5" ></text>
</g>
<g >
<title>[librmw_cyclonedds_cpp.so] (3 samples, 0.16%)</title><rect x="789.9" y="789" width="1.8" height="15.0" fill="rgb(223,19,4)" rx="2" ry="2" />
<text  x="792.85" y="799.5" ></text>
</g>
<g >
<title>__update_load_avg_se (3 samples, 0.16%)</title><rect x="700.0" y="37" width="1.9" height="15.0" fill="rgb(233,218,48)" rx="2" ry="2" />
<text  x="703.04" y="47.5" ></text>
</g>
<g >
<title>__kmalloc_node_track_caller (1 samples, 0.05%)</title><rect x="1117.5" y="1013" width="0.6" height="15.0" fill="rgb(251,91,47)" rx="2" ry="2" />
<text  x="1120.53" y="1023.5" ></text>
</g>
<g >
<title>rclcpp::ok (6 samples, 0.31%)</title><rect x="1103.9" y="1173" width="3.7" height="15.0" fill="rgb(220,203,23)" rx="2" ry="2" />
<text  x="1106.90" y="1183.5" ></text>
</g>
<g >
<title>std::function&lt;unsigned long  (10 samples, 0.52%)</title><rect x="799.1" y="757" width="6.2" height="15.0" fill="rgb(211,156,41)" rx="2" ry="2" />
<text  x="802.14" y="767.5" ></text>
</g>
<g >
<title>net_rx_action (81 samples, 4.25%)</title><rect x="672.2" y="485" width="50.1" height="15.0" fill="rgb(234,15,52)" rx="2" ry="2" />
<text  x="675.16" y="495.5" >net_r..</text>
</g>
<g >
<title>perf_event_sched_in (1 samples, 0.05%)</title><rect x="37.3" y="853" width="0.6" height="15.0" fill="rgb(254,181,41)" rx="2" ry="2" />
<text  x="40.25" y="863.5" ></text>
</g>
<g >
<title>[librcutils.so] (1 samples, 0.05%)</title><rect x="167.3" y="1189" width="0.7" height="15.0" fill="rgb(236,167,7)" rx="2" ry="2" />
<text  x="170.33" y="1199.5" ></text>
</g>
<g >
<title>rcl_wait_set_add_service (13 samples, 0.68%)</title><rect x="1028.3" y="1125" width="8.1" height="15.0" fill="rgb(232,119,27)" rx="2" ry="2" />
<text  x="1031.33" y="1135.5" ></text>
</g>
<g >
<title>do_futex (6 samples, 0.31%)</title><rect x="1169.6" y="1093" width="3.7" height="15.0" fill="rgb(222,225,31)" rx="2" ry="2" />
<text  x="1172.56" y="1103.5" ></text>
</g>
<g >
<title>rmw_cyclonedds_cpp::PrimitiveValueType::sizeof_type (1 samples, 0.05%)</title><rect x="812.8" y="789" width="0.6" height="15.0" fill="rgb(235,46,49)" rx="2" ry="2" />
<text  x="815.77" y="799.5" ></text>
</g>
<g >
<title>dds_handle_unpin (1 samples, 0.05%)</title><rect x="395.3" y="1173" width="0.6" height="15.0" fill="rgb(244,193,46)" rx="2" ry="2" />
<text  x="398.28" y="1183.5" ></text>
</g>
<g >
<title>std::__detail::_Hash_node_value_base&lt;std::pair&lt;rmw_event_type_t const, unsigned int&gt; &gt;::_M_v (1 samples, 0.05%)</title><rect x="401.5" y="1141" width="0.6" height="15.0" fill="rgb(251,108,17)" rx="2" ry="2" />
<text  x="404.48" y="1151.5" ></text>
</g>
<g >
<title>std::forward&lt;std::pair&lt;rmw_cyclonedds_cpp::CDRWriter::CacheKey const, bool&gt;&amp;&gt; (1 samples, 0.05%)</title><rect x="838.8" y="693" width="0.6" height="15.0" fill="rgb(239,73,12)" rx="2" ry="2" />
<text  x="841.79" y="703.5" ></text>
</g>
<g >
<title>[[vdso]] (1 samples, 0.05%)</title><rect x="202.6" y="1141" width="0.7" height="15.0" fill="rgb(207,130,54)" rx="2" ry="2" />
<text  x="205.64" y="1151.5" ></text>
</g>
<g >
<title>do_futex (1 samples, 0.05%)</title><rect x="1173.9" y="1093" width="0.6" height="15.0" fill="rgb(218,157,39)" rx="2" ry="2" />
<text  x="1176.90" y="1103.5" ></text>
</g>
<g >
<title>std::vector&lt;CddsEvent, std::allocator&lt;CddsEvent&gt; &gt;::at (2 samples, 0.10%)</title><rect x="438.6" y="1189" width="1.3" height="15.0" fill="rgb(241,202,7)" rx="2" ry="2" />
<text  x="441.64" y="1199.5" ></text>
</g>
<g >
<title>__cxxabiv1::__si_class_type_info::__do_dyncast (8 samples, 0.42%)</title><rect x="775.0" y="837" width="4.9" height="15.0" fill="rgb(226,206,30)" rx="2" ry="2" />
<text  x="777.99" y="847.5" ></text>
</g>
<g >
<title>require_reattach (4 samples, 0.21%)</title><rect x="437.4" y="1205" width="2.5" height="15.0" fill="rgb(242,175,47)" rx="2" ry="2" />
<text  x="440.40" y="1215.5" ></text>
</g>
<g >
<title>ddsrt_hh_lookup (1 samples, 0.05%)</title><rect x="211.3" y="1157" width="0.6" height="15.0" fill="rgb(247,183,53)" rx="2" ry="2" />
<text  x="214.31" y="1167.5" ></text>
</g>
<g >
<title>whc_default_get_state (2 samples, 0.10%)</title><rect x="1178.9" y="1189" width="1.2" height="15.0" fill="rgb(237,157,23)" rx="2" ry="2" />
<text  x="1181.85" y="1199.5" ></text>
</g>
<g >
<title>do_futex (185 samples, 9.71%)</title><rect x="235.5" y="1077" width="114.6" height="15.0" fill="rgb(236,36,0)" rx="2" ry="2" />
<text  x="238.47" y="1087.5" >do_futex</text>
</g>
<g >
<title>rmw_cyclonedds_cpp::CDRWriter::serialize_u32 (1 samples, 0.05%)</title><rect x="846.2" y="773" width="0.6" height="15.0" fill="rgb(219,56,1)" rx="2" ry="2" />
<text  x="849.22" y="783.5" ></text>
</g>
<g >
<title>[librmw_cyclonedds_cpp.so] (1 samples, 0.05%)</title><rect x="399.6" y="1125" width="0.6" height="15.0" fill="rgb(233,116,32)" rx="2" ry="2" />
<text  x="402.62" y="1135.5" ></text>
</g>
<g >
<title>std::__invoke&lt;void  (3 samples, 0.16%)</title><rect x="143.2" y="1109" width="1.8" height="15.0" fill="rgb(226,196,2)" rx="2" ry="2" />
<text  x="146.18" y="1119.5" ></text>
</g>
<g >
<title>enqueue_task_fair (9 samples, 0.47%)</title><rect x="696.3" y="85" width="5.6" height="15.0" fill="rgb(239,136,33)" rx="2" ry="2" />
<text  x="699.32" y="95.5" ></text>
</g>
<g >
<title>__gnu_cxx::__aligned_buffer&lt;std::pair&lt;rmw_cyclonedds_cpp::CDRWriter::CacheKey const, bool&gt; &gt;::_M_addr (1 samples, 0.05%)</title><rect x="797.3" y="693" width="0.6" height="15.0" fill="rgb(234,15,44)" rx="2" ry="2" />
<text  x="800.29" y="703.5" ></text>
</g>
<g >
<title>get_nohz_timer_target (1 samples, 0.05%)</title><rect x="242.3" y="997" width="0.6" height="15.0" fill="rgb(212,148,50)" rx="2" ry="2" />
<text  x="245.28" y="1007.5" ></text>
</g>
<g >
<title>__pthread_cond_wait (7 samples, 0.37%)</title><rect x="11.9" y="1173" width="4.3" height="15.0" fill="rgb(222,50,0)" rx="2" ry="2" />
<text  x="14.86" y="1183.5" ></text>
</g>
<g >
<title>std::__detail::_Mod_range_hashing::operator (1 samples, 0.05%)</title><rect x="848.7" y="693" width="0.6" height="15.0" fill="rgb(249,162,14)" rx="2" ry="2" />
<text  x="851.70" y="703.5" ></text>
</g>
<g >
<title>rmw_cyclonedds_cpp::CDRWriter::CacheKey::operator== (1 samples, 0.05%)</title><rect x="839.4" y="693" width="0.6" height="15.0" fill="rgb(216,154,35)" rx="2" ry="2" />
<text  x="842.41" y="703.5" ></text>
</g>
<g >
<title>dst_alloc (4 samples, 0.21%)</title><rect x="652.3" y="597" width="2.5" height="15.0" fill="rgb(234,193,10)" rx="2" ry="2" />
<text  x="655.34" y="607.5" ></text>
</g>
<g >
<title>dds_get_status_changes (29 samples, 1.52%)</title><rect x="378.6" y="1189" width="17.9" height="15.0" fill="rgb(227,41,0)" rx="2" ry="2" />
<text  x="381.56" y="1199.5" ></text>
</g>
<g >
<title>futex_wait_queue_me (11 samples, 0.58%)</title><rect x="1108.9" y="1189" width="6.8" height="15.0" fill="rgb(217,124,44)" rx="2" ry="2" />
<text  x="1111.86" y="1199.5" ></text>
</g>
<g >
<title>__netif_receive_skb (75 samples, 3.94%)</title><rect x="675.9" y="453" width="46.4" height="15.0" fill="rgb(240,145,5)" rx="2" ry="2" />
<text  x="678.88" y="463.5" >__ne..</text>
</g>
<g >
<title>std::__detail::_Hashtable_base&lt;rmw_event_type_t, std::pair&lt;rmw_event_type_t const, unsigned int&gt;, std::__detail::_Select1st, std::equal_to&lt;rmw_event_type_t&gt;, std::hash&lt;rmw_event_type_t&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_eq (2 samples, 0.10%)</title><rect x="427.5" y="1141" width="1.2" height="15.0" fill="rgb(220,174,11)" rx="2" ry="2" />
<text  x="430.49" y="1151.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;long*, std::vector&lt;long, std::allocator&lt;long&gt; &gt; &gt;::operator+ (1 samples, 0.05%)</title><rect x="107.9" y="1253" width="0.6" height="15.0" fill="rgb(208,74,49)" rx="2" ry="2" />
<text  x="110.87" y="1263.5" ></text>
</g>
<g >
<title>perf_pmu_enable.part.0 (3 samples, 0.16%)</title><rect x="322.2" y="981" width="1.8" height="15.0" fill="rgb(227,109,19)" rx="2" ry="2" />
<text  x="325.19" y="991.5" ></text>
</g>
<g >
<title>intel_pmu_enable_all (19 samples, 1.00%)</title><rect x="24.9" y="901" width="11.7" height="15.0" fill="rgb(233,165,17)" rx="2" ry="2" />
<text  x="27.87" y="911.5" ></text>
</g>
<g >
<title>dds_entity_unpin (5 samples, 0.26%)</title><rect x="212.6" y="1189" width="3.0" height="15.0" fill="rgb(210,36,31)" rx="2" ry="2" />
<text  x="215.55" y="1199.5" ></text>
</g>
<g >
<title>get_futex_value_locked (1 samples, 0.05%)</title><rect x="1166.5" y="1045" width="0.6" height="15.0" fill="rgb(211,133,19)" rx="2" ry="2" />
<text  x="1169.46" y="1055.5" ></text>
</g>
<g >
<title>__strcmp_avx2 (1 samples, 0.05%)</title><rect x="784.9" y="789" width="0.6" height="15.0" fill="rgb(220,224,53)" rx="2" ry="2" />
<text  x="787.90" y="799.5" ></text>
</g>
<g >
<title>_raw_spin_lock (2 samples, 0.10%)</title><rect x="235.5" y="1061" width="1.2" height="15.0" fill="rgb(214,65,34)" rx="2" ry="2" />
<text  x="238.47" y="1071.5" ></text>
</g>
<g >
<title>hrtimer_start_range_ns (1 samples, 0.05%)</title><rect x="1109.5" y="1157" width="0.6" height="15.0" fill="rgb(251,191,42)" rx="2" ry="2" />
<text  x="1112.48" y="1167.5" ></text>
</g>
<g >
<title>__sched_text_start (1 samples, 0.05%)</title><rect x="20.5" y="1157" width="0.6" height="15.0" fill="rgb(234,11,10)" rx="2" ry="2" />
<text  x="23.53" y="1167.5" ></text>
</g>
<g >
<title>import_iovec (1 samples, 0.05%)</title><rect x="742.2" y="709" width="0.6" height="15.0" fill="rgb(222,108,18)" rx="2" ry="2" />
<text  x="745.16" y="719.5" ></text>
</g>
<g >
<title>rmw_cyclonedds_cpp::CDRWriter::lookup_many_trivially_serialized (3 samples, 0.16%)</title><rect x="848.1" y="789" width="1.8" height="15.0" fill="rgb(221,129,42)" rx="2" ry="2" />
<text  x="851.08" y="799.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, byte*, std::default_delete&lt;byte []&gt; &gt; (1 samples, 0.05%)</title><rect x="862.9" y="837" width="0.7" height="15.0" fill="rgb(236,148,47)" rx="2" ry="2" />
<text  x="865.94" y="847.5" ></text>
</g>
<g >
<title>rclcpp::memory_strategies::allocator_memory_strategy::AllocatorMemoryStrategy&lt;std::allocator&lt;void&gt; &gt;::get_next_client (1 samples, 0.05%)</title><rect x="135.1" y="1237" width="0.6" height="15.0" fill="rgb(232,6,35)" rx="2" ry="2" />
<text  x="138.12" y="1247.5" ></text>
</g>
<g >
<title>rclcpp::Executor::get_next_executable (165 samples, 8.66%)</title><rect x="981.3" y="1173" width="102.2" height="15.0" fill="rgb(225,211,21)" rx="2" ry="2" />
<text  x="984.25" y="1183.5" >rclcpp::Exec..</text>
</g>
<g >
<title>rclcpp::Executor::get_next_ready_executable_from_map (1 samples, 0.05%)</title><rect x="113.4" y="1253" width="0.7" height="15.0" fill="rgb(246,21,34)" rx="2" ry="2" />
<text  x="116.44" y="1263.5" ></text>
</g>
<g >
<title>___sys_recvmsg (1 samples, 0.05%)</title><rect x="21.8" y="1045" width="0.6" height="15.0" fill="rgb(214,32,35)" rx="2" ry="2" />
<text  x="24.77" y="1055.5" ></text>
</g>
<g >
<title>[librmw_cyclonedds_cpp.so] (3 samples, 0.16%)</title><rect x="814.6" y="789" width="1.9" height="15.0" fill="rgb(253,49,1)" rx="2" ry="2" />
<text  x="817.63" y="799.5" ></text>
</g>
<g >
<title>eth_type_trans (1 samples, 0.05%)</title><rect x="726.1" y="485" width="0.6" height="15.0" fill="rgb(210,32,13)" rx="2" ry="2" />
<text  x="729.05" y="495.5" ></text>
</g>
<g >
<title>std::lock_guard&lt;std::mutex&gt;::lock_guard (12 samples, 0.63%)</title><rect x="450.4" y="1205" width="7.4" height="15.0" fill="rgb(239,225,16)" rx="2" ry="2" />
<text  x="453.41" y="1215.5" ></text>
</g>
<g >
<title>dev_queue_xmit (2 samples, 0.10%)</title><rect x="1177.0" y="805" width="1.2" height="15.0" fill="rgb(230,178,16)" rx="2" ry="2" />
<text  x="1179.99" y="815.5" ></text>
</g>
<g >
<title>encode_datawriter_submsg (3 samples, 0.16%)</title><rect x="936.0" y="869" width="1.9" height="15.0" fill="rgb(252,96,49)" rx="2" ry="2" />
<text  x="939.04" y="879.5" ></text>
</g>
<g >
<title>__GI___pthread_mutex_unlock (1 samples, 0.05%)</title><rect x="395.9" y="1157" width="0.6" height="15.0" fill="rgb(243,35,40)" rx="2" ry="2" />
<text  x="398.90" y="1167.5" ></text>
</g>
<g >
<title>record_times (1 samples, 0.05%)</title><rect x="262.1" y="965" width="0.6" height="15.0" fill="rgb(226,106,13)" rx="2" ry="2" />
<text  x="265.10" y="975.5" ></text>
</g>
<g >
<title>rcl_service_is_valid (4 samples, 0.21%)</title><rect x="1033.9" y="1093" width="2.5" height="15.0" fill="rgb(210,193,8)" rx="2" ry="2" />
<text  x="1036.91" y="1103.5" ></text>
</g>
<g >
<title>std::vector&lt;CddsClient*, std::allocator&lt;CddsClient*&gt; &gt;::size (1 samples, 0.05%)</title><rect x="439.9" y="1189" width="0.6" height="15.0" fill="rgb(238,163,43)" rx="2" ry="2" />
<text  x="442.88" y="1199.5" ></text>
</g>
<g >
<title>sk_filter_trim_cap (1 samples, 0.05%)</title><rect x="716.8" y="261" width="0.6" height="15.0" fill="rgb(226,46,53)" rx="2" ry="2" />
<text  x="719.76" y="271.5" ></text>
</g>
<g >
<title>hrtimer_sleeper_start_expires (2 samples, 0.10%)</title><rect x="1108.9" y="1173" width="1.2" height="15.0" fill="rgb(247,188,9)" rx="2" ry="2" />
<text  x="1111.86" y="1183.5" ></text>
</g>
<g >
<title>dequeue_task_fair (2 samples, 0.10%)</title><rect x="1111.3" y="1125" width="1.3" height="15.0" fill="rgb(236,78,11)" rx="2" ry="2" />
<text  x="1114.33" y="1135.5" ></text>
</g>
<g >
<title>rclcpp::spin (3 samples, 0.16%)</title><rect x="143.2" y="1237" width="1.8" height="15.0" fill="rgb(224,8,47)" rx="2" ry="2" />
<text  x="146.18" y="1247.5" ></text>
</g>
<g >
<title>__wake_up_common (6 samples, 0.31%)</title><rect x="1124.3" y="661" width="3.8" height="15.0" fill="rgb(222,82,31)" rx="2" ry="2" />
<text  x="1127.34" y="671.5" ></text>
</g>
<g >
<title>inet_recvmsg (8 samples, 0.42%)</title><rect x="37.3" y="997" width="4.9" height="15.0" fill="rgb(234,145,38)" rx="2" ry="2" />
<text  x="40.25" y="1007.5" ></text>
</g>
<g >
<title>__x64_sys_sendmsg (2 samples, 0.10%)</title><rect x="1188.8" y="1237" width="1.2" height="15.0" fill="rgb(248,18,52)" rx="2" ry="2" />
<text  x="1191.76" y="1247.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;rmw_cyclonedds_cpp::StructValueType const, std::default_delete&lt;rmw_cyclonedds_cpp::StructValueType const&gt; &gt;::get (4 samples, 0.21%)</title><rect x="825.8" y="853" width="2.5" height="15.0" fill="rgb(232,67,36)" rx="2" ry="2" />
<text  x="828.78" y="863.5" ></text>
</g>
<g >
<title>perf_pmu_enable.part.0 (4 samples, 0.21%)</title><rect x="16.8" y="965" width="2.5" height="15.0" fill="rgb(226,96,26)" rx="2" ry="2" />
<text  x="19.81" y="975.5" ></text>
</g>
<g >
<title>__gthread_active_p (1 samples, 0.05%)</title><rect x="109.1" y="1253" width="0.6" height="15.0" fill="rgb(222,79,5)" rx="2" ry="2" />
<text  x="112.11" y="1263.5" ></text>
</g>
<g >
<title>ddsi_serdata_init (2 samples, 0.10%)</title><rect x="866.0" y="885" width="1.3" height="15.0" fill="rgb(236,97,49)" rx="2" ry="2" />
<text  x="869.04" y="895.5" ></text>
</g>
<g >
<title>rmw_cyclonedds_cpp::CDRWriter::lookup_trivially_serialized (7 samples, 0.37%)</title><rect x="807.2" y="773" width="4.3" height="15.0" fill="rgb(217,124,5)" rx="2" ry="2" />
<text  x="810.20" y="783.5" ></text>
</g>
<g >
<title>memcmp (1 samples, 0.05%)</title><rect x="1177.6" y="709" width="0.6" height="15.0" fill="rgb(227,210,19)" rx="2" ry="2" />
<text  x="1180.61" y="719.5" ></text>
</g>
<g >
<title>newidle_balance (32 samples, 1.68%)</title><rect x="324.0" y="981" width="19.9" height="15.0" fill="rgb(217,174,16)" rx="2" ry="2" />
<text  x="327.05" y="991.5" ></text>
</g>
<g >
<title>intel_pmu_enable_all (6 samples, 0.31%)</title><rect x="37.9" y="821" width="3.7" height="15.0" fill="rgb(225,210,47)" rx="2" ry="2" />
<text  x="40.87" y="831.5" ></text>
</g>
<g >
<title>futex_wait_setup (2 samples, 0.10%)</title><rect x="347.0" y="1045" width="1.2" height="15.0" fill="rgb(207,224,31)" rx="2" ry="2" />
<text  x="349.97" y="1055.5" ></text>
</g>
<g >
<title>std::__detail::_Select1st::operator (1 samples, 0.05%)</title><rect x="845.6" y="677" width="0.6" height="15.0" fill="rgb(211,184,34)" rx="2" ry="2" />
<text  x="848.60" y="687.5" ></text>
</g>
<g >
<title>nn_hton_guid_prefix (1 samples, 0.05%)</title><rect x="914.4" y="901" width="0.6" height="15.0" fill="rgb(229,205,8)" rx="2" ry="2" />
<text  x="917.36" y="911.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;1ul, std::default_delete&lt;serdata_rmw&gt; &gt;::_Tuple_impl (2 samples, 0.10%)</title><rect x="875.3" y="837" width="1.3" height="15.0" fill="rgb(212,194,52)" rx="2" ry="2" />
<text  x="878.33" y="847.5" ></text>
</g>
<g >
<title>[librcl.so] (2 samples, 0.10%)</title><rect x="568.7" y="981" width="1.3" height="15.0" fill="rgb(244,118,46)" rx="2" ry="2" />
<text  x="571.72" y="991.5" ></text>
</g>
<g >
<title>update_blocked_averages (16 samples, 0.84%)</title><rect x="332.7" y="933" width="9.9" height="15.0" fill="rgb(247,170,28)" rx="2" ry="2" />
<text  x="335.72" y="943.5" ></text>
</g>
<g >
<title>ip_rcv (11 samples, 0.58%)</title><rect x="1121.2" y="885" width="6.9" height="15.0" fill="rgb(210,112,4)" rx="2" ry="2" />
<text  x="1124.24" y="895.5" ></text>
</g>
<g >
<title>ip_rcv_finish (63 samples, 3.31%)</title><rect x="681.5" y="405" width="39.0" height="15.0" fill="rgb(224,82,45)" rx="2" ry="2" />
<text  x="684.45" y="415.5" >ip_..</text>
</g>
<g >
<title>rcl_publisher_is_valid_except_context (1 samples, 0.05%)</title><rect x="570.0" y="981" width="0.6" height="15.0" fill="rgb(253,135,48)" rx="2" ry="2" />
<text  x="572.96" y="991.5" ></text>
</g>
<g >
<title>[librmw_cyclonedds_cpp.so] (2 samples, 0.10%)</title><rect x="460.9" y="1173" width="1.3" height="15.0" fill="rgb(241,112,19)" rx="2" ry="2" />
<text  x="463.94" y="1183.5" ></text>
</g>
<g >
<title>udp_sendmsg (2 samples, 0.10%)</title><rect x="1177.0" y="933" width="1.2" height="15.0" fill="rgb(211,22,34)" rx="2" ry="2" />
<text  x="1179.99" y="943.5" ></text>
</g>
<g >
<title>__call_rcu (2 samples, 0.10%)</title><rect x="714.9" y="229" width="1.2" height="15.0" fill="rgb(236,113,0)" rx="2" ry="2" />
<text  x="717.90" y="239.5" ></text>
</g>
<g >
<title>std::__detail::_Mod_range_hashing::operator (1 samples, 0.05%)</title><rect x="794.8" y="677" width="0.6" height="15.0" fill="rgb(229,200,8)" rx="2" ry="2" />
<text  x="797.81" y="687.5" ></text>
</g>
<g >
<title>udp_queue_rcv_one_skb (6 samples, 0.31%)</title><rect x="1124.3" y="741" width="3.8" height="15.0" fill="rgb(222,61,33)" rx="2" ry="2" />
<text  x="1127.34" y="751.5" ></text>
</g>
<g >
<title>dev_hard_start_xmit (1 samples, 0.05%)</title><rect x="1128.1" y="981" width="0.6" height="15.0" fill="rgb(223,75,24)" rx="2" ry="2" />
<text  x="1131.06" y="991.5" ></text>
</g>
<g >
<title>std::vector&lt;long, std::allocator&lt;long&gt; &gt;::data (1 samples, 0.05%)</title><rect x="468.4" y="1205" width="0.6" height="15.0" fill="rgb(247,60,16)" rx="2" ry="2" />
<text  x="471.37" y="1215.5" ></text>
</g>
<g >
<title>std::unordered_map&lt;rmw_event_type_t, unsigned int, std::hash&lt;rmw_event_type_t&gt;, std::equal_to&lt;rmw_event_type_t&gt;, std::allocator&lt;std::pair&lt;rmw_event_type_t const, unsigned int&gt; &gt; &gt;::at (8 samples, 0.42%)</title><rect x="397.1" y="1173" width="5.0" height="15.0" fill="rgb(217,215,10)" rx="2" ry="2" />
<text  x="400.14" y="1183.5" ></text>
</g>
<g >
<title>std::_Bind&lt;void  (1 samples, 0.05%)</title><rect x="980.6" y="1141" width="0.7" height="15.0" fill="rgb(243,131,16)" rx="2" ry="2" />
<text  x="983.64" y="1151.5" ></text>
</g>
<g >
<title>__vdso_clock_gettime (2 samples, 0.10%)</title><rect x="140.1" y="1253" width="1.2" height="15.0" fill="rgb(240,45,6)" rx="2" ry="2" />
<text  x="143.08" y="1263.5" ></text>
</g>
<g >
<title>rcl_wait_set_clear (1 samples, 0.05%)</title><rect x="103.5" y="1221" width="0.7" height="15.0" fill="rgb(245,14,53)" rx="2" ry="2" />
<text  x="106.53" y="1231.5" ></text>
</g>
<g >
<title>native_write_msr (6 samples, 0.31%)</title><rect x="37.9" y="805" width="3.7" height="15.0" fill="rgb(233,127,5)" rx="2" ry="2" />
<text  x="40.87" y="815.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;std_msgs::msg::MultiArrayDimension_&lt;std::allocator&lt;void&gt; &gt;, std::allocator&lt;std_msgs::msg::MultiArrayDimension_&lt;std::allocator&lt;void&gt; &gt; &gt; &gt;::_Vector_base (6 samples, 0.31%)</title><rect x="963.3" y="997" width="3.7" height="15.0" fill="rgb(210,104,37)" rx="2" ry="2" />
<text  x="966.29" y="1007.5" ></text>
</g>
<g >
<title>hrtimer_sleeper_start_expires (1 samples, 0.05%)</title><rect x="1147.3" y="1029" width="0.6" height="15.0" fill="rgb(219,61,53)" rx="2" ry="2" />
<text  x="1150.26" y="1039.5" ></text>
</g>
<g >
<title>[librcutils.so] (1 samples, 0.05%)</title><rect x="512.4" y="1205" width="0.6" height="15.0" fill="rgb(238,72,39)" rx="2" ry="2" />
<text  x="515.35" y="1215.5" ></text>
</g>
<g >
<title>_pthread_cleanup_pop (1 samples, 0.05%)</title><rect x="1142.3" y="1141" width="0.6" height="15.0" fill="rgb(235,46,36)" rx="2" ry="2" />
<text  x="1145.30" y="1151.5" ></text>
</g>
<g >
<title>std::__detail::_Hash_code_base&lt;rmw_event_type_t, std::pair&lt;rmw_event_type_t const, unsigned int&gt;, std::__detail::_Select1st, std::hash&lt;rmw_event_type_t&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false&gt;::_M_hash_code (1 samples, 0.05%)</title><rect x="400.9" y="1141" width="0.6" height="15.0" fill="rgb(218,156,36)" rx="2" ry="2" />
<text  x="403.86" y="1151.5" ></text>
</g>
<g >
<title>__check_object_size (1 samples, 0.05%)</title><rect x="742.2" y="677" width="0.6" height="15.0" fill="rgb(210,61,26)" rx="2" ry="2" />
<text  x="745.16" y="687.5" ></text>
</g>
<g >
<title>enqueue_entity (1 samples, 0.05%)</title><rect x="1180.1" y="293" width="0.6" height="15.0" fill="rgb(220,221,24)" rx="2" ry="2" />
<text  x="1183.09" y="303.5" ></text>
</g>
<g >
<title>dds_entity_pin (14 samples, 0.73%)</title><rect x="384.1" y="1157" width="8.7" height="15.0" fill="rgb(246,93,34)" rx="2" ry="2" />
<text  x="387.13" y="1167.5" ></text>
</g>
<g >
<title>__dynamic_cast (12 samples, 0.63%)</title><rect x="772.5" y="853" width="7.4" height="15.0" fill="rgb(231,19,45)" rx="2" ry="2" />
<text  x="775.51" y="863.5" ></text>
</g>
<g >
<title>std::vector&lt;long, std::allocator&lt;long&gt; &gt;::push_back (16 samples, 0.84%)</title><rect x="469.6" y="1205" width="9.9" height="15.0" fill="rgb(213,206,36)" rx="2" ry="2" />
<text  x="472.61" y="1215.5" ></text>
</g>
<g >
<title>__perf_event_task_sched_in (94 samples, 4.93%)</title><rect x="263.3" y="981" width="58.3" height="15.0" fill="rgb(206,218,47)" rx="2" ry="2" />
<text  x="266.34" y="991.5" >__perf..</text>
</g>
<g >
<title>std::get&lt;0ul, byte*, std::default_delete&lt;byte []&gt; &gt; (1 samples, 0.05%)</title><rect x="858.6" y="853" width="0.6" height="15.0" fill="rgb(249,62,30)" rx="2" ry="2" />
<text  x="861.61" y="863.5" ></text>
</g>
<g >
<title>rclcpp::Executor::get_next_ready_executable_from_map (2 samples, 0.10%)</title><rect x="508.0" y="1253" width="1.3" height="15.0" fill="rgb(216,208,33)" rx="2" ry="2" />
<text  x="511.02" y="1263.5" ></text>
</g>
<g >
<title>std::__detail::_Hash_code_base&lt;rmw_event_type_t, std::pair&lt;rmw_event_type_t const, unsigned int&gt;, std::__detail::_Select1st, std::hash&lt;rmw_event_type_t&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false&gt;::_M_extract (2 samples, 0.10%)</title><rect x="435.5" y="1125" width="1.3" height="15.0" fill="rgb(226,175,35)" rx="2" ry="2" />
<text  x="438.54" y="1135.5" ></text>
</g>
<g >
<title>__sched_text_start (8 samples, 0.42%)</title><rect x="1110.7" y="1157" width="5.0" height="15.0" fill="rgb(227,79,32)" rx="2" ry="2" />
<text  x="1113.71" y="1167.5" ></text>
</g>
<g >
<title>[librmw_cyclonedds_cpp.so] (1 samples, 0.05%)</title><rect x="397.8" y="1141" width="0.6" height="15.0" fill="rgb(222,210,3)" rx="2" ry="2" />
<text  x="400.76" y="1151.5" ></text>
</g>
<g >
<title>__perf_event_task_sched_in (4 samples, 0.21%)</title><rect x="1113.2" y="1125" width="2.5" height="15.0" fill="rgb(249,227,4)" rx="2" ry="2" />
<text  x="1116.19" y="1135.5" ></text>
</g>
<g >
<title>put_prev_entity (1 samples, 0.05%)</title><rect x="345.1" y="965" width="0.6" height="15.0" fill="rgb(238,216,3)" rx="2" ry="2" />
<text  x="348.11" y="975.5" ></text>
</g>
<g >
<title>__netif_receive_skb_one_core (74 samples, 3.88%)</title><rect x="675.9" y="437" width="45.8" height="15.0" fill="rgb(216,169,15)" rx="2" ry="2" />
<text  x="678.88" y="447.5" >__ne..</text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::max_size (1 samples, 0.05%)</title><rect x="955.2" y="997" width="0.7" height="15.0" fill="rgb(233,167,18)" rx="2" ry="2" />
<text  x="958.24" y="1007.5" ></text>
</g>
<g >
<title>check_stack_object (1 samples, 0.05%)</title><rect x="742.8" y="677" width="0.6" height="15.0" fill="rgb(205,137,50)" rx="2" ry="2" />
<text  x="745.78" y="687.5" ></text>
</g>
<g >
<title>serdata_plist_to_sample (1 samples, 0.05%)</title><rect x="10.6" y="1173" width="0.6" height="15.0" fill="rgb(208,141,45)" rx="2" ry="2" />
<text  x="13.62" y="1183.5" ></text>
</g>
<g >
<title>ddsrt_recvmsg (1 samples, 0.05%)</title><rect x="21.8" y="1157" width="0.6" height="15.0" fill="rgb(252,137,13)" rx="2" ry="2" />
<text  x="24.77" y="1167.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (189 samples, 9.92%)</title><rect x="233.6" y="1125" width="117.1" height="15.0" fill="rgb(215,0,21)" rx="2" ry="2" />
<text  x="236.61" y="1135.5" >entry_SYSCALL_..</text>
</g>
<g >
<title>dev_hard_start_xmit (1 samples, 0.05%)</title><rect x="1177.6" y="773" width="0.6" height="15.0" fill="rgb(222,1,50)" rx="2" ry="2" />
<text  x="1180.61" y="783.5" ></text>
</g>
<g >
<title>std::_Any_data::_M_access&lt;void const*  (1 samples, 0.05%)</title><rect x="819.6" y="741" width="0.6" height="15.0" fill="rgb(244,63,26)" rx="2" ry="2" />
<text  x="822.59" y="751.5" ></text>
</g>
<g >
<title>ddsrt_chh_lookup (1 samples, 0.05%)</title><rect x="1175.1" y="1157" width="0.7" height="15.0" fill="rgb(209,128,23)" rx="2" ry="2" />
<text  x="1178.13" y="1167.5" ></text>
</g>
<g >
<title>std::unordered_map&lt;rmw_cyclonedds_cpp::CDRWriter::CacheKey, bool, rmw_cyclonedds_cpp::CDRWriter::CacheKey::Hash, std::equal_to&lt;rmw_cyclonedds_cpp::CDRWriter::CacheKey&gt;, std::allocator&lt;std::pair&lt;rmw_cyclonedds_cpp::CDRWriter::CacheKey const, bool&gt; &gt; &gt;::at (6 samples, 0.31%)</title><rect x="836.9" y="805" width="3.7" height="15.0" fill="rgb(243,35,13)" rx="2" ry="2" />
<text  x="839.93" y="815.5" ></text>
</g>
<g >
<title>udp_sendmsg (19 samples, 1.00%)</title><rect x="1116.9" y="1141" width="11.8" height="15.0" fill="rgb(226,84,10)" rx="2" ry="2" />
<text  x="1119.91" y="1151.5" ></text>
</g>
<g >
<title>[librmw_cyclonedds_cpp.so] (1 samples, 0.05%)</title><rect x="854.9" y="885" width="0.6" height="15.0" fill="rgb(223,25,23)" rx="2" ry="2" />
<text  x="857.89" y="895.5" ></text>
</g>
<g >
<title>__check_object_size (1 samples, 0.05%)</title><rect x="742.8" y="693" width="0.6" height="15.0" fill="rgb(251,46,2)" rx="2" ry="2" />
<text  x="745.78" y="703.5" ></text>
</g>
<g >
<title>dds_tk_hash_void (1 samples, 0.05%)</title><rect x="589.2" y="901" width="0.6" height="15.0" fill="rgb(253,202,29)" rx="2" ry="2" />
<text  x="592.16" y="911.5" ></text>
</g>
<g >
<title>__pthread_cond_wait_common (7 samples, 0.37%)</title><rect x="11.9" y="1157" width="4.3" height="15.0" fill="rgb(253,110,29)" rx="2" ry="2" />
<text  x="14.86" y="1167.5" ></text>
</g>
<g >
<title>__perf_event_task_sched_out (4 samples, 0.21%)</title><rect x="247.2" y="997" width="2.5" height="15.0" fill="rgb(205,143,45)" rx="2" ry="2" />
<text  x="250.24" y="1007.5" ></text>
</g>
<g >
<title>__tls_get_addr (1 samples, 0.05%)</title><rect x="754.5" y="885" width="0.7" height="15.0" fill="rgb(216,189,12)" rx="2" ry="2" />
<text  x="757.55" y="895.5" ></text>
</g>
<g >
<title>std::__detail::_Hash_code_base&lt;rmw_cyclonedds_cpp::CDRWriter::CacheKey, std::pair&lt;rmw_cyclonedds_cpp::CDRWriter::CacheKey const, bool&gt;, std::__detail::_Select1st, rmw_cyclonedds_cpp::CDRWriter::CacheKey::Hash, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, true&gt;::_M_hash_code (1 samples, 0.05%)</title><rect x="796.7" y="741" width="0.6" height="15.0" fill="rgb(223,111,1)" rx="2" ry="2" />
<text  x="799.67" y="751.5" ></text>
</g>
<g >
<title>std::__detail::_Map_base&lt;rmw_cyclonedds_cpp::CDRWriter::CacheKey, std::pair&lt;rmw_cyclonedds_cpp::CDRWriter::CacheKey const, bool&gt;, std::allocator&lt;std::pair&lt;rmw_cyclonedds_cpp::CDRWriter::CacheKey const, bool&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;rmw_cyclonedds_cpp::CDRWriter::CacheKey&gt;, rmw_cyclonedds_cpp::CDRWriter::CacheKey::Hash, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt;, true&gt;::at (2 samples, 0.10%)</title><rect x="848.7" y="741" width="1.2" height="15.0" fill="rgb(253,15,8)" rx="2" ry="2" />
<text  x="851.70" y="751.5" ></text>
</g>
<g >
<title>std::__fill_n_a&lt;int*, unsigned long, int&gt; (7 samples, 0.37%)</title><rect x="950.3" y="949" width="4.3" height="15.0" fill="rgb(224,11,38)" rx="2" ry="2" />
<text  x="953.28" y="959.5" ></text>
</g>
<g >
<title>[librmw_cyclonedds_cpp.so] (1 samples, 0.05%)</title><rect x="858.6" y="837" width="0.6" height="15.0" fill="rgb(244,54,25)" rx="2" ry="2" />
<text  x="861.61" y="847.5" ></text>
</g>
<g >
<title>std::__niter_wrap&lt;long*&gt; (1 samples, 0.05%)</title><rect x="127.1" y="1253" width="0.6" height="15.0" fill="rgb(249,68,4)" rx="2" ry="2" />
<text  x="130.07" y="1263.5" ></text>
</g>
<g >
<title>rclcpp::memory_strategies::allocator_memory_strategy::AllocatorMemoryStrategy&lt;std::allocator&lt;void&gt; &gt;::remove_null_handles (1 samples, 0.05%)</title><rect x="1131.2" y="1269" width="0.6" height="15.0" fill="rgb(234,227,31)" rx="2" ry="2" />
<text  x="1134.15" y="1279.5" ></text>
</g>
<g >
<title>rmw_cyclonedds_cpp::CDRWriter::serialize (4 samples, 0.21%)</title><rect x="849.9" y="789" width="2.5" height="15.0" fill="rgb(216,180,10)" rx="2" ry="2" />
<text  x="852.94" y="799.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.05%)</title><rect x="1180.1" y="1029" width="0.6" height="15.0" fill="rgb(230,196,30)" rx="2" ry="2" />
<text  x="1183.09" y="1039.5" ></text>
</g>
<g >
<title>__udp4_lib_lookup (1 samples, 0.05%)</title><rect x="1123.1" y="773" width="0.6" height="15.0" fill="rgb(253,220,51)" rx="2" ry="2" />
<text  x="1126.10" y="783.5" ></text>
</g>
<g >
<title>rclcpp::memory_strategies::allocator_memory_strategy::AllocatorMemoryStrategy&lt;std::allocator&lt;void&gt; &gt;::add_handles_to_wait_set (40 samples, 2.10%)</title><rect x="1023.4" y="1141" width="24.8" height="15.0" fill="rgb(236,3,1)" rx="2" ry="2" />
<text  x="1026.38" y="1151.5" >r..</text>
</g>
<g >
<title>____sys_recvmsg (1 samples, 0.05%)</title><rect x="21.8" y="1029" width="0.6" height="15.0" fill="rgb(220,18,34)" rx="2" ry="2" />
<text  x="24.77" y="1039.5" ></text>
</g>
<g >
<title>std::mutex::lock (1 samples, 0.05%)</title><rect x="931.7" y="869" width="0.6" height="15.0" fill="rgb(242,139,28)" rx="2" ry="2" />
<text  x="934.70" y="879.5" ></text>
</g>
<g >
<title>rcl_wait_set_resize (13 samples, 0.68%)</title><rect x="1002.9" y="1141" width="8.1" height="15.0" fill="rgb(239,66,25)" rx="2" ry="2" />
<text  x="1005.93" y="1151.5" ></text>
</g>
<g >
<title>std::unordered_map&lt;rmw_cyclonedds_cpp::CDRWriter::CacheKey, bool, rmw_cyclonedds_cpp::CDRWriter::CacheKey::Hash, std::equal_to&lt;rmw_cyclonedds_cpp::CDRWriter::CacheKey&gt;, std::allocator&lt;std::pair&lt;rmw_cyclonedds_cpp::CDRWriter::CacheKey const, bool&gt; &gt; &gt;::at (3 samples, 0.16%)</title><rect x="844.4" y="773" width="1.8" height="15.0" fill="rgb(252,156,50)" rx="2" ry="2" />
<text  x="847.36" y="783.5" ></text>
</g>
<g >
<title>ctx_sched_out (2 samples, 0.10%)</title><rect x="248.5" y="965" width="1.2" height="15.0" fill="rgb(242,159,5)" rx="2" ry="2" />
<text  x="251.48" y="975.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;rmw_cyclonedds_cpp::CDRWriter::CacheKey, std::pair&lt;rmw_cyclonedds_cpp::CDRWriter::CacheKey const, bool&gt;, std::allocator&lt;std::pair&lt;rmw_cyclonedds_cpp::CDRWriter::CacheKey const, bool&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;rmw_cyclonedds_cpp::CDRWriter::CacheKey&gt;, rmw_cyclonedds_cpp::CDRWriter::CacheKey::Hash, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_bucket_index (1 samples, 0.05%)</title><rect x="836.9" y="773" width="0.6" height="15.0" fill="rgb(237,169,45)" rx="2" ry="2" />
<text  x="839.93" y="783.5" ></text>
</g>
<g >
<title>[librmw_cyclonedds_cpp.so] (1 samples, 0.05%)</title><rect x="871.6" y="805" width="0.6" height="15.0" fill="rgb(232,50,39)" rx="2" ry="2" />
<text  x="874.62" y="815.5" ></text>
</g>
<g >
<title>perf_event_sched_in (4 samples, 0.21%)</title><rect x="1113.2" y="1109" width="2.5" height="15.0" fill="rgb(212,216,33)" rx="2" ry="2" />
<text  x="1116.19" y="1119.5" ></text>
</g>
<g >
<title>ttwu_do_activate (4 samples, 0.21%)</title><rect x="1125.6" y="581" width="2.5" height="15.0" fill="rgb(224,205,28)" rx="2" ry="2" />
<text  x="1128.58" y="591.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;rmw_cyclonedds_cpp::CDRWriter::CacheKey, std::pair&lt;rmw_cyclonedds_cpp::CDRWriter::CacheKey const, bool&gt;, std::allocator&lt;std::pair&lt;rmw_cyclonedds_cpp::CDRWriter::CacheKey const, bool&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;rmw_cyclonedds_cpp::CDRWriter::CacheKey&gt;, rmw_cyclonedds_cpp::CDRWriter::CacheKey::Hash, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_bucket_index (2 samples, 0.10%)</title><rect x="807.2" y="725" width="1.2" height="15.0" fill="rgb(248,175,6)" rx="2" ry="2" />
<text  x="810.20" y="735.5" ></text>
</g>
<g >
<title>__udp4_lib_lookup (4 samples, 0.21%)</title><rect x="684.6" y="309" width="2.4" height="15.0" fill="rgb(233,189,48)" rx="2" ry="2" />
<text  x="687.55" y="319.5" ></text>
</g>
<g >
<title>recvUC (10 samples, 0.52%)</title><rect x="37.3" y="1285" width="6.1" height="15.0" fill="rgb(235,31,0)" rx="2" ry="2" />
<text  x="40.25" y="1295.5" ></text>
</g>
<g >
<title>idle_cpu (2 samples, 0.10%)</title><rect x="331.5" y="949" width="1.2" height="15.0" fill="rgb(205,189,17)" rx="2" ry="2" />
<text  x="334.48" y="959.5" ></text>
</g>
<g >
<title>rmw_cyclonedds_cpp::CDRWriter::lookup_trivially_serialized (1 samples, 0.05%)</title><rect x="850.6" y="773" width="0.6" height="15.0" fill="rgb(229,18,43)" rx="2" ry="2" />
<text  x="853.56" y="783.5" ></text>
</g>
<g >
<title>__udp_enqueue_schedule_skb (6 samples, 0.31%)</title><rect x="1124.3" y="725" width="3.8" height="15.0" fill="rgb(247,214,13)" rx="2" ry="2" />
<text  x="1127.34" y="735.5" ></text>
</g>
<g >
<title>[librmw_cyclonedds_cpp.so] (2 samples, 0.10%)</title><rect x="757.0" y="869" width="1.3" height="15.0" fill="rgb(224,55,20)" rx="2" ry="2" />
<text  x="760.02" y="879.5" ></text>
</g>
<g >
<title>do_select (22 samples, 1.15%)</title><rect x="23.6" y="1061" width="13.7" height="15.0" fill="rgb(248,160,2)" rx="2" ry="2" />
<text  x="26.63" y="1071.5" ></text>
</g>
<g >
<title>schedule_hrtimeout_range (21 samples, 1.10%)</title><rect x="23.6" y="1029" width="13.0" height="15.0" fill="rgb(222,113,1)" rx="2" ry="2" />
<text  x="26.63" y="1039.5" ></text>
</g>
<g >
<title>ddsrt_hh_lookup (1 samples, 0.05%)</title><rect x="573.7" y="901" width="0.6" height="15.0" fill="rgb(228,109,50)" rx="2" ry="2" />
<text  x="576.67" y="911.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::_M_default_append (26 samples, 1.36%)</title><rect x="945.3" y="1029" width="16.1" height="15.0" fill="rgb(215,28,15)" rx="2" ry="2" />
<text  x="948.33" y="1039.5" ></text>
</g>
<g >
<title>__ip_append_data.isra.0 (1 samples, 0.05%)</title><rect x="1117.5" y="1109" width="0.6" height="15.0" fill="rgb(245,48,30)" rx="2" ry="2" />
<text  x="1120.53" y="1119.5" ></text>
</g>
<g >
<title>__memcmp_avx2_movbe (3 samples, 0.16%)</title><rect x="444.8" y="1189" width="1.9" height="15.0" fill="rgb(246,74,50)" rx="2" ry="2" />
<text  x="447.83" y="1199.5" ></text>
</g>
<g >
<title>rclcpp::memory_strategies::allocator_memory_strategy::AllocatorMemoryStrategy&lt;std::allocator&lt;void&gt; &gt;::number_of_guard_conditions (3 samples, 0.16%)</title><rect x="1061.2" y="1141" width="1.8" height="15.0" fill="rgb(249,35,38)" rx="2" ry="2" />
<text  x="1064.16" y="1151.5" ></text>
</g>
<g >
<title>[[heap]] (21 samples, 1.10%)</title><rect x="94.9" y="1269" width="13.0" height="15.0" fill="rgb(250,16,43)" rx="2" ry="2" />
<text  x="97.86" y="1279.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;byte [], std::default_delete&lt;byte []&gt; &gt;::unique_ptr&lt;std::default_delete&lt;byte []&gt;, void&gt; (8 samples, 0.42%)</title><rect x="867.3" y="885" width="4.9" height="15.0" fill="rgb(240,158,42)" rx="2" ry="2" />
<text  x="870.28" y="895.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;rmw_cyclonedds_cpp::CDRWriter::CacheKey, std::pair&lt;rmw_cyclonedds_cpp::CDRWriter::CacheKey const, bool&gt;, std::allocator&lt;std::pair&lt;rmw_cyclonedds_cpp::CDRWriter::CacheKey const, bool&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;rmw_cyclonedds_cpp::CDRWriter::CacheKey&gt;, rmw_cyclonedds_cpp::CDRWriter::CacheKey::Hash, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_bucket_index (1 samples, 0.05%)</title><rect x="794.8" y="709" width="0.6" height="15.0" fill="rgb(232,83,44)" rx="2" ry="2" />
<text  x="797.81" y="719.5" ></text>
</g>
<g >
<title>std::_Head_base&lt;0ul, MinimalPublisher*, false&gt;::_M_head (2 samples, 0.10%)</title><rect x="975.7" y="1045" width="1.2" height="15.0" fill="rgb(215,99,16)" rx="2" ry="2" />
<text  x="978.68" y="1055.5" ></text>
</g>
<g >
<title>sched_acknack_if_needed (1 samples, 0.05%)</title><rect x="42.2" y="1141" width="0.6" height="15.0" fill="rgb(221,167,46)" rx="2" ry="2" />
<text  x="45.21" y="1151.5" ></text>
</g>
<g >
<title>ip_finish_output (14 samples, 0.73%)</title><rect x="1120.0" y="1061" width="8.7" height="15.0" fill="rgb(246,29,4)" rx="2" ry="2" />
<text  x="1123.01" y="1071.5" ></text>
</g>
<g >
<title>std::__remove_if&lt;__gnu_cxx::__normal_iterator&lt;std::shared_ptr&lt;rcl_subscription_t const&gt;*, std::vector&lt;std::shared_ptr&lt;rcl_subscription_t const&gt;, std::allocator&lt;std::shared_ptr&lt;rcl_subscription_t const&gt; &gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_equals_val&lt;decltype (1 samples, 0.05%)</title><rect x="106.6" y="1253" width="0.6" height="15.0" fill="rgb(226,147,10)" rx="2" ry="2" />
<text  x="109.63" y="1263.5" ></text>
</g>
<g >
<title>_copy_from_iter_full (2 samples, 0.10%)</title><rect x="623.2" y="613" width="1.3" height="15.0" fill="rgb(234,101,8)" rx="2" ry="2" />
<text  x="626.23" y="623.5" ></text>
</g>
<g >
<title>group_sched_in (2 samples, 0.10%)</title><rect x="1114.4" y="1045" width="1.3" height="15.0" fill="rgb(228,124,17)" rx="2" ry="2" />
<text  x="1117.43" y="1055.5" ></text>
</g>
<g >
<title>__pollwait (1 samples, 0.05%)</title><rect x="36.6" y="1013" width="0.7" height="15.0" fill="rgb(242,92,14)" rx="2" ry="2" />
<text  x="39.64" y="1023.5" ></text>
</g>
<g >
<title>std::unordered_map&lt;rmw_cyclonedds_cpp::CDRWriter::CacheKey, bool, rmw_cyclonedds_cpp::CDRWriter::CacheKey::Hash, std::equal_to&lt;rmw_cyclonedds_cpp::CDRWriter::CacheKey&gt;, std::allocator&lt;std::pair&lt;rmw_cyclonedds_cpp::CDRWriter::CacheKey const, bool&gt; &gt; &gt;::at (5 samples, 0.26%)</title><rect x="779.9" y="837" width="3.1" height="15.0" fill="rgb(232,74,13)" rx="2" ry="2" />
<text  x="782.94" y="847.5" ></text>
</g>
<g >
<title>serdata_rmw::data (1 samples, 0.05%)</title><rect x="854.3" y="901" width="0.6" height="15.0" fill="rgb(206,190,24)" rx="2" ry="2" />
<text  x="857.27" y="911.5" ></text>
</g>
<g >
<title>[unknown] (636 samples, 33.39%)</title><rect x="133.9" y="1269" width="393.9" height="15.0" fill="rgb(220,126,9)" rx="2" ry="2" />
<text  x="136.88" y="1279.5" >[unknown]</text>
</g>
<g >
<title>ip_local_out (1 samples, 0.05%)</title><rect x="1180.1" y="853" width="0.6" height="15.0" fill="rgb(231,150,28)" rx="2" ry="2" />
<text  x="1183.09" y="863.5" ></text>
</g>
<g >
<title>perf_pmu_enable.part.0 (5 samples, 0.26%)</title><rect x="1170.2" y="981" width="3.1" height="15.0" fill="rgb(239,225,36)" rx="2" ry="2" />
<text  x="1173.18" y="991.5" ></text>
</g>
<g >
<title>dds_write_impl (584 samples, 30.66%)</title><rect x="577.4" y="949" width="361.7" height="15.0" fill="rgb(206,136,51)" rx="2" ry="2" />
<text  x="580.39" y="959.5" >dds_write_impl</text>
</g>
<g >
<title>select_idle_sibling (1 samples, 0.05%)</title><rect x="695.7" y="101" width="0.6" height="15.0" fill="rgb(216,8,2)" rx="2" ry="2" />
<text  x="698.70" y="111.5" ></text>
</g>
<g >
<title>psi_task_change (6 samples, 0.31%)</title><rect x="259.0" y="981" width="3.7" height="15.0" fill="rgb(249,113,13)" rx="2" ry="2" />
<text  x="262.01" y="991.5" ></text>
</g>
<g >
<title>recv (26 samples, 1.36%)</title><rect x="21.1" y="1285" width="16.2" height="15.0" fill="rgb(253,39,46)" rx="2" ry="2" />
<text  x="24.15" y="1295.5" ></text>
</g>
<g >
<title>dds_write_impl (1 samples, 0.05%)</title><rect x="133.9" y="1237" width="0.6" height="15.0" fill="rgb(232,124,31)" rx="2" ry="2" />
<text  x="136.88" y="1247.5" ></text>
</g>
<g >
<title>udp4_lib_lookup2 (1 samples, 0.05%)</title><rect x="1123.1" y="757" width="0.6" height="15.0" fill="rgb(251,124,3)" rx="2" ry="2" />
<text  x="1126.10" y="767.5" ></text>
</g>
<g >
<title>do_anonymous_page (1 samples, 0.05%)</title><rect x="42.8" y="1077" width="0.6" height="15.0" fill="rgb(216,89,17)" rx="2" ry="2" />
<text  x="45.83" y="1087.5" ></text>
</g>
<g >
<title>native_write_msr (59 samples, 3.10%)</title><rect x="285.0" y="917" width="36.6" height="15.0" fill="rgb(241,37,16)" rx="2" ry="2" />
<text  x="288.02" y="927.5" >nat..</text>
</g>
<g >
<title>___sys_sendmsg (215 samples, 11.29%)</title><rect x="610.2" y="741" width="133.2" height="15.0" fill="rgb(239,114,1)" rx="2" ry="2" />
<text  x="613.22" y="751.5" >___sys_sendmsg</text>
</g>
<g >
<title>rmw_cyclonedds_cpp::CallbackSpanSequenceValueType::sequence_size (2 samples, 0.10%)</title><rect x="117.2" y="1253" width="1.2" height="15.0" fill="rgb(214,210,10)" rx="2" ry="2" />
<text  x="120.16" y="1263.5" ></text>
</g>
<g >
<title>netif_rx (2 samples, 0.10%)</title><rect x="726.7" y="485" width="1.2" height="15.0" fill="rgb(241,46,16)" rx="2" ry="2" />
<text  x="729.67" y="495.5" ></text>
</g>
<g >
<title>nn_xmsg_serdata (9 samples, 0.47%)</title><rect x="915.6" y="917" width="5.6" height="15.0" fill="rgb(225,188,48)" rx="2" ry="2" />
<text  x="918.60" y="927.5" ></text>
</g>
<g >
<title>do_futex (1 samples, 0.05%)</title><rect x="42.2" y="1013" width="0.6" height="15.0" fill="rgb(245,35,36)" rx="2" ry="2" />
<text  x="45.21" y="1023.5" ></text>
</g>
<g >
<title>ip_make_skb (2 samples, 0.10%)</title><rect x="1188.8" y="1125" width="1.2" height="15.0" fill="rgb(213,170,46)" rx="2" ry="2" />
<text  x="1191.76" y="1135.5" ></text>
</g>
<g >
<title>__cgroup_account_cputime (1 samples, 0.05%)</title><rect x="254.7" y="933" width="0.6" height="15.0" fill="rgb(234,105,24)" rx="2" ry="2" />
<text  x="257.67" y="943.5" ></text>
</g>
<g >
<title>ip_setup_cork (1 samples, 0.05%)</title><rect x="657.9" y="661" width="0.6" height="15.0" fill="rgb(210,183,5)" rx="2" ry="2" />
<text  x="660.92" y="671.5" ></text>
</g>
<g >
<title>net_rx_action (11 samples, 0.58%)</title><rect x="1121.2" y="949" width="6.9" height="15.0" fill="rgb(207,97,50)" rx="2" ry="2" />
<text  x="1124.24" y="959.5" ></text>
</g>
<g >
<title>apic_timer_interrupt (1 samples, 0.05%)</title><rect x="1160.3" y="981" width="0.6" height="15.0" fill="rgb(224,109,54)" rx="2" ry="2" />
<text  x="1163.27" y="991.5" ></text>
</g>
<g >
<title>alloc_skb_with_frags (1 samples, 0.05%)</title><rect x="1117.5" y="1061" width="0.6" height="15.0" fill="rgb(218,185,5)" rx="2" ry="2" />
<text  x="1120.53" y="1071.5" ></text>
</g>
<g >
<title>_raw_spin_lock_irqsave (2 samples, 0.10%)</title><rect x="242.9" y="981" width="1.2" height="15.0" fill="rgb(229,98,13)" rx="2" ry="2" />
<text  x="245.90" y="991.5" ></text>
</g>
<g >
<title>[libddsc.so.0.8.0] (2 samples, 0.10%)</title><rect x="595.4" y="917" width="1.2" height="15.0" fill="rgb(215,216,31)" rx="2" ry="2" />
<text  x="598.35" y="927.5" ></text>
</g>
<g >
<title>ip_rcv_finish_core.isra.0 (2 samples, 0.10%)</title><rect x="720.5" y="405" width="1.2" height="15.0" fill="rgb(207,207,12)" rx="2" ry="2" />
<text  x="723.48" y="415.5" ></text>
</g>
<g >
<title>[librmw_cyclonedds_cpp.so] (3 samples, 0.16%)</title><rect x="402.7" y="1157" width="1.9" height="15.0" fill="rgb(211,65,29)" rx="2" ry="2" />
<text  x="405.71" y="1167.5" ></text>
</g>
<g >
<title>ddsrt_mutex_lock (3 samples, 0.16%)</title><rect x="549.5" y="1077" width="1.9" height="15.0" fill="rgb(253,75,41)" rx="2" ry="2" />
<text  x="552.52" y="1087.5" ></text>
</g>
<g >
<title>std::vector&lt;long, std::allocator&lt;long&gt; &gt;::size (1 samples, 0.05%)</title><rect x="506.8" y="1205" width="0.6" height="15.0" fill="rgb(226,153,7)" rx="2" ry="2" />
<text  x="509.78" y="1215.5" ></text>
</g>
<g >
<title>futex_wait_cancelable (7 samples, 0.37%)</title><rect x="11.9" y="1141" width="4.3" height="15.0" fill="rgb(227,199,5)" rx="2" ry="2" />
<text  x="14.86" y="1151.5" ></text>
</g>
<g >
<title>__GI___libc_malloc (1 samples, 0.05%)</title><rect x="1007.9" y="1109" width="0.6" height="15.0" fill="rgb(227,112,21)" rx="2" ry="2" />
<text  x="1010.89" y="1119.5" ></text>
</g>
<g >
<title>__sched_text_start (28 samples, 1.47%)</title><rect x="1147.9" y="1013" width="17.3" height="15.0" fill="rgb(251,45,10)" rx="2" ry="2" />
<text  x="1150.88" y="1023.5" ></text>
</g>
<g >
<title>do_futex (12 samples, 0.63%)</title><rect x="1108.9" y="1221" width="7.4" height="15.0" fill="rgb(241,34,11)" rx="2" ry="2" />
<text  x="1111.86" y="1231.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_ebo_helper&lt;1, std::hash&lt;rmw_event_type_t&gt;, true&gt;::_S_cget (2 samples, 0.10%)</title><rect x="426.3" y="1109" width="1.2" height="15.0" fill="rgb(208,89,41)" rx="2" ry="2" />
<text  x="429.25" y="1119.5" ></text>
</g>
<g >
<title>select_task_rq_fair (2 samples, 0.10%)</title><rect x="1124.3" y="581" width="1.3" height="15.0" fill="rgb(216,198,47)" rx="2" ry="2" />
<text  x="1127.34" y="591.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.05%)</title><rect x="1136.1" y="1269" width="0.6" height="15.0" fill="rgb(242,100,17)" rx="2" ry="2" />
<text  x="1139.11" y="1279.5" ></text>
</g>
<g >
<title>std::unordered_map&lt;rmw_cyclonedds_cpp::CDRWriter::CacheKey, bool, rmw_cyclonedds_cpp::CDRWriter::CacheKey::Hash, std::equal_to&lt;rmw_cyclonedds_cpp::CDRWriter::CacheKey&gt;, std::allocator&lt;std::pair&lt;rmw_cyclonedds_cpp::CDRWriter::CacheKey const, bool&gt; &gt; &gt;::at (7 samples, 0.37%)</title><rect x="807.2" y="757" width="4.3" height="15.0" fill="rgb(224,48,29)" rx="2" ry="2" />
<text  x="810.20" y="767.5" ></text>
</g>
<g >
<title>nn_freelist_pop (1 samples, 0.05%)</title><rect x="1178.2" y="1141" width="0.7" height="15.0" fill="rgb(237,8,31)" rx="2" ry="2" />
<text  x="1181.23" y="1151.5" ></text>
</g>
<g >
<title>[librmw_cyclonedds_cpp.so] (9 samples, 0.47%)</title><rect x="480.1" y="1189" width="5.6" height="15.0" fill="rgb(205,135,45)" rx="2" ry="2" />
<text  x="483.14" y="1199.5" ></text>
</g>
<g >
<title>get_futex_key (2 samples, 0.10%)</title><rect x="366.2" y="1061" width="1.2" height="15.0" fill="rgb(234,160,33)" rx="2" ry="2" />
<text  x="369.17" y="1071.5" ></text>
</g>
<g >
<title>ddsrt_avl_is_empty (1 samples, 0.05%)</title><rect x="907.5" y="885" width="0.7" height="15.0" fill="rgb(207,14,21)" rx="2" ry="2" />
<text  x="910.54" y="895.5" ></text>
</g>
<g >
<title>__GI___libc_malloc (4 samples, 0.21%)</title><rect x="856.1" y="869" width="2.5" height="15.0" fill="rgb(227,7,11)" rx="2" ry="2" />
<text  x="859.13" y="879.5" ></text>
</g>
<g >
<title>__sys_recvmsg (1 samples, 0.05%)</title><rect x="21.8" y="1061" width="0.6" height="15.0" fill="rgb(245,40,32)" rx="2" ry="2" />
<text  x="24.77" y="1071.5" ></text>
</g>
<g >
<title>rcl_wait_set_add_event (6 samples, 0.31%)</title><rect x="1044.4" y="1109" width="3.8" height="15.0" fill="rgb(215,219,35)" rx="2" ry="2" />
<text  x="1047.44" y="1119.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_base&lt;rmw_cyclonedds_cpp::CDRWriter::CacheKey, std::pair&lt;rmw_cyclonedds_cpp::CDRWriter::CacheKey const, bool&gt;, std::__detail::_Select1st, std::equal_to&lt;rmw_cyclonedds_cpp::CDRWriter::CacheKey&gt;, rmw_cyclonedds_cpp::CDRWriter::CacheKey::Hash, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_equals (1 samples, 0.05%)</title><rect x="782.4" y="773" width="0.6" height="15.0" fill="rgb(219,132,42)" rx="2" ry="2" />
<text  x="785.42" y="783.5" ></text>
</g>
<g >
<title>sock_sendmsg (1 samples, 0.05%)</title><rect x="1180.1" y="933" width="0.6" height="15.0" fill="rgb(205,41,34)" rx="2" ry="2" />
<text  x="1183.09" y="943.5" ></text>
</g>
<g >
<title>rclcpp::memory_strategies::allocator_memory_strategy::AllocatorMemoryStrategy&lt;std::allocator&lt;void&gt; &gt;::number_of_ready_subscriptions (1 samples, 0.05%)</title><rect x="1066.1" y="1141" width="0.6" height="15.0" fill="rgb(211,158,33)" rx="2" ry="2" />
<text  x="1069.12" y="1151.5" ></text>
</g>
<g >
<title>ddsrt_hh_lookup (2 samples, 0.10%)</title><rect x="141.3" y="1253" width="1.3" height="15.0" fill="rgb(248,131,40)" rx="2" ry="2" />
<text  x="144.32" y="1263.5" ></text>
</g>
<g >
<title>whc_default_insert (3 samples, 0.16%)</title><rect x="143.2" y="917" width="1.8" height="15.0" fill="rgb(228,126,21)" rx="2" ry="2" />
<text  x="146.18" y="927.5" ></text>
</g>
<g >
<title>ip_local_deliver (9 samples, 0.47%)</title><rect x="1122.5" y="853" width="5.6" height="15.0" fill="rgb(208,166,44)" rx="2" ry="2" />
<text  x="1125.48" y="863.5" ></text>
</g>
<g >
<title>__perf_event_task_sched_out (1 samples, 0.05%)</title><rect x="1110.7" y="1141" width="0.6" height="15.0" fill="rgb(213,8,30)" rx="2" ry="2" />
<text  x="1113.71" y="1151.5" ></text>
</g>
<g >
<title>rcl_publisher_is_valid_except_context (1 samples, 0.05%)</title><rect x="111.6" y="1253" width="0.6" height="15.0" fill="rgb(209,80,43)" rx="2" ry="2" />
<text  x="114.59" y="1263.5" ></text>
</g>
<g >
<title>nn_xpack_packetid (1 samples, 0.05%)</title><rect x="931.1" y="917" width="0.6" height="15.0" fill="rgb(238,174,52)" rx="2" ry="2" />
<text  x="934.08" y="927.5" ></text>
</g>
<g >
<title>enqueue_task_fair (1 samples, 0.05%)</title><rect x="1180.1" y="309" width="0.6" height="15.0" fill="rgb(225,80,13)" rx="2" ry="2" />
<text  x="1183.09" y="319.5" ></text>
</g>
<g >
<title>std::vector&lt;long, std::allocator&lt;long&gt; &gt;::emplace_back&lt;long&gt; (9 samples, 0.47%)</title><rect x="473.9" y="1189" width="5.6" height="15.0" fill="rgb(236,18,46)" rx="2" ry="2" />
<text  x="476.95" y="1199.5" ></text>
</g>
<g >
<title>perf_pmu_enable.part.0 (62 samples, 3.25%)</title><rect x="283.2" y="965" width="38.4" height="15.0" fill="rgb(251,201,46)" rx="2" ry="2" />
<text  x="286.17" y="975.5" >per..</text>
</g>
<g >
<title>__GI___clone (74 samples, 3.88%)</title><rect x="1136.7" y="1269" width="45.9" height="15.0" fill="rgb(241,229,52)" rx="2" ry="2" />
<text  x="1139.73" y="1279.5" >__GI..</text>
</g>
<g >
<title>dds_waitset_observer (7 samples, 0.37%)</title><rect x="545.2" y="1077" width="4.3" height="15.0" fill="rgb(252,153,22)" rx="2" ry="2" />
<text  x="548.18" y="1087.5" ></text>
</g>
<g >
<title>std::__detail::_Mod_range_hashing::operator (1 samples, 0.05%)</title><rect x="807.8" y="693" width="0.6" height="15.0" fill="rgb(241,210,32)" rx="2" ry="2" />
<text  x="810.82" y="703.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (232 samples, 12.18%)</title><rect x="605.3" y="805" width="143.7" height="15.0" fill="rgb(248,23,52)" rx="2" ry="2" />
<text  x="608.27" y="815.5" >entry_SYSCALL_64_a..</text>
</g>
<g >
<title>ddsrt_recvmsg (8 samples, 0.42%)</title><rect x="37.3" y="1157" width="4.9" height="15.0" fill="rgb(246,130,34)" rx="2" ry="2" />
<text  x="40.25" y="1167.5" ></text>
</g>
<g >
<title>[librclcpp.so] (4 samples, 0.21%)</title><rect x="1088.4" y="1141" width="2.5" height="15.0" fill="rgb(236,215,16)" rx="2" ry="2" />
<text  x="1091.41" y="1151.5" ></text>
</g>
<g >
<title>[librclcpp.so] (1 samples, 0.05%)</title><rect x="1102.0" y="1125" width="0.7" height="15.0" fill="rgb(238,221,40)" rx="2" ry="2" />
<text  x="1105.04" y="1135.5" ></text>
</g>
<g >
<title>ip_local_deliver (62 samples, 3.25%)</title><rect x="681.5" y="389" width="38.4" height="15.0" fill="rgb(242,61,38)" rx="2" ry="2" />
<text  x="684.45" y="399.5" >ip_..</text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (2 samples, 0.10%)</title><rect x="1173.3" y="1141" width="1.2" height="15.0" fill="rgb(234,191,41)" rx="2" ry="2" />
<text  x="1176.28" y="1151.5" ></text>
</g>
<g >
<title>rcl_wait_set_add_event (1 samples, 0.05%)</title><rect x="507.4" y="1253" width="0.6" height="15.0" fill="rgb(227,191,20)" rx="2" ry="2" />
<text  x="510.40" y="1263.5" ></text>
</g>
<g >
<title>record_times (1 samples, 0.05%)</title><rect x="709.3" y="69" width="0.6" height="15.0" fill="rgb(205,120,23)" rx="2" ry="2" />
<text  x="712.33" y="79.5" ></text>
</g>
<g >
<title>__GI___clock_gettime (3 samples, 0.16%)</title><rect x="168.0" y="1189" width="1.8" height="15.0" fill="rgb(215,73,7)" rx="2" ry="2" />
<text  x="170.95" y="1199.5" ></text>
</g>
<g >
<title>flexible_sched_in (9 samples, 0.47%)</title><rect x="277.6" y="917" width="5.6" height="15.0" fill="rgb(238,73,19)" rx="2" ry="2" />
<text  x="280.59" y="927.5" ></text>
</g>
<g >
<title>rcl_wait_set_add_guard_condition (1 samples, 0.05%)</title><rect x="1027.7" y="1125" width="0.6" height="15.0" fill="rgb(230,118,37)" rx="2" ry="2" />
<text  x="1030.71" y="1135.5" ></text>
</g>
<g >
<title>__GI___clock_gettime (1 samples, 0.05%)</title><rect x="202.6" y="1173" width="0.7" height="15.0" fill="rgb(225,67,14)" rx="2" ry="2" />
<text  x="205.64" y="1183.5" ></text>
</g>
<g >
<title>rclcpp::spin (935 samples, 49.08%)</title><rect x="528.5" y="1205" width="579.1" height="15.0" fill="rgb(237,211,16)" rx="2" ry="2" />
<text  x="531.46" y="1215.5" >rclcpp::spin</text>
</g>
<g >
<title>std::_Hashtable&lt;rmw_cyclonedds_cpp::CDRWriter::CacheKey, std::pair&lt;rmw_cyclonedds_cpp::CDRWriter::CacheKey const, bool&gt;, std::allocator&lt;std::pair&lt;rmw_cyclonedds_cpp::CDRWriter::CacheKey const, bool&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;rmw_cyclonedds_cpp::CDRWriter::CacheKey&gt;, rmw_cyclonedds_cpp::CDRWriter::CacheKey::Hash, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_find_before_node (1 samples, 0.05%)</title><rect x="849.3" y="709" width="0.6" height="15.0" fill="rgb(206,150,31)" rx="2" ry="2" />
<text  x="852.32" y="719.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;rmw_cyclonedds_cpp::CDRWriter::CacheKey, std::pair&lt;rmw_cyclonedds_cpp::CDRWriter::CacheKey const, bool&gt;, std::allocator&lt;std::pair&lt;rmw_cyclonedds_cpp::CDRWriter::CacheKey const, bool&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;rmw_cyclonedds_cpp::CDRWriter::CacheKey&gt;, rmw_cyclonedds_cpp::CDRWriter::CacheKey::Hash, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_find_node (5 samples, 0.26%)</title><rect x="808.4" y="725" width="3.1" height="15.0" fill="rgb(218,228,50)" rx="2" ry="2" />
<text  x="811.44" y="735.5" ></text>
</g>
<g >
<title>[libddsc.so.0.8.0] (2 samples, 0.10%)</title><rect x="887.7" y="901" width="1.3" height="15.0" fill="rgb(214,123,41)" rx="2" ry="2" />
<text  x="890.72" y="911.5" ></text>
</g>
<g >
<title>__netif_receive_skb_one_core (1 samples, 0.05%)</title><rect x="1180.1" y="661" width="0.6" height="15.0" fill="rgb(237,79,48)" rx="2" ry="2" />
<text  x="1183.09" y="671.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;rmw_cyclonedds_cpp::CDRWriter::CacheKey, std::pair&lt;rmw_cyclonedds_cpp::CDRWriter::CacheKey const, bool&gt;, std::allocator&lt;std::pair&lt;rmw_cyclonedds_cpp::CDRWriter::CacheKey const, bool&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;rmw_cyclonedds_cpp::CDRWriter::CacheKey&gt;, rmw_cyclonedds_cpp::CDRWriter::CacheKey::Hash, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_find_node (1 samples, 0.05%)</title><rect x="812.2" y="725" width="0.6" height="15.0" fill="rgb(233,66,3)" rx="2" ry="2" />
<text  x="815.15" y="735.5" ></text>
</g>
<g >
<title>std::__detail::_Hash_node_value_base&lt;std::pair&lt;rmw_cyclonedds_cpp::CDRWriter::CacheKey const, bool&gt; &gt;::_M_v (1 samples, 0.05%)</title><rect x="797.3" y="741" width="0.6" height="15.0" fill="rgb(240,103,22)" rx="2" ry="2" />
<text  x="800.29" y="751.5" ></text>
</g>
<g >
<title>__dev_queue_xmit (1 samples, 0.05%)</title><rect x="1128.1" y="997" width="0.6" height="15.0" fill="rgb(235,126,25)" rx="2" ry="2" />
<text  x="1131.06" y="1007.5" ></text>
</g>
<g >
<title>finish_task_switch (5 samples, 0.26%)</title><rect x="16.8" y="997" width="3.1" height="15.0" fill="rgb(209,66,1)" rx="2" ry="2" />
<text  x="19.81" y="1007.5" ></text>
</g>
<g >
<title>ip_rcv (69 samples, 3.62%)</title><rect x="679.0" y="421" width="42.7" height="15.0" fill="rgb(253,127,49)" rx="2" ry="2" />
<text  x="681.98" y="431.5" >ip_rcv</text>
</g>
<g >
<title>[librmw_cyclonedds_cpp.so] (2 samples, 0.10%)</title><rect x="900.7" y="789" width="1.3" height="15.0" fill="rgb(223,24,28)" rx="2" ry="2" />
<text  x="903.73" y="799.5" ></text>
</g>
<g >
<title>operator new (4 samples, 0.21%)</title><rect x="856.1" y="885" width="2.5" height="15.0" fill="rgb(253,104,16)" rx="2" ry="2" />
<text  x="859.13" y="895.5" ></text>
</g>
<g >
<title>std::__detail::_Map_base&lt;rmw_cyclonedds_cpp::CDRWriter::CacheKey, std::pair&lt;rmw_cyclonedds_cpp::CDRWriter::CacheKey const, bool&gt;, std::allocator&lt;std::pair&lt;rmw_cyclonedds_cpp::CDRWriter::CacheKey const, bool&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;rmw_cyclonedds_cpp::CDRWriter::CacheKey&gt;, rmw_cyclonedds_cpp::CDRWriter::CacheKey::Hash, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt;, true&gt;::at (1 samples, 0.05%)</title><rect x="850.6" y="741" width="0.6" height="15.0" fill="rgb(251,108,31)" rx="2" ry="2" />
<text  x="853.56" y="751.5" ></text>
</g>
<g >
<title>raw_local_deliver (2 samples, 0.10%)</title><rect x="718.6" y="357" width="1.3" height="15.0" fill="rgb(237,185,12)" rx="2" ry="2" />
<text  x="721.62" y="367.5" ></text>
</g>
<g >
<title>do_futex (19 samples, 1.00%)</title><rect x="356.3" y="1093" width="11.7" height="15.0" fill="rgb(252,225,6)" rx="2" ry="2" />
<text  x="359.26" y="1103.5" ></text>
</g>
<g >
<title>[libddsc.so.0.8.0] (3 samples, 0.16%)</title><rect x="381.7" y="1173" width="1.8" height="15.0" fill="rgb(248,97,52)" rx="2" ry="2" />
<text  x="384.65" y="1183.5" ></text>
</g>
<g >
<title>__GI___pthread_mutex_lock (1 samples, 0.05%)</title><rect x="94.9" y="1253" width="0.6" height="15.0" fill="rgb(240,131,41)" rx="2" ry="2" />
<text  x="97.86" y="1263.5" ></text>
</g>
<g >
<title>std::__detail::_Map_base&lt;rmw_cyclonedds_cpp::CDRWriter::CacheKey, std::pair&lt;rmw_cyclonedds_cpp::CDRWriter::CacheKey const, bool&gt;, std::allocator&lt;std::pair&lt;rmw_cyclonedds_cpp::CDRWriter::CacheKey const, bool&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;rmw_cyclonedds_cpp::CDRWriter::CacheKey&gt;, rmw_cyclonedds_cpp::CDRWriter::CacheKey::Hash, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt;, true&gt;::at (7 samples, 0.37%)</title><rect x="807.2" y="741" width="4.3" height="15.0" fill="rgb(215,189,54)" rx="2" ry="2" />
<text  x="810.20" y="751.5" ></text>
</g>
<g >
<title>__accumulate_pelt_segments (1 samples, 0.05%)</title><rect x="338.9" y="901" width="0.6" height="15.0" fill="rgb(216,82,12)" rx="2" ry="2" />
<text  x="341.91" y="911.5" ></text>
</g>
<g >
<title>serdata_plist_from_ser (1 samples, 0.05%)</title><rect x="10.0" y="1173" width="0.6" height="15.0" fill="rgb(242,196,13)" rx="2" ry="2" />
<text  x="13.00" y="1183.5" ></text>
</g>
<g >
<title>[librcutils.so] (1 samples, 0.05%)</title><rect x="154.9" y="1205" width="0.7" height="15.0" fill="rgb(209,79,0)" rx="2" ry="2" />
<text  x="157.94" y="1215.5" ></text>
</g>
<g >
<title>hrtimer_start_range_ns (7 samples, 0.37%)</title><rect x="239.8" y="1013" width="4.3" height="15.0" fill="rgb(243,56,13)" rx="2" ry="2" />
<text  x="242.81" y="1023.5" ></text>
</g>
<g >
<title>sock_def_readable (1 samples, 0.05%)</title><rect x="1180.1" y="469" width="0.6" height="15.0" fill="rgb(216,29,17)" rx="2" ry="2" />
<text  x="1183.09" y="479.5" ></text>
</g>
<g >
<title>receiver_wake_function (6 samples, 0.31%)</title><rect x="1124.3" y="645" width="3.8" height="15.0" fill="rgb(211,134,51)" rx="2" ry="2" />
<text  x="1127.34" y="655.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;unsigned long  (2 samples, 0.10%)</title><rect x="821.4" y="773" width="1.3" height="15.0" fill="rgb(208,44,24)" rx="2" ry="2" />
<text  x="824.44" y="783.5" ></text>
</g>
<g >
<title>serdata_rmw_to_ser_ref (1 samples, 0.05%)</title><rect x="104.8" y="1253" width="0.6" height="15.0" fill="rgb(210,147,0)" rx="2" ry="2" />
<text  x="107.77" y="1263.5" ></text>
</g>
<g >
<title>[librmw_cyclonedds_cpp.so] (2 samples, 0.10%)</title><rect x="818.3" y="757" width="1.3" height="15.0" fill="rgb(231,27,33)" rx="2" ry="2" />
<text  x="821.35" y="767.5" ></text>
</g>
<g >
<title>ip_make_skb (1 samples, 0.05%)</title><rect x="1117.5" y="1125" width="0.6" height="15.0" fill="rgb(218,15,20)" rx="2" ry="2" />
<text  x="1120.53" y="1135.5" ></text>
</g>
<g >
<title>rclcpp::memory_strategies::allocator_memory_strategy::AllocatorMemoryStrategy&lt;std::allocator&lt;void&gt; &gt;::get_next_subscription (3 samples, 0.16%)</title><rect x="986.8" y="1141" width="1.9" height="15.0" fill="rgb(220,32,27)" rx="2" ry="2" />
<text  x="989.83" y="1151.5" ></text>
</g>
<g >
<title>do_syscall_64 (6 samples, 0.31%)</title><rect x="1169.6" y="1125" width="3.7" height="15.0" fill="rgb(222,168,25)" rx="2" ry="2" />
<text  x="1172.56" y="1135.5" ></text>
</g>
<g >
<title>kmem_cache_alloc_node (2 samples, 0.10%)</title><rect x="628.8" y="565" width="1.2" height="15.0" fill="rgb(211,203,7)" rx="2" ry="2" />
<text  x="631.80" y="575.5" ></text>
</g>
<g >
<title>serdata_plist_from_sample (1 samples, 0.05%)</title><rect x="1178.2" y="1173" width="0.7" height="15.0" fill="rgb(239,127,7)" rx="2" ry="2" />
<text  x="1181.23" y="1183.5" ></text>
</g>
<g >
<title>ddsrt_hh_lookup (1 samples, 0.05%)</title><rect x="134.5" y="1237" width="0.6" height="15.0" fill="rgb(222,128,20)" rx="2" ry="2" />
<text  x="137.50" y="1247.5" ></text>
</g>
<g >
<title>std_msgs::msg::rosidl_typesupport_introspection_cpp::size_function__Int32MultiArray__data (2 samples, 0.10%)</title><rect x="821.4" y="757" width="1.3" height="15.0" fill="rgb(233,27,24)" rx="2" ry="2" />
<text  x="824.44" y="767.5" ></text>
</g>
<g >
<title>__sys_sendmsg (2 samples, 0.10%)</title><rect x="1188.8" y="1221" width="1.2" height="15.0" fill="rgb(218,85,24)" rx="2" ry="2" />
<text  x="1191.76" y="1231.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (6 samples, 0.31%)</title><rect x="16.8" y="1125" width="3.7" height="15.0" fill="rgb(254,41,34)" rx="2" ry="2" />
<text  x="19.81" y="1135.5" ></text>
</g>
<g >
<title>_rcutils_fault_injection_maybe_fail (2 samples, 0.10%)</title><rect x="153.7" y="1205" width="1.2" height="15.0" fill="rgb(213,102,20)" rx="2" ry="2" />
<text  x="156.71" y="1215.5" ></text>
</g>
<g >
<title>__ip_dev_find (1 samples, 0.05%)</title><rect x="1118.1" y="1077" width="0.7" height="15.0" fill="rgb(213,125,27)" rx="2" ry="2" />
<text  x="1121.15" y="1087.5" ></text>
</g>
<g >
<title>__GI___pthread_mutex_lock (1 samples, 0.05%)</title><rect x="750.8" y="885" width="0.6" height="15.0" fill="rgb(234,79,6)" rx="2" ry="2" />
<text  x="753.83" y="895.5" ></text>
</g>
<g >
<title>__GI___pthread_mutex_lock (2 samples, 0.10%)</title><rect x="216.9" y="1157" width="1.2" height="15.0" fill="rgb(252,93,0)" rx="2" ry="2" />
<text  x="219.89" y="1167.5" ></text>
</g>
<g >
<title>std::__detail::_Map_base&lt;rmw_cyclonedds_cpp::CDRWriter::CacheKey, std::pair&lt;rmw_cyclonedds_cpp::CDRWriter::CacheKey const, bool&gt;, std::allocator&lt;std::pair&lt;rmw_cyclonedds_cpp::CDRWriter::CacheKey const, bool&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;rmw_cyclonedds_cpp::CDRWriter::CacheKey&gt;, rmw_cyclonedds_cpp::CDRWriter::CacheKey::Hash, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt;, true&gt;::at (4 samples, 0.21%)</title><rect x="780.6" y="821" width="2.4" height="15.0" fill="rgb(222,3,1)" rx="2" ry="2" />
<text  x="783.56" y="831.5" ></text>
</g>
<g >
<title>do_syscall_64 (1 samples, 0.05%)</title><rect x="21.8" y="1093" width="0.6" height="15.0" fill="rgb(219,54,47)" rx="2" ry="2" />
<text  x="24.77" y="1103.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, byte*, std::default_delete&lt;byte []&gt; &gt; (2 samples, 0.10%)</title><rect x="124.6" y="1253" width="1.2" height="15.0" fill="rgb(206,202,48)" rx="2" ry="2" />
<text  x="127.59" y="1263.5" ></text>
</g>
<g >
<title>x86_pmu_enable (19 samples, 1.00%)</title><rect x="24.9" y="917" width="11.7" height="15.0" fill="rgb(238,110,24)" rx="2" ry="2" />
<text  x="27.87" y="927.5" ></text>
</g>
<g >
<title>std::__detail::_Mod_range_hashing::operator (2 samples, 0.10%)</title><rect x="416.3" y="1109" width="1.3" height="15.0" fill="rgb(222,69,10)" rx="2" ry="2" />
<text  x="419.34" y="1119.5" ></text>
</g>
<g >
<title>perf_event_sched_in (24 samples, 1.26%)</title><rect x="268.3" y="965" width="14.9" height="15.0" fill="rgb(236,162,23)" rx="2" ry="2" />
<text  x="271.30" y="975.5" ></text>
</g>
<g >
<title>__kmalloc_reserve.isra.0 (5 samples, 0.26%)</title><rect x="625.1" y="565" width="3.1" height="15.0" fill="rgb(215,38,31)" rx="2" ry="2" />
<text  x="628.09" y="575.5" ></text>
</g>
<g >
<title>__memset_avx2_unaligned_erms (2 samples, 0.10%)</title><rect x="1006.7" y="1125" width="1.2" height="15.0" fill="rgb(253,92,1)" rx="2" ry="2" />
<text  x="1009.65" y="1135.5" ></text>
</g>
<g >
<title>ddsrt_sendmsg (1 samples, 0.05%)</title><rect x="1180.1" y="1077" width="0.6" height="15.0" fill="rgb(239,222,15)" rx="2" ry="2" />
<text  x="1183.09" y="1087.5" ></text>
</g>
<g >
<title>kmalloc_slab (1 samples, 0.05%)</title><rect x="627.6" y="533" width="0.6" height="15.0" fill="rgb(241,220,46)" rx="2" ry="2" />
<text  x="630.56" y="543.5" ></text>
</g>
<g >
<title>dev_queue_xmit (16 samples, 0.84%)</title><rect x="723.0" y="549" width="9.9" height="15.0" fill="rgb(219,53,9)" rx="2" ry="2" />
<text  x="725.96" y="559.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::size (1 samples, 0.05%)</title><rect x="961.4" y="1029" width="0.7" height="15.0" fill="rgb(247,147,1)" rx="2" ry="2" />
<text  x="964.43" y="1039.5" ></text>
</g>
<g >
<title>hrtimer_sleeper_start_expires (1 samples, 0.05%)</title><rect x="348.8" y="1045" width="0.6" height="15.0" fill="rgb(239,216,54)" rx="2" ry="2" />
<text  x="351.82" y="1055.5" ></text>
</g>
<g >
<title>create_thread_wrapper (7 samples, 0.37%)</title><rect x="16.2" y="1221" width="4.3" height="15.0" fill="rgb(216,105,3)" rx="2" ry="2" />
<text  x="19.19" y="1231.5" ></text>
</g>
<g >
<title>_raw_spin_lock (1 samples, 0.05%)</title><rect x="1146.6" y="1045" width="0.7" height="15.0" fill="rgb(247,212,42)" rx="2" ry="2" />
<text  x="1149.64" y="1055.5" ></text>
</g>
<g >
<title>__dev_queue_xmit (2 samples, 0.10%)</title><rect x="1177.0" y="789" width="1.2" height="15.0" fill="rgb(244,154,52)" rx="2" ry="2" />
<text  x="1179.99" y="799.5" ></text>
</g>
<g >
<title>nn_xmsg_submsg_setnext (1 samples, 0.05%)</title><rect x="921.8" y="917" width="0.6" height="15.0" fill="rgb(240,22,47)" rx="2" ry="2" />
<text  x="924.79" y="927.5" ></text>
</g>
<g >
<title>_copy_from_iter_full (1 samples, 0.05%)</title><rect x="1189.4" y="1077" width="0.6" height="15.0" fill="rgb(245,222,30)" rx="2" ry="2" />
<text  x="1192.38" y="1087.5" ></text>
</g>
<g >
<title>insert_sample_in_whc (36 samples, 1.89%)</title><rect x="885.9" y="917" width="22.3" height="15.0" fill="rgb(222,78,28)" rx="2" ry="2" />
<text  x="888.86" y="927.5" >i..</text>
</g>
<g >
<title>update_blocked_averages (2 samples, 0.10%)</title><rect x="1160.9" y="933" width="1.2" height="15.0" fill="rgb(237,178,44)" rx="2" ry="2" />
<text  x="1163.89" y="943.5" ></text>
</g>
<g >
<title>std::array&lt;char, 4ul&gt;::size (1 samples, 0.05%)</title><rect x="770.7" y="853" width="0.6" height="15.0" fill="rgb(236,111,27)" rx="2" ry="2" />
<text  x="773.65" y="863.5" ></text>
</g>
<g >
<title>insert_sample_in_whc (3 samples, 0.16%)</title><rect x="143.2" y="933" width="1.8" height="15.0" fill="rgb(231,155,48)" rx="2" ry="2" />
<text  x="146.18" y="943.5" ></text>
</g>
<g >
<title>rclcpp::Executor::execute_any_executable (721 samples, 37.85%)</title><rect x="534.7" y="1173" width="446.6" height="15.0" fill="rgb(230,2,39)" rx="2" ry="2" />
<text  x="537.65" y="1183.5" >rclcpp::Executor::execute_any_executable</text>
</g>
<g >
<title>os_startRoutineWrapper (74 samples, 3.88%)</title><rect x="1136.7" y="1237" width="45.9" height="15.0" fill="rgb(253,222,20)" rx="2" ry="2" />
<text  x="1139.73" y="1247.5" >os_s..</text>
</g>
<g >
<title>do_packet (10 samples, 0.52%)</title><rect x="37.3" y="1189" width="6.1" height="15.0" fill="rgb(254,180,42)" rx="2" ry="2" />
<text  x="40.25" y="1199.5" ></text>
</g>
<g >
<title>schedule (7 samples, 0.37%)</title><rect x="37.3" y="917" width="4.3" height="15.0" fill="rgb(239,23,2)" rx="2" ry="2" />
<text  x="40.25" y="927.5" ></text>
</g>
<g >
<title>__pthread_mutex_unlock_usercnt (1 samples, 0.05%)</title><rect x="1059.3" y="1109" width="0.6" height="15.0" fill="rgb(215,122,25)" rx="2" ry="2" />
<text  x="1062.30" y="1119.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (1 samples, 0.05%)</title><rect x="321.6" y="949" width="0.6" height="15.0" fill="rgb(247,207,18)" rx="2" ry="2" />
<text  x="324.57" y="959.5" ></text>
</g>
<g >
<title>tcache_get (4 samples, 0.21%)</title><rect x="856.1" y="853" width="2.5" height="15.0" fill="rgb(224,29,22)" rx="2" ry="2" />
<text  x="859.13" y="863.5" ></text>
</g>
<g >
<title>ddsi_plist_findparam_checking (1 samples, 0.05%)</title><rect x="10.0" y="1157" width="0.6" height="15.0" fill="rgb(216,104,24)" rx="2" ry="2" />
<text  x="13.00" y="1167.5" ></text>
</g>
<g >
<title>ip_output (1 samples, 0.05%)</title><rect x="1180.1" y="837" width="0.6" height="15.0" fill="rgb(228,182,26)" rx="2" ry="2" />
<text  x="1183.09" y="847.5" ></text>
</g>
<g >
<title>__pthread_mutex_cond_lock (1 samples, 0.05%)</title><rect x="1141.7" y="1141" width="0.6" height="15.0" fill="rgb(245,202,29)" rx="2" ry="2" />
<text  x="1144.69" y="1151.5" ></text>
</g>
<g >
<title>___sys_sendmsg (1 samples, 0.05%)</title><rect x="1180.1" y="965" width="0.6" height="15.0" fill="rgb(244,214,2)" rx="2" ry="2" />
<text  x="1183.09" y="975.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;rmw_cyclonedds_cpp::StructValueType const, std::default_delete&lt;rmw_cyclonedds_cpp::StructValueType const&gt; &gt;::_M_ptr (4 samples, 0.21%)</title><rect x="825.8" y="837" width="2.5" height="15.0" fill="rgb(239,155,46)" rx="2" ry="2" />
<text  x="828.78" y="847.5" ></text>
</g>
<g >
<title>ddsrt_time_monotonic (1 samples, 0.05%)</title><rect x="885.2" y="917" width="0.7" height="15.0" fill="rgb(210,119,36)" rx="2" ry="2" />
<text  x="888.24" y="927.5" ></text>
</g>
<g >
<title>std::unordered_map&lt;rmw_cyclonedds_cpp::CDRWriter::CacheKey, bool, rmw_cyclonedds_cpp::CDRWriter::CacheKey::Hash, std::equal_to&lt;rmw_cyclonedds_cpp::CDRWriter::CacheKey&gt;, std::allocator&lt;std::pair&lt;rmw_cyclonedds_cpp::CDRWriter::CacheKey const, bool&gt; &gt; &gt;::at (1 samples, 0.05%)</title><rect x="853.7" y="821" width="0.6" height="15.0" fill="rgb(233,190,36)" rx="2" ry="2" />
<text  x="856.65" y="831.5" ></text>
</g>
<g >
<title>rb_next (2 samples, 0.10%)</title><rect x="270.2" y="933" width="1.2" height="15.0" fill="rgb(220,64,4)" rx="2" ry="2" />
<text  x="273.16" y="943.5" ></text>
</g>
<g >
<title>__update_load_avg_cfs_rq (1 samples, 0.05%)</title><rect x="1149.7" y="933" width="0.7" height="15.0" fill="rgb(222,75,11)" rx="2" ry="2" />
<text  x="1152.74" y="943.5" ></text>
</g>
<g >
<title>rcutils_fault_injection_get_count (2 samples, 0.10%)</title><rect x="153.7" y="1189" width="1.2" height="15.0" fill="rgb(236,111,51)" rx="2" ry="2" />
<text  x="156.71" y="1199.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, rmw_cyclonedds_cpp::StructValueType const*, std::default_delete&lt;rmw_cyclonedds_cpp::StructValueType const&gt; &gt; (2 samples, 0.10%)</title><rect x="827.0" y="805" width="1.3" height="15.0" fill="rgb(225,82,37)" rx="2" ry="2" />
<text  x="830.02" y="815.5" ></text>
</g>
<g >
<title>__GI___pthread_mutex_unlock (27 samples, 1.42%)</title><rect x="352.5" y="1173" width="16.8" height="15.0" fill="rgb(225,205,11)" rx="2" ry="2" />
<text  x="355.54" y="1183.5" ></text>
</g>
<g >
<title>update_nohz_stats (16 samples, 0.84%)</title><rect x="332.7" y="949" width="9.9" height="15.0" fill="rgb(221,99,50)" rx="2" ry="2" />
<text  x="335.72" y="959.5" ></text>
</g>
<g >
<title>rclcpp::memory_strategies::allocator_memory_strategy::AllocatorMemoryStrategy&lt;std::allocator&lt;void&gt; &gt;::number_of_ready_clients (1 samples, 0.05%)</title><rect x="1063.0" y="1141" width="0.6" height="15.0" fill="rgb(248,179,16)" rx="2" ry="2" />
<text  x="1066.02" y="1151.5" ></text>
</g>
<g >
<title>rmw_cyclonedds_cpp::CDRWriter::serialize (67 samples, 3.52%)</title><rect x="783.0" y="853" width="41.5" height="15.0" fill="rgb(243,50,1)" rx="2" ry="2" />
<text  x="786.04" y="863.5" >rmw..</text>
</g>
<g >
<title>trigger_load_balance (1 samples, 0.05%)</title><rect x="1160.3" y="853" width="0.6" height="15.0" fill="rgb(225,100,14)" rx="2" ry="2" />
<text  x="1163.27" y="863.5" ></text>
</g>
<g >
<title>perf_pmu_enable.part.0 (11 samples, 0.58%)</title><rect x="1153.5" y="965" width="6.8" height="15.0" fill="rgb(223,195,48)" rx="2" ry="2" />
<text  x="1156.45" y="975.5" ></text>
</g>
<g >
<title>rcl_get_steady_time (2 samples, 0.10%)</title><rect x="165.5" y="1205" width="1.2" height="15.0" fill="rgb(234,195,19)" rx="2" ry="2" />
<text  x="168.48" y="1215.5" ></text>
</g>
<g >
<title>__pthread_mutex_unlock_usercnt (1 samples, 0.05%)</title><rect x="211.9" y="1125" width="0.7" height="15.0" fill="rgb(209,15,16)" rx="2" ry="2" />
<text  x="214.93" y="1135.5" ></text>
</g>
<g >
<title>__gthread_mutex_unlock (4 samples, 0.21%)</title><rect x="457.8" y="1173" width="2.5" height="15.0" fill="rgb(208,84,51)" rx="2" ry="2" />
<text  x="460.84" y="1183.5" ></text>
</g>
<g >
<title>set_next_task_idle (1 samples, 0.05%)</title><rect x="1164.0" y="981" width="0.6" height="15.0" fill="rgb(231,225,17)" rx="2" ry="2" />
<text  x="1166.98" y="991.5" ></text>
</g>
<g >
<title>__memset_avx2_unaligned_erms (2 samples, 0.10%)</title><rect x="1001.7" y="1125" width="1.2" height="15.0" fill="rgb(221,149,11)" rx="2" ry="2" />
<text  x="1004.70" y="1135.5" ></text>
</g>
<g >
<title>nn_freelist_push (2 samples, 0.10%)</title><rect x="897.0" y="853" width="1.3" height="15.0" fill="rgb(233,102,20)" rx="2" ry="2" />
<text  x="900.01" y="863.5" ></text>
</g>
<g >
<title>serdata_rmw_to_ser_ref (8 samples, 0.42%)</title><rect x="916.2" y="901" width="5.0" height="15.0" fill="rgb(229,220,23)" rx="2" ry="2" />
<text  x="919.22" y="911.5" ></text>
</g>
<g >
<title>std::_Bind&lt;void  (681 samples, 35.75%)</title><rect x="555.1" y="1109" width="421.8" height="15.0" fill="rgb(237,60,30)" rx="2" ry="2" />
<text  x="558.09" y="1119.5" >std::_Bind&lt;void </text>
</g>
<g >
<title>__ip_dev_find (8 samples, 0.42%)</title><rect x="640.6" y="613" width="4.9" height="15.0" fill="rgb(211,99,47)" rx="2" ry="2" />
<text  x="643.57" y="623.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;rmw_cyclonedds_cpp::CDRWriter::CacheKey, std::pair&lt;rmw_cyclonedds_cpp::CDRWriter::CacheKey const, bool&gt;, std::allocator&lt;std::pair&lt;rmw_cyclonedds_cpp::CDRWriter::CacheKey const, bool&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;rmw_cyclonedds_cpp::CDRWriter::CacheKey&gt;, rmw_cyclonedds_cpp::CDRWriter::CacheKey::Hash, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_bucket_index (1 samples, 0.05%)</title><rect x="837.5" y="741" width="0.7" height="15.0" fill="rgb(245,26,34)" rx="2" ry="2" />
<text  x="840.55" y="751.5" ></text>
</g>
<g >
<title>whc_default_get_state (3 samples, 0.16%)</title><rect x="932.3" y="917" width="1.9" height="15.0" fill="rgb(245,201,48)" rx="2" ry="2" />
<text  x="935.32" y="927.5" ></text>
</g>
<g >
<title>ip_finish_output2 (2 samples, 0.10%)</title><rect x="1177.0" y="821" width="1.2" height="15.0" fill="rgb(213,219,19)" rx="2" ry="2" />
<text  x="1179.99" y="831.5" ></text>
</g>
<g >
<title>schedule (21 samples, 1.10%)</title><rect x="23.6" y="997" width="13.0" height="15.0" fill="rgb(211,97,48)" rx="2" ry="2" />
<text  x="26.63" y="1007.5" ></text>
</g>
<g >
<title>kmem_cache_alloc (3 samples, 0.16%)</title><rect x="653.0" y="581" width="1.8" height="15.0" fill="rgb(233,35,19)" rx="2" ry="2" />
<text  x="655.96" y="591.5" ></text>
</g>
<g >
<title>group_sched_in (1 samples, 0.05%)</title><rect x="1152.8" y="901" width="0.7" height="15.0" fill="rgb(252,33,9)" rx="2" ry="2" />
<text  x="1155.83" y="911.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.05%)</title><rect x="721.7" y="437" width="0.6" height="15.0" fill="rgb(243,61,23)" rx="2" ry="2" />
<text  x="724.72" y="447.5" ></text>
</g>
<g >
<title>[libpthread-2.31.so] (1 samples, 0.05%)</title><rect x="133.3" y="1269" width="0.6" height="15.0" fill="rgb(220,46,30)" rx="2" ry="2" />
<text  x="136.27" y="1279.5" ></text>
</g>
<g >
<title>__update_load_avg_cfs_rq (4 samples, 0.21%)</title><rect x="337.1" y="917" width="2.4" height="15.0" fill="rgb(221,165,48)" rx="2" ry="2" />
<text  x="340.06" y="927.5" ></text>
</g>
<g >
<title>udp_sendmsg (197 samples, 10.34%)</title><rect x="612.7" y="677" width="122.0" height="15.0" fill="rgb(237,173,34)" rx="2" ry="2" />
<text  x="615.70" y="687.5" >udp_sendmsg</text>
</g>
<g >
<title>std::__detail::_Hash_node_value_base&lt;std::pair&lt;rmw_cyclonedds_cpp::CDRWriter::CacheKey const, bool&gt; &gt;::_M_v (1 samples, 0.05%)</title><rect x="779.9" y="821" width="0.7" height="15.0" fill="rgb(229,63,10)" rx="2" ry="2" />
<text  x="782.94" y="831.5" ></text>
</g>
<g >
<title>rcutils_string_map_key_existsn (1 samples, 0.05%)</title><rect x="523.5" y="1221" width="0.6" height="15.0" fill="rgb(213,55,15)" rx="2" ry="2" />
<text  x="526.50" y="1231.5" ></text>
</g>
<g >
<title>ddsrt_fibheap_extract_min (1 samples, 0.05%)</title><rect x="1168.3" y="1189" width="0.6" height="15.0" fill="rgb(207,160,36)" rx="2" ry="2" />
<text  x="1171.32" y="1199.5" ></text>
</g>
<g >
<title>update_curr (3 samples, 0.16%)</title><rect x="1147.9" y="949" width="1.8" height="15.0" fill="rgb(245,173,41)" rx="2" ry="2" />
<text  x="1150.88" y="959.5" ></text>
</g>
<g >
<title>[libddsc.so.0.8.0] (2 samples, 0.10%)</title><rect x="891.4" y="885" width="1.3" height="15.0" fill="rgb(238,202,42)" rx="2" ry="2" />
<text  x="894.44" y="895.5" ></text>
</g>
<g >
<title>__kmalloc_reserve.isra.0 (1 samples, 0.05%)</title><rect x="1117.5" y="1029" width="0.6" height="15.0" fill="rgb(242,208,9)" rx="2" ry="2" />
<text  x="1120.53" y="1039.5" ></text>
</g>
<g >
<title>std::__detail::_Hash_node_value_base&lt;std::pair&lt;rmw_event_type_t const, unsigned int&gt; &gt;::_M_valptr (1 samples, 0.05%)</title><rect x="431.2" y="1093" width="0.6" height="15.0" fill="rgb(206,190,54)" rx="2" ry="2" />
<text  x="434.21" y="1103.5" ></text>
</g>
<g >
<title>__pthread_mutex_unlock_usercnt (1 samples, 0.05%)</title><rect x="392.2" y="1093" width="0.6" height="15.0" fill="rgb(222,117,28)" rx="2" ry="2" />
<text  x="395.18" y="1103.5" ></text>
</g>
<g >
<title>futex_wake (1 samples, 0.05%)</title><rect x="1187.5" y="1205" width="0.6" height="15.0" fill="rgb(221,50,47)" rx="2" ry="2" />
<text  x="1190.52" y="1215.5" ></text>
</g>
<g >
<title>x86_pmu_enable (5 samples, 0.26%)</title><rect x="1170.2" y="965" width="3.1" height="15.0" fill="rgb(218,34,27)" rx="2" ry="2" />
<text  x="1173.18" y="975.5" ></text>
</g>
<g >
<title>__dynamic_cast (6 samples, 0.31%)</title><rect x="135.7" y="1253" width="3.8" height="15.0" fill="rgb(244,74,14)" rx="2" ry="2" />
<text  x="138.74" y="1263.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;int&gt;::allocate (5 samples, 0.26%)</title><rect x="945.3" y="981" width="3.1" height="15.0" fill="rgb(236,114,7)" rx="2" ry="2" />
<text  x="948.33" y="991.5" ></text>
</g>
<g >
<title>ddsrt_sockaddr_get_size (3 samples, 0.16%)</title><rect x="749.0" y="853" width="1.8" height="15.0" fill="rgb(251,107,5)" rx="2" ry="2" />
<text  x="751.97" y="863.5" ></text>
</g>
<g >
<title>rclcpp::executors::SingleThreadedExecutor::spin (935 samples, 49.08%)</title><rect x="528.5" y="1189" width="579.1" height="15.0" fill="rgb(238,48,14)" rx="2" ry="2" />
<text  x="531.46" y="1199.5" >rclcpp::executors::SingleThreadedExecutor::spin</text>
</g>
<g >
<title>udp_unicast_rcv_skb.isra.0 (7 samples, 0.37%)</title><rect x="1123.7" y="773" width="4.4" height="15.0" fill="rgb(253,66,33)" rx="2" ry="2" />
<text  x="1126.72" y="783.5" ></text>
</g>
<g >
<title>std::__detail::_Equal_helper&lt;rmw_cyclonedds_cpp::CDRWriter::CacheKey, std::pair&lt;rmw_cyclonedds_cpp::CDRWriter::CacheKey const, bool&gt;, std::__detail::_Select1st, std::equal_to&lt;rmw_cyclonedds_cpp::CDRWriter::CacheKey&gt;, unsigned long, true&gt;::_S_equals (3 samples, 0.16%)</title><rect x="788.0" y="725" width="1.9" height="15.0" fill="rgb(251,224,46)" rx="2" ry="2" />
<text  x="790.99" y="735.5" ></text>
</g>
<g >
<title>native_write_msr (19 samples, 1.00%)</title><rect x="24.9" y="885" width="11.7" height="15.0" fill="rgb(232,221,53)" rx="2" ry="2" />
<text  x="27.87" y="895.5" ></text>
</g>
<g >
<title>__update_idle_core (1 samples, 0.05%)</title><rect x="1186.9" y="1125" width="0.6" height="15.0" fill="rgb(215,215,50)" rx="2" ry="2" />
<text  x="1189.90" y="1135.5" ></text>
</g>
<g >
<title>ddsi_tkmap_instance_unref (1 samples, 0.05%)</title><rect x="591.0" y="933" width="0.6" height="15.0" fill="rgb(221,143,1)" rx="2" ry="2" />
<text  x="594.02" y="943.5" ></text>
</g>
<g >
<title>rmw_cyclonedds_cpp::CDRWriter::serialize_many (1 samples, 0.05%)</title><rect x="798.5" y="773" width="0.6" height="15.0" fill="rgb(215,193,36)" rx="2" ry="2" />
<text  x="801.52" y="783.5" ></text>
</g>
<g >
<title>ip_rcv_finish (9 samples, 0.47%)</title><rect x="1122.5" y="869" width="5.6" height="15.0" fill="rgb(226,25,4)" rx="2" ry="2" />
<text  x="1125.48" y="879.5" ></text>
</g>
<g >
<title>ttwu_do_activate (1 samples, 0.05%)</title><rect x="42.2" y="949" width="0.6" height="15.0" fill="rgb(227,182,47)" rx="2" ry="2" />
<text  x="45.21" y="959.5" ></text>
</g>
<g >
<title>__dynamic_cast (1 samples, 0.05%)</title><rect x="829.5" y="853" width="0.6" height="15.0" fill="rgb(235,206,2)" rx="2" ry="2" />
<text  x="832.50" y="863.5" ></text>
</g>
<g >
<title>finish_task_switch (6 samples, 0.31%)</title><rect x="1169.6" y="1013" width="3.7" height="15.0" fill="rgb(247,181,25)" rx="2" ry="2" />
<text  x="1172.56" y="1023.5" ></text>
</g>
<g >
<title>fib_table_lookup (10 samples, 0.52%)</title><rect x="645.5" y="613" width="6.2" height="15.0" fill="rgb(210,153,13)" rx="2" ry="2" />
<text  x="648.53" y="623.5" ></text>
</g>
<g >
<title>__libc_recvmsg (1 samples, 0.05%)</title><rect x="21.8" y="1141" width="0.6" height="15.0" fill="rgb(250,147,39)" rx="2" ry="2" />
<text  x="24.77" y="1151.5" ></text>
</g>
<g >
<title>__GI___pthread_mutex_unlock (1 samples, 0.05%)</title><rect x="884.6" y="901" width="0.6" height="15.0" fill="rgb(240,21,46)" rx="2" ry="2" />
<text  x="887.62" y="911.5" ></text>
</g>
<g >
<title>__sched_text_start (21 samples, 1.10%)</title><rect x="23.6" y="981" width="13.0" height="15.0" fill="rgb(254,67,14)" rx="2" ry="2" />
<text  x="26.63" y="991.5" ></text>
</g>
<g >
<title>rclcpp::executors::SingleThreadedExecutor::spin (3 samples, 0.16%)</title><rect x="143.2" y="1205" width="1.8" height="15.0" fill="rgb(209,78,37)" rx="2" ry="2" />
<text  x="146.18" y="1215.5" ></text>
</g>
<g >
<title>std::__detail::_Equal_helper&lt;rmw_event_type_t, std::pair&lt;rmw_event_type_t const, unsigned int&gt;, std::__detail::_Select1st, std::equal_to&lt;rmw_event_type_t&gt;, unsigned long, false&gt;::_S_equals (9 samples, 0.47%)</title><rect x="430.0" y="1125" width="5.5" height="15.0" fill="rgb(211,28,19)" rx="2" ry="2" />
<text  x="432.97" y="1135.5" ></text>
</g>
<g >
<title>[liblibstatistics_collector.so] (3 samples, 0.16%)</title><rect x="457.8" y="1157" width="1.9" height="15.0" fill="rgb(233,178,32)" rx="2" ry="2" />
<text  x="460.84" y="1167.5" ></text>
</g>
<g >
<title>_int_free (3 samples, 0.16%)</title><rect x="1009.1" y="1109" width="1.9" height="15.0" fill="rgb(250,79,38)" rx="2" ry="2" />
<text  x="1012.13" y="1119.5" ></text>
</g>
<g >
<title>nn_xmsg_setdstN (1 samples, 0.05%)</title><rect x="102.3" y="1253" width="0.6" height="15.0" fill="rgb(227,9,7)" rx="2" ry="2" />
<text  x="105.29" y="1263.5" ></text>
</g>
<g >
<title>netif_rx (1 samples, 0.05%)</title><rect x="1128.1" y="949" width="0.6" height="15.0" fill="rgb(211,117,3)" rx="2" ry="2" />
<text  x="1131.06" y="959.5" ></text>
</g>
<g >
<title>std::__detail::_Equal_helper&lt;rmw_cyclonedds_cpp::CDRWriter::CacheKey, std::pair&lt;rmw_cyclonedds_cpp::CDRWriter::CacheKey const, bool&gt;, std::__detail::_Select1st, std::equal_to&lt;rmw_cyclonedds_cpp::CDRWriter::CacheKey&gt;, unsigned long, true&gt;::_S_equals (3 samples, 0.16%)</title><rect x="809.1" y="677" width="1.8" height="15.0" fill="rgb(223,130,40)" rx="2" ry="2" />
<text  x="812.06" y="687.5" ></text>
</g>
<g >
<title>ddsrt_avl_root (2 samples, 0.10%)</title><rect x="889.0" y="901" width="1.2" height="15.0" fill="rgb(243,14,0)" rx="2" ry="2" />
<text  x="891.96" y="911.5" ></text>
</g>
<g >
<title>[libpthread-2.31.so] (3 samples, 0.16%)</title><rect x="133.9" y="1253" width="1.8" height="15.0" fill="rgb(222,93,6)" rx="2" ry="2" />
<text  x="136.88" y="1263.5" ></text>
</g>
<g >
<title>account_entity_dequeue (1 samples, 0.05%)</title><rect x="1183.8" y="1093" width="0.6" height="15.0" fill="rgb(247,84,35)" rx="2" ry="2" />
<text  x="1186.81" y="1103.5" ></text>
</g>
<g >
<title>__local_bh_enable_ip (1 samples, 0.05%)</title><rect x="1180.1" y="773" width="0.6" height="15.0" fill="rgb(222,152,12)" rx="2" ry="2" />
<text  x="1183.09" y="783.5" ></text>
</g>
<g >
<title>std::__detail::_Hash_code_base&lt;rmw_cyclonedds_cpp::CDRWriter::CacheKey, std::pair&lt;rmw_cyclonedds_cpp::CDRWriter::CacheKey const, bool&gt;, std::__detail::_Select1st, rmw_cyclonedds_cpp::CDRWriter::CacheKey::Hash, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, true&gt;::_M_h2 (1 samples, 0.05%)</title><rect x="811.5" y="693" width="0.7" height="15.0" fill="rgb(253,193,19)" rx="2" ry="2" />
<text  x="814.53" y="703.5" ></text>
</g>
<g >
<title>start_thread (10 samples, 0.52%)</title><rect x="37.3" y="1253" width="6.1" height="15.0" fill="rgb(247,125,9)" rx="2" ry="2" />
<text  x="40.25" y="1263.5" ></text>
</g>
<g >
<title>__perf_event_task_sched_in (4 samples, 0.21%)</title><rect x="16.8" y="981" width="2.5" height="15.0" fill="rgb(226,44,8)" rx="2" ry="2" />
<text  x="19.81" y="991.5" ></text>
</g>
<g >
<title>std::__detail::_Hash_code_base&lt;rmw_cyclonedds_cpp::CDRWriter::CacheKey, std::pair&lt;rmw_cyclonedds_cpp::CDRWriter::CacheKey const, bool&gt;, std::__detail::_Select1st, rmw_cyclonedds_cpp::CDRWriter::CacheKey::Hash, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, true&gt;::_M_bucket_index (1 samples, 0.05%)</title><rect x="849.3" y="677" width="0.6" height="15.0" fill="rgb(237,9,26)" rx="2" ry="2" />
<text  x="852.32" y="687.5" ></text>
</g>
<g >
<title>dds_entity_trigger_set (12 samples, 0.63%)</title><rect x="543.9" y="1093" width="7.5" height="15.0" fill="rgb(243,38,45)" rx="2" ry="2" />
<text  x="546.94" y="1103.5" ></text>
</g>
<g >
<title>dequeue_entity (1 samples, 0.05%)</title><rect x="1183.8" y="1109" width="0.6" height="15.0" fill="rgb(230,9,18)" rx="2" ry="2" />
<text  x="1186.81" y="1119.5" ></text>
</g>
<g >
<title>ddsrt_mutex_unlock (2 samples, 0.10%)</title><rect x="1173.3" y="1189" width="1.2" height="15.0" fill="rgb(251,22,37)" rx="2" ry="2" />
<text  x="1176.28" y="1199.5" ></text>
</g>
<g >
<title>ddsrt_hh_lookup (1 samples, 0.05%)</title><rect x="542.7" y="1045" width="0.6" height="15.0" fill="rgb(221,57,5)" rx="2" ry="2" />
<text  x="545.70" y="1055.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;1ul, std::default_delete&lt;byte []&gt; &gt;::_M_head (2 samples, 0.10%)</title><rect x="903.8" y="757" width="1.3" height="15.0" fill="rgb(237,188,12)" rx="2" ry="2" />
<text  x="906.83" y="767.5" ></text>
</g>
<g >
<title>__libc_disable_asynccancel (1 samples, 0.05%)</title><rect x="604.6" y="805" width="0.7" height="15.0" fill="rgb(206,88,15)" rx="2" ry="2" />
<text  x="607.65" y="815.5" ></text>
</g>
<g >
<title>default_wake_function (6 samples, 0.31%)</title><rect x="1124.3" y="613" width="3.8" height="15.0" fill="rgb(210,115,11)" rx="2" ry="2" />
<text  x="1127.34" y="623.5" ></text>
</g>
<g >
<title>[librmw_cyclonedds_cpp.so] (2 samples, 0.10%)</title><rect x="487.6" y="1109" width="1.2" height="15.0" fill="rgb(246,203,6)" rx="2" ry="2" />
<text  x="490.57" y="1119.5" ></text>
</g>
<g >
<title>std::vector&lt;long, std::allocator&lt;long&gt; &gt;::end (1 samples, 0.05%)</title><rect x="469.0" y="1205" width="0.6" height="15.0" fill="rgb(216,214,20)" rx="2" ry="2" />
<text  x="471.99" y="1215.5" ></text>
</g>
<g >
<title>ddsrt_mutex_unlock (1 samples, 0.05%)</title><rect x="132.6" y="1253" width="0.7" height="15.0" fill="rgb(229,143,35)" rx="2" ry="2" />
<text  x="135.65" y="1263.5" ></text>
</g>
<g >
<title>do_syscall_64 (7 samples, 0.37%)</title><rect x="11.9" y="1109" width="4.3" height="15.0" fill="rgb(246,210,42)" rx="2" ry="2" />
<text  x="14.86" y="1119.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_base&lt;rmw_cyclonedds_cpp::CDRWriter::CacheKey, std::pair&lt;rmw_cyclonedds_cpp::CDRWriter::CacheKey const, bool&gt;, std::__detail::_Select1st, std::equal_to&lt;rmw_cyclonedds_cpp::CDRWriter::CacheKey&gt;, rmw_cyclonedds_cpp::CDRWriter::CacheKey::Hash, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_equals (2 samples, 0.10%)</title><rect x="795.4" y="709" width="1.3" height="15.0" fill="rgb(241,74,25)" rx="2" ry="2" />
<text  x="798.43" y="719.5" ></text>
</g>
<g >
<title>sock_alloc_send_pskb (14 samples, 0.73%)</title><rect x="625.1" y="613" width="8.7" height="15.0" fill="rgb(245,20,47)" rx="2" ry="2" />
<text  x="628.09" y="623.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (5 samples, 0.26%)</title><rect x="675.9" y="421" width="3.1" height="15.0" fill="rgb(229,99,7)" rx="2" ry="2" />
<text  x="678.88" y="431.5" ></text>
</g>
<g >
<title>ip_protocol_deliver_rcu (1 samples, 0.05%)</title><rect x="1180.1" y="581" width="0.6" height="15.0" fill="rgb(216,182,9)" rx="2" ry="2" />
<text  x="1183.09" y="591.5" ></text>
</g>
<g >
<title>add_Heartbeat (4 samples, 0.21%)</title><rect x="936.0" y="885" width="2.5" height="15.0" fill="rgb(239,127,1)" rx="2" ry="2" />
<text  x="939.04" y="895.5" ></text>
</g>
<g >
<title>rclcpp::Waitable::get_number_of_ready_events (2 samples, 0.10%)</title><rect x="114.7" y="1253" width="1.2" height="15.0" fill="rgb(213,41,38)" rx="2" ry="2" />
<text  x="117.68" y="1263.5" ></text>
</g>
<g >
<title>ctx_sched_in (1 samples, 0.05%)</title><rect x="1169.6" y="965" width="0.6" height="15.0" fill="rgb(240,138,10)" rx="2" ry="2" />
<text  x="1172.56" y="975.5" ></text>
</g>
<g >
<title>__local_bh_enable_ip (83 samples, 4.36%)</title><rect x="671.5" y="549" width="51.5" height="15.0" fill="rgb(231,227,6)" rx="2" ry="2" />
<text  x="674.54" y="559.5" >__loc..</text>
</g>
<g >
<title>__pthread_mutex_unlock_usercnt (2 samples, 0.10%)</title><rect x="1173.3" y="1157" width="1.2" height="15.0" fill="rgb(247,82,52)" rx="2" ry="2" />
<text  x="1176.28" y="1167.5" ></text>
</g>
<g >
<title>rmw_cyclonedds_cpp::CDRWriter::lookup_trivially_serialized (3 samples, 0.16%)</title><rect x="844.4" y="789" width="1.8" height="15.0" fill="rgb(226,26,33)" rx="2" ry="2" />
<text  x="847.36" y="799.5" ></text>
</g>
<g >
<title>__GI___clone (10 samples, 0.52%)</title><rect x="10.0" y="1269" width="6.2" height="15.0" fill="rgb(206,67,47)" rx="2" ry="2" />
<text  x="13.00" y="1279.5" ></text>
</g>
<g >
<title>dds_write (3 samples, 0.16%)</title><rect x="143.2" y="981" width="1.8" height="15.0" fill="rgb(210,51,9)" rx="2" ry="2" />
<text  x="146.18" y="991.5" ></text>
</g>
<g >
<title>update_load_avg (1 samples, 0.05%)</title><rect x="321.6" y="837" width="0.6" height="15.0" fill="rgb(250,185,1)" rx="2" ry="2" />
<text  x="324.57" y="847.5" ></text>
</g>
<g >
<title>__GI___libc_malloc (3 samples, 0.16%)</title><rect x="946.6" y="949" width="1.8" height="15.0" fill="rgb(247,116,1)" rx="2" ry="2" />
<text  x="949.57" y="959.5" ></text>
</g>
<g >
<title>enqueue_to_backlog (1 samples, 0.05%)</title><rect x="727.3" y="453" width="0.6" height="15.0" fill="rgb(221,164,7)" rx="2" ry="2" />
<text  x="730.29" y="463.5" ></text>
</g>
<g >
<title>[librmw_cyclonedds_cpp.so] (3 samples, 0.16%)</title><rect x="475.8" y="1157" width="1.9" height="15.0" fill="rgb(226,166,21)" rx="2" ry="2" />
<text  x="478.81" y="1167.5" ></text>
</g>
<g >
<title>intel_pmu_disable_all (1 samples, 0.05%)</title><rect x="249.1" y="933" width="0.6" height="15.0" fill="rgb(246,83,39)" rx="2" ry="2" />
<text  x="252.10" y="943.5" ></text>
</g>
<g >
<title>std::vector&lt;std_msgs::msg::MultiArrayDimension_&lt;std::allocator&lt;void&gt; &gt;, std::allocator&lt;std_msgs::msg::MultiArrayDimension_&lt;std::allocator&lt;void&gt; &gt; &gt; &gt;::~vector (3 samples, 0.16%)</title><rect x="972.0" y="1013" width="1.8" height="15.0" fill="rgb(232,112,9)" rx="2" ry="2" />
<text  x="974.96" y="1023.5" ></text>
</g>
<g >
<title>rcutils_logging_logger_is_enabled_for (20 samples, 1.05%)</title><rect x="169.8" y="1237" width="12.4" height="15.0" fill="rgb(224,123,49)" rx="2" ry="2" />
<text  x="172.81" y="1247.5" ></text>
</g>
<g >
<title>tick_sched_timer (1 samples, 0.05%)</title><rect x="1160.3" y="917" width="0.6" height="15.0" fill="rgb(220,130,15)" rx="2" ry="2" />
<text  x="1163.27" y="927.5" ></text>
</g>
<g >
<title>perf_pmu_disable.part.0 (1 samples, 0.05%)</title><rect x="249.1" y="949" width="0.6" height="15.0" fill="rgb(224,7,24)" rx="2" ry="2" />
<text  x="252.10" y="959.5" ></text>
</g>
<g >
<title>rclcpp::Publisher&lt;std_msgs::msg::Int32MultiArray_&lt;std::allocator&lt;void&gt; &gt;, std::allocator&lt;void&gt; &gt;::do_inter_process_publish (608 samples, 31.92%)</title><rect x="565.0" y="1029" width="376.6" height="15.0" fill="rgb(213,109,37)" rx="2" ry="2" />
<text  x="568.00" y="1039.5" >rclcpp::Publisher&lt;std_msgs::msg::Int32MultiArray_&lt;s..</text>
</g>
<g >
<title>__x64_sys_futex (2 samples, 0.10%)</title><rect x="1173.3" y="1109" width="1.2" height="15.0" fill="rgb(208,118,20)" rx="2" ry="2" />
<text  x="1176.28" y="1119.5" ></text>
</g>
<g >
<title>mem_cgroup_try_charge (1 samples, 0.05%)</title><rect x="42.8" y="1061" width="0.6" height="15.0" fill="rgb(248,45,48)" rx="2" ry="2" />
<text  x="45.83" y="1071.5" ></text>
</g>
<g >
<title>hrtimer_reprogram (1 samples, 0.05%)</title><rect x="239.2" y="1013" width="0.6" height="15.0" fill="rgb(229,23,18)" rx="2" ry="2" />
<text  x="242.19" y="1023.5" ></text>
</g>
<g >
<title>do_packet (3 samples, 0.16%)</title><rect x="21.1" y="1189" width="1.9" height="15.0" fill="rgb(219,122,11)" rx="2" ry="2" />
<text  x="24.15" y="1199.5" ></text>
</g>
<g >
<title>handle_equal (1 samples, 0.05%)</title><rect x="390.9" y="1109" width="0.7" height="15.0" fill="rgb(210,37,3)" rx="2" ry="2" />
<text  x="393.94" y="1119.5" ></text>
</g>
<g >
<title>perf_event_sched_in (3 samples, 0.16%)</title><rect x="1184.4" y="1109" width="1.9" height="15.0" fill="rgb(223,40,35)" rx="2" ry="2" />
<text  x="1187.43" y="1119.5" ></text>
</g>
<g >
<title>fpregs_assert_state_consistent (1 samples, 0.05%)</title><rect x="748.4" y="773" width="0.6" height="15.0" fill="rgb(248,145,43)" rx="2" ry="2" />
<text  x="751.35" y="783.5" ></text>
</g>
<g >
<title>create_thread_wrapper (10 samples, 0.52%)</title><rect x="10.0" y="1221" width="6.2" height="15.0" fill="rgb(206,13,33)" rx="2" ry="2" />
<text  x="13.00" y="1231.5" ></text>
</g>
<g >
<title>native_write_msr (6 samples, 0.31%)</title><rect x="12.5" y="917" width="3.7" height="15.0" fill="rgb(213,90,45)" rx="2" ry="2" />
<text  x="15.48" y="927.5" ></text>
</g>
<g >
<title>[librclcpp.so] (2 samples, 0.10%)</title><rect x="536.5" y="1157" width="1.2" height="15.0" fill="rgb(214,3,7)" rx="2" ry="2" />
<text  x="539.51" y="1167.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;int, std::allocator&lt;int&gt; &gt;::~_Vector_base (4 samples, 0.21%)</title><rect x="968.9" y="1013" width="2.4" height="15.0" fill="rgb(250,74,15)" rx="2" ry="2" />
<text  x="971.87" y="1023.5" ></text>
</g>
<g >
<title>select_task_rq_fair (3 samples, 0.16%)</title><rect x="694.5" y="117" width="1.8" height="15.0" fill="rgb(209,177,48)" rx="2" ry="2" />
<text  x="697.46" y="127.5" ></text>
</g>
<g >
<title>schedule_hrtimeout_range_clock (21 samples, 1.10%)</title><rect x="23.6" y="1013" width="13.0" height="15.0" fill="rgb(222,55,17)" rx="2" ry="2" />
<text  x="26.63" y="1023.5" ></text>
</g>
<g >
<title>__GI___pthread_mutex_lock (1 samples, 0.05%)</title><rect x="548.9" y="1045" width="0.6" height="15.0" fill="rgb(231,169,48)" rx="2" ry="2" />
<text  x="551.90" y="1055.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;serdata_rmw, std::default_delete&lt;serdata_rmw&gt; &gt;::unique_ptr&lt;std::default_delete&lt;serdata_rmw&gt;, void&gt; (4 samples, 0.21%)</title><rect x="874.1" y="901" width="2.5" height="15.0" fill="rgb(223,91,52)" rx="2" ry="2" />
<text  x="877.09" y="911.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (8 samples, 0.42%)</title><rect x="37.3" y="1109" width="4.9" height="15.0" fill="rgb(234,5,19)" rx="2" ry="2" />
<text  x="40.25" y="1119.5" ></text>
</g>
<g >
<title>ip_send_skb (121 samples, 6.35%)</title><rect x="659.2" y="645" width="74.9" height="15.0" fill="rgb(224,12,6)" rx="2" ry="2" />
<text  x="662.15" y="655.5" >ip_send_..</text>
</g>
<g >
<title>std::__detail::_Select1st::operator (2 samples, 0.10%)</title><rect x="788.6" y="709" width="1.3" height="15.0" fill="rgb(231,84,0)" rx="2" ry="2" />
<text  x="791.61" y="719.5" ></text>
</g>
<g >
<title>gcreq_queue_thread (7 samples, 0.37%)</title><rect x="16.2" y="1205" width="4.3" height="15.0" fill="rgb(208,106,53)" rx="2" ry="2" />
<text  x="19.19" y="1215.5" ></text>
</g>
<g >
<title>[libstdc++.so.6.0.28] (2 samples, 0.10%)</title><rect x="945.3" y="949" width="1.3" height="15.0" fill="rgb(224,154,6)" rx="2" ry="2" />
<text  x="948.33" y="959.5" ></text>
</g>
<g >
<title>visit_groups_merge (1 samples, 0.05%)</title><rect x="37.3" y="821" width="0.6" height="15.0" fill="rgb(215,82,40)" rx="2" ry="2" />
<text  x="40.25" y="831.5" ></text>
</g>
<g >
<title>__libc_recvmsg (1 samples, 0.05%)</title><rect x="21.8" y="1125" width="0.6" height="15.0" fill="rgb(224,31,47)" rx="2" ry="2" />
<text  x="24.77" y="1135.5" ></text>
</g>
<g >
<title>ip_send_skb (15 samples, 0.79%)</title><rect x="1119.4" y="1109" width="9.3" height="15.0" fill="rgb(242,136,7)" rx="2" ry="2" />
<text  x="1122.39" y="1119.5" ></text>
</g>
<g >
<title>__perf_event_task_sched_in (7 samples, 0.37%)</title><rect x="11.9" y="981" width="4.3" height="15.0" fill="rgb(240,179,22)" rx="2" ry="2" />
<text  x="14.86" y="991.5" ></text>
</g>
<g >
<title>operator new (2 samples, 0.10%)</title><rect x="1020.9" y="1125" width="1.2" height="15.0" fill="rgb(254,33,16)" rx="2" ry="2" />
<text  x="1023.90" y="1135.5" ></text>
</g>
<g >
<title>__perf_event_task_sched_in (3 samples, 0.16%)</title><rect x="1184.4" y="1125" width="1.9" height="15.0" fill="rgb(230,146,44)" rx="2" ry="2" />
<text  x="1187.43" y="1135.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (1 samples, 0.05%)</title><rect x="1160.3" y="949" width="0.6" height="15.0" fill="rgb(240,53,7)" rx="2" ry="2" />
<text  x="1163.27" y="959.5" ></text>
</g>
<g >
<title>update_cfs_group (1 samples, 0.05%)</title><rect x="1180.1" y="277" width="0.6" height="15.0" fill="rgb(251,213,28)" rx="2" ry="2" />
<text  x="1183.09" y="287.5" ></text>
</g>
<g >
<title>__GI___pthread_mutex_unlock (1 samples, 0.05%)</title><rect x="939.1" y="933" width="0.7" height="15.0" fill="rgb(234,151,14)" rx="2" ry="2" />
<text  x="942.13" y="943.5" ></text>
</g>
<g >
<title>update_curr (4 samples, 0.21%)</title><rect x="252.8" y="949" width="2.5" height="15.0" fill="rgb(246,103,47)" rx="2" ry="2" />
<text  x="255.81" y="959.5" ></text>
</g>
<g >
<title>ddsrt_mutex_trylock (1 samples, 0.05%)</title><rect x="906.3" y="869" width="0.6" height="15.0" fill="rgb(243,221,25)" rx="2" ry="2" />
<text  x="909.30" y="879.5" ></text>
</g>
<g >
<title>security_sock_rcv_skb (1 samples, 0.05%)</title><rect x="716.8" y="245" width="0.6" height="15.0" fill="rgb(231,190,26)" rx="2" ry="2" />
<text  x="719.76" y="255.5" ></text>
</g>
<g >
<title>ddsi_udp_conn_write (1 samples, 0.05%)</title><rect x="1180.1" y="1093" width="0.6" height="15.0" fill="rgb(221,90,9)" rx="2" ry="2" />
<text  x="1183.09" y="1103.5" ></text>
</g>
<g >
<title>dst_init (1 samples, 0.05%)</title><rect x="652.3" y="581" width="0.7" height="15.0" fill="rgb(231,200,23)" rx="2" ry="2" />
<text  x="655.34" y="591.5" ></text>
</g>
<g >
<title>__GI___pthread_mutex_trylock (1 samples, 0.05%)</title><rect x="906.3" y="853" width="0.6" height="15.0" fill="rgb(246,161,48)" rx="2" ry="2" />
<text  x="909.30" y="863.5" ></text>
</g>
<g >
<title>do_syscall_64 (12 samples, 0.63%)</title><rect x="1182.6" y="1253" width="7.4" height="15.0" fill="rgb(205,75,47)" rx="2" ry="2" />
<text  x="1185.57" y="1263.5" ></text>
</g>
<g >
<title>__pthread_cond_timedwait (45 samples, 2.36%)</title><rect x="1140.4" y="1173" width="27.9" height="15.0" fill="rgb(215,147,11)" rx="2" ry="2" />
<text  x="1143.45" y="1183.5" >_..</text>
</g>
<g >
<title>[librmw_cyclonedds_cpp.so] (2 samples, 0.10%)</title><rect x="493.1" y="1157" width="1.3" height="15.0" fill="rgb(219,95,19)" rx="2" ry="2" />
<text  x="496.15" y="1167.5" ></text>
</g>
<g >
<title>ddsrt_mutex_lock (1 samples, 0.05%)</title><rect x="592.9" y="917" width="0.6" height="15.0" fill="rgb(205,1,33)" rx="2" ry="2" />
<text  x="595.88" y="927.5" ></text>
</g>
<g >
<title>os_sockWaitsetWait (23 samples, 1.21%)</title><rect x="23.0" y="1189" width="14.3" height="15.0" fill="rgb(251,186,17)" rx="2" ry="2" />
<text  x="26.01" y="1199.5" ></text>
</g>
<g >
<title>core_sys_select (22 samples, 1.15%)</title><rect x="23.6" y="1077" width="13.7" height="15.0" fill="rgb(253,60,25)" rx="2" ry="2" />
<text  x="26.63" y="1087.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;int&gt; &gt;::deallocate (4 samples, 0.21%)</title><rect x="968.9" y="981" width="2.4" height="15.0" fill="rgb(207,141,16)" rx="2" ry="2" />
<text  x="971.87" y="991.5" ></text>
</g>
<g >
<title>operator new (5 samples, 0.26%)</title><rect x="945.3" y="965" width="3.1" height="15.0" fill="rgb(219,3,25)" rx="2" ry="2" />
<text  x="948.33" y="975.5" ></text>
</g>
<g >
<title>get_futex_key_refs.isra.0 (1 samples, 0.05%)</title><rect x="1165.8" y="1013" width="0.7" height="15.0" fill="rgb(237,102,10)" rx="2" ry="2" />
<text  x="1168.84" y="1023.5" ></text>
</g>
<g >
<title>rcutils_logging_get_logger_effective_level (22 samples, 1.15%)</title><rect x="510.5" y="1237" width="13.6" height="15.0" fill="rgb(217,17,53)" rx="2" ry="2" />
<text  x="513.49" y="1247.5" ></text>
</g>
<g >
<title>lock_hrtimer_base (2 samples, 0.10%)</title><rect x="242.9" y="997" width="1.2" height="15.0" fill="rgb(236,37,8)" rx="2" ry="2" />
<text  x="245.90" y="1007.5" ></text>
</g>
<g >
<title>kick_ilb (1 samples, 0.05%)</title><rect x="1160.3" y="837" width="0.6" height="15.0" fill="rgb(253,197,3)" rx="2" ry="2" />
<text  x="1163.27" y="847.5" ></text>
</g>
<g >
<title>__perf_event_task_sched_in (6 samples, 0.31%)</title><rect x="1169.6" y="997" width="3.7" height="15.0" fill="rgb(217,5,0)" rx="2" ry="2" />
<text  x="1172.56" y="1007.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;rmw_cyclonedds_cpp::CDRWriter::CacheKey, std::pair&lt;rmw_cyclonedds_cpp::CDRWriter::CacheKey const, bool&gt;, std::allocator&lt;std::pair&lt;rmw_cyclonedds_cpp::CDRWriter::CacheKey const, bool&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;rmw_cyclonedds_cpp::CDRWriter::CacheKey&gt;, rmw_cyclonedds_cpp::CDRWriter::CacheKey::Hash, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_find_node (3 samples, 0.16%)</title><rect x="781.2" y="805" width="1.8" height="15.0" fill="rgb(240,179,30)" rx="2" ry="2" />
<text  x="784.18" y="815.5" ></text>
</g>
<g >
<title>receiver_wake_function (1 samples, 0.05%)</title><rect x="713.0" y="197" width="0.7" height="15.0" fill="rgb(249,55,37)" rx="2" ry="2" />
<text  x="716.04" y="207.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;rmw_cyclonedds_cpp::CDRWriter::CacheKey, std::pair&lt;rmw_cyclonedds_cpp::CDRWriter::CacheKey const, bool&gt;, std::allocator&lt;std::pair&lt;rmw_cyclonedds_cpp::CDRWriter::CacheKey const, bool&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;rmw_cyclonedds_cpp::CDRWriter::CacheKey&gt;, rmw_cyclonedds_cpp::CDRWriter::CacheKey::Hash, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_bucket_index (1 samples, 0.05%)</title><rect x="849.3" y="693" width="0.6" height="15.0" fill="rgb(242,77,54)" rx="2" ry="2" />
<text  x="852.32" y="703.5" ></text>
</g>
<g >
<title>native_write_msr (4 samples, 0.21%)</title><rect x="16.8" y="917" width="2.5" height="15.0" fill="rgb(215,49,14)" rx="2" ry="2" />
<text  x="19.81" y="927.5" ></text>
</g>
<g >
<title>tick_sched_handle (1 samples, 0.05%)</title><rect x="321.6" y="901" width="0.6" height="15.0" fill="rgb(219,163,27)" rx="2" ry="2" />
<text  x="324.57" y="911.5" ></text>
</g>
<g >
<title>ddsrt_sendmsg (2 samples, 0.10%)</title><rect x="1177.0" y="1109" width="1.2" height="15.0" fill="rgb(228,9,25)" rx="2" ry="2" />
<text  x="1179.99" y="1119.5" ></text>
</g>
<g >
<title>schedule (7 samples, 0.37%)</title><rect x="11.9" y="1029" width="4.3" height="15.0" fill="rgb(220,145,24)" rx="2" ry="2" />
<text  x="14.86" y="1039.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (22 samples, 1.15%)</title><rect x="23.6" y="1141" width="13.7" height="15.0" fill="rgb(205,88,48)" rx="2" ry="2" />
<text  x="26.63" y="1151.5" ></text>
</g>
<g >
<title>std::__detail::_Equal_helper&lt;rmw_cyclonedds_cpp::CDRWriter::CacheKey, std::pair&lt;rmw_cyclonedds_cpp::CDRWriter::CacheKey const, bool&gt;, std::__detail::_Select1st, std::equal_to&lt;rmw_cyclonedds_cpp::CDRWriter::CacheKey&gt;, unsigned long, true&gt;::_S_equals (2 samples, 0.10%)</title><rect x="845.0" y="693" width="1.2" height="15.0" fill="rgb(236,180,19)" rx="2" ry="2" />
<text  x="847.98" y="703.5" ></text>
</g>
<g >
<title>__sys_sendmsg (1 samples, 0.05%)</title><rect x="609.0" y="773" width="0.6" height="15.0" fill="rgb(242,195,46)" rx="2" ry="2" />
<text  x="611.98" y="783.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::operator[] (6 samples, 0.31%)</title><rect x="941.6" y="1045" width="3.7" height="15.0" fill="rgb(250,153,40)" rx="2" ry="2" />
<text  x="944.61" y="1055.5" ></text>
</g>
<g >
<title>udp_send_skb.isra.0 (15 samples, 0.79%)</title><rect x="1119.4" y="1125" width="9.3" height="15.0" fill="rgb(245,221,37)" rx="2" ry="2" />
<text  x="1122.39" y="1135.5" ></text>
</g>
<g >
<title>ddsrt_mutex_lock (1 samples, 0.05%)</title><rect x="543.3" y="1077" width="0.6" height="15.0" fill="rgb(252,128,13)" rx="2" ry="2" />
<text  x="546.32" y="1087.5" ></text>
</g>
<g >
<title>do_syscall_64 (1 samples, 0.05%)</title><rect x="42.2" y="1045" width="0.6" height="15.0" fill="rgb(218,88,51)" rx="2" ry="2" />
<text  x="45.21" y="1055.5" ></text>
</g>
<g >
<title>__libc_sendmsg (233 samples, 12.23%)</title><rect x="604.6" y="821" width="144.4" height="15.0" fill="rgb(225,130,29)" rx="2" ry="2" />
<text  x="607.65" y="831.5" >__libc_sendmsg</text>
</g>
<g >
<title>event_sched_in.isra.0 (1 samples, 0.05%)</title><rect x="1114.4" y="1029" width="0.6" height="15.0" fill="rgb(240,173,12)" rx="2" ry="2" />
<text  x="1117.43" y="1039.5" ></text>
</g>
<g >
<title>do_user_addr_fault (1 samples, 0.05%)</title><rect x="42.8" y="1125" width="0.6" height="15.0" fill="rgb(223,70,4)" rx="2" ry="2" />
<text  x="45.83" y="1135.5" ></text>
</g>
<g >
<title>rmw_publish (3 samples, 0.16%)</title><rect x="143.2" y="1013" width="1.8" height="15.0" fill="rgb(244,8,45)" rx="2" ry="2" />
<text  x="146.18" y="1023.5" ></text>
</g>
<g >
<title>std::__detail::_Hash_code_base&lt;rmw_cyclonedds_cpp::CDRWriter::CacheKey, std::pair&lt;rmw_cyclonedds_cpp::CDRWriter::CacheKey const, bool&gt;, std::__detail::_Select1st, rmw_cyclonedds_cpp::CDRWriter::CacheKey::Hash, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, true&gt;::_M_bucket_index (1 samples, 0.05%)</title><rect x="794.8" y="693" width="0.6" height="15.0" fill="rgb(232,40,15)" rx="2" ry="2" />
<text  x="797.81" y="703.5" ></text>
</g>
<g >
<title>ddsi_udp_conn_write (243 samples, 12.76%)</title><rect x="600.3" y="869" width="150.5" height="15.0" fill="rgb(237,79,38)" rx="2" ry="2" />
<text  x="603.31" y="879.5" >ddsi_udp_conn_write</text>
</g>
<g >
<title>[librmw_cyclonedds_cpp.so] (15 samples, 0.79%)</title><rect x="192.1" y="1205" width="9.3" height="15.0" fill="rgb(210,175,16)" rx="2" ry="2" />
<text  x="195.11" y="1215.5" ></text>
</g>
<g >
<title>sock_sendmsg (2 samples, 0.10%)</title><rect x="1188.8" y="1173" width="1.2" height="15.0" fill="rgb(241,206,18)" rx="2" ry="2" />
<text  x="1191.76" y="1183.5" ></text>
</g>
<g >
<title>std::_Mu&lt;MinimalPublisher*, false, false&gt;::operator (1 samples, 0.05%)</title><rect x="976.9" y="1109" width="0.6" height="15.0" fill="rgb(207,65,25)" rx="2" ry="2" />
<text  x="979.92" y="1119.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;rmw_cyclonedds_cpp::CDRWriter::CacheKey, std::pair&lt;rmw_cyclonedds_cpp::CDRWriter::CacheKey const, bool&gt;, std::allocator&lt;std::pair&lt;rmw_cyclonedds_cpp::CDRWriter::CacheKey const, bool&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;rmw_cyclonedds_cpp::CDRWriter::CacheKey&gt;, rmw_cyclonedds_cpp::CDRWriter::CacheKey::Hash, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_bucket_index (1 samples, 0.05%)</title><rect x="848.7" y="725" width="0.6" height="15.0" fill="rgb(239,217,33)" rx="2" ry="2" />
<text  x="851.70" y="735.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;rmw_cyclonedds_cpp::CDRWriter::CacheKey, std::pair&lt;rmw_cyclonedds_cpp::CDRWriter::CacheKey const, bool&gt;, std::allocator&lt;std::pair&lt;rmw_cyclonedds_cpp::CDRWriter::CacheKey const, bool&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;rmw_cyclonedds_cpp::CDRWriter::CacheKey&gt;, rmw_cyclonedds_cpp::CDRWriter::CacheKey::Hash, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_find_node (7 samples, 0.37%)</title><rect x="785.5" y="773" width="4.4" height="15.0" fill="rgb(215,120,25)" rx="2" ry="2" />
<text  x="788.52" y="783.5" ></text>
</g>
<g >
<title>__update_load_avg_se (1 samples, 0.05%)</title><rect x="321.6" y="821" width="0.6" height="15.0" fill="rgb(221,131,26)" rx="2" ry="2" />
<text  x="324.57" y="831.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;serdata_rmw, std::default_delete&lt;serdata_rmw&gt; &gt;::_M_ptr (1 samples, 0.05%)</title><rect x="128.3" y="1253" width="0.6" height="15.0" fill="rgb(210,229,22)" rx="2" ry="2" />
<text  x="131.31" y="1263.5" ></text>
</g>
<g >
<title>std::__detail::_Equal_helper&lt;rmw_cyclonedds_cpp::CDRWriter::CacheKey, std::pair&lt;rmw_cyclonedds_cpp::CDRWriter::CacheKey const, bool&gt;, std::__detail::_Select1st, std::equal_to&lt;rmw_cyclonedds_cpp::CDRWriter::CacheKey&gt;, unsigned long, true&gt;::_S_equals (1 samples, 0.05%)</title><rect x="795.4" y="693" width="0.6" height="15.0" fill="rgb(210,95,16)" rx="2" ry="2" />
<text  x="798.43" y="703.5" ></text>
</g>
<g >
<title>autoremove_wake_function (1 samples, 0.05%)</title><rect x="1180.1" y="389" width="0.6" height="15.0" fill="rgb(208,45,51)" rx="2" ry="2" />
<text  x="1183.09" y="399.5" ></text>
</g>
<g >
<title>__pthread_mutex_unlock_usercnt (1 samples, 0.05%)</title><rect x="224.9" y="1141" width="0.7" height="15.0" fill="rgb(208,5,34)" rx="2" ry="2" />
<text  x="227.94" y="1151.5" ></text>
</g>
<g >
<title>futex_abstimed_wait_cancelable (41 samples, 2.15%)</title><rect x="1142.9" y="1141" width="25.4" height="15.0" fill="rgb(238,58,20)" rx="2" ry="2" />
<text  x="1145.92" y="1151.5" >f..</text>
</g>
<g >
<title>__pthread_cond_timedwait (213 samples, 11.18%)</title><rect x="218.7" y="1173" width="132.0" height="15.0" fill="rgb(225,189,37)" rx="2" ry="2" />
<text  x="221.75" y="1183.5" >__pthread_cond_t..</text>
</g>
<g >
<title>std::_Function_handler&lt;void const*  (5 samples, 0.26%)</title><rect x="818.3" y="773" width="3.1" height="15.0" fill="rgb(237,229,36)" rx="2" ry="2" />
<text  x="821.35" y="783.5" ></text>
</g>
<g >
<title>ipv4_pktinfo_prepare (1 samples, 0.05%)</title><rect x="687.0" y="277" width="0.6" height="15.0" fill="rgb(251,193,5)" rx="2" ry="2" />
<text  x="690.03" y="287.5" ></text>
</g>
<g >
<title>____sys_sendmsg (20 samples, 1.05%)</title><rect x="1116.3" y="1189" width="12.4" height="15.0" fill="rgb(214,211,22)" rx="2" ry="2" />
<text  x="1119.29" y="1199.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, MinimalPublisher*&gt;::_M_head (2 samples, 0.10%)</title><rect x="975.7" y="1061" width="1.2" height="15.0" fill="rgb(250,43,12)" rx="2" ry="2" />
<text  x="978.68" y="1071.5" ></text>
</g>
<g >
<title>rmw_publish (3 samples, 0.16%)</title><rect x="143.2" y="997" width="1.8" height="15.0" fill="rgb(207,12,35)" rx="2" ry="2" />
<text  x="146.18" y="1007.5" ></text>
</g>
<g >
<title>__update_load_avg_cfs_rq (1 samples, 0.05%)</title><rect x="255.9" y="933" width="0.6" height="15.0" fill="rgb(228,23,33)" rx="2" ry="2" />
<text  x="258.91" y="943.5" ></text>
</g>
<g >
<title>__udp4_lib_rcv (8 samples, 0.42%)</title><rect x="1123.1" y="789" width="5.0" height="15.0" fill="rgb(246,35,44)" rx="2" ry="2" />
<text  x="1126.10" y="799.5" ></text>
</g>
<g >
<title>futex_wake (1 samples, 0.05%)</title><rect x="1173.9" y="1077" width="0.6" height="15.0" fill="rgb(243,95,4)" rx="2" ry="2" />
<text  x="1176.90" y="1087.5" ></text>
</g>
<g >
<title>__GI___pthread_mutex_unlock (1 samples, 0.05%)</title><rect x="1096.5" y="1125" width="0.6" height="15.0" fill="rgb(211,124,21)" rx="2" ry="2" />
<text  x="1099.47" y="1135.5" ></text>
</g>
<g >
<title>std::lock_guard&lt;std::mutex&gt;::lock_guard (1 samples, 0.05%)</title><rect x="906.9" y="853" width="0.6" height="15.0" fill="rgb(220,85,26)" rx="2" ry="2" />
<text  x="909.92" y="863.5" ></text>
</g>
<g >
<title>std::__detail::_Select1st::operator (6 samples, 0.31%)</title><rect x="431.8" y="1109" width="3.7" height="15.0" fill="rgb(222,62,1)" rx="2" ry="2" />
<text  x="434.83" y="1119.5" ></text>
</g>
<g >
<title>hrtimer_init_sleeper (1 samples, 0.05%)</title><rect x="19.9" y="1045" width="0.6" height="15.0" fill="rgb(208,184,2)" rx="2" ry="2" />
<text  x="22.91" y="1055.5" ></text>
</g>
<g >
<title>ddsrt_mutex_unlock (1 samples, 0.05%)</title><rect x="392.2" y="1125" width="0.6" height="15.0" fill="rgb(250,150,54)" rx="2" ry="2" />
<text  x="395.18" y="1135.5" ></text>
</g>
<g >
<title>rmw_cyclonedds_cpp::CDRWriter::serialize (10 samples, 0.52%)</title><rect x="841.3" y="805" width="6.2" height="15.0" fill="rgb(219,148,30)" rx="2" ry="2" />
<text  x="844.27" y="815.5" ></text>
</g>
<g >
<title>rclcpp::Executor::get_next_ready_executable_from_map (33 samples, 1.73%)</title><rect x="1083.5" y="1173" width="20.4" height="15.0" fill="rgb(242,213,39)" rx="2" ry="2" />
<text  x="1086.46" y="1183.5" ></text>
</g>
<g >
<title>pick_next_task_idle (1 samples, 0.05%)</title><rect x="346.3" y="1013" width="0.7" height="15.0" fill="rgb(210,97,48)" rx="2" ry="2" />
<text  x="349.35" y="1023.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;int, std::allocator&lt;int&gt; &gt;::_M_deallocate (4 samples, 0.21%)</title><rect x="968.9" y="997" width="2.4" height="15.0" fill="rgb(210,86,0)" rx="2" ry="2" />
<text  x="971.87" y="1007.5" ></text>
</g>
<g >
<title>inet_sendmsg (19 samples, 1.00%)</title><rect x="1116.9" y="1157" width="11.8" height="15.0" fill="rgb(244,72,26)" rx="2" ry="2" />
<text  x="1119.91" y="1167.5" ></text>
</g>
<g >
<title>__sys_sendmsg (224 samples, 11.76%)</title><rect x="609.6" y="757" width="138.8" height="15.0" fill="rgb(239,27,47)" rx="2" ry="2" />
<text  x="612.60" y="767.5" >__sys_sendmsg</text>
</g>
<g >
<title>default_wake_function (33 samples, 1.73%)</title><rect x="690.7" y="149" width="20.5" height="15.0" fill="rgb(226,222,26)" rx="2" ry="2" />
<text  x="693.75" y="159.5" ></text>
</g>
<g >
<title>smp_apic_timer_interrupt (1 samples, 0.05%)</title><rect x="321.6" y="965" width="0.6" height="15.0" fill="rgb(223,219,11)" rx="2" ry="2" />
<text  x="324.57" y="975.5" ></text>
</g>
<g >
<title>__ip_select_ident (1 samples, 0.05%)</title><rect x="633.8" y="629" width="0.6" height="15.0" fill="rgb(236,11,34)" rx="2" ry="2" />
<text  x="636.76" y="639.5" ></text>
</g>
<g >
<title>do_syscall_64 (2 samples, 0.10%)</title><rect x="1177.0" y="1045" width="1.2" height="15.0" fill="rgb(253,85,49)" rx="2" ry="2" />
<text  x="1179.99" y="1055.5" ></text>
</g>
<g >
<title>____sys_sendmsg (2 samples, 0.10%)</title><rect x="1177.0" y="981" width="1.2" height="15.0" fill="rgb(211,2,51)" rx="2" ry="2" />
<text  x="1179.99" y="991.5" ></text>
</g>
<g >
<title>ip_send_check (1 samples, 0.05%)</title><rect x="733.5" y="613" width="0.6" height="15.0" fill="rgb(221,177,43)" rx="2" ry="2" />
<text  x="736.49" y="623.5" ></text>
</g>
<g >
<title>nn_xpack_send (1 samples, 0.05%)</title><rect x="593.5" y="933" width="0.6" height="15.0" fill="rgb(234,188,33)" rx="2" ry="2" />
<text  x="596.50" y="943.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.05%)</title><rect x="1180.1" y="597" width="0.6" height="15.0" fill="rgb(232,19,53)" rx="2" ry="2" />
<text  x="1183.09" y="607.5" ></text>
</g>
<g >
<title>__GI___pthread_mutex_unlock (1 samples, 0.05%)</title><rect x="211.9" y="1141" width="0.7" height="15.0" fill="rgb(239,31,1)" rx="2" ry="2" />
<text  x="214.93" y="1151.5" ></text>
</g>
</g>
</svg>
